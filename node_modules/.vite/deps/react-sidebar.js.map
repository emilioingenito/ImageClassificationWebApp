{
  "version": 3,
  "sources": ["../../@babel/runtime/helpers/esm/defineProperty.js", "../../@babel/runtime/helpers/esm/objectSpread.js", "../../react-sidebar/dist/react-sidebar.esm.js", "dep:react-sidebar"],
  "sourcesContent": ["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}", "import defineProperty from \"./defineProperty.js\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys.push.apply(ownKeys, Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}", "import _objectSpread from '@babel/runtime/helpers/objectSpread';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar CANCEL_DISTANCE_ON_SCROLL = 20;\nvar defaultStyles = {\n  root: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflow: \"hidden\"\n  },\n  sidebar: {\n    zIndex: 2,\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    transition: \"transform .3s ease-out\",\n    WebkitTransition: \"-webkit-transform .3s ease-out\",\n    willChange: \"transform\",\n    overflowY: \"auto\"\n  },\n  content: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflowY: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    transition: \"left .3s ease-out, right .3s ease-out\"\n  },\n  overlay: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 0,\n    visibility: \"hidden\",\n    transition: \"opacity .3s ease-out, visibility .3s ease-out\",\n    backgroundColor: \"rgba(0,0,0,.3)\"\n  },\n  dragHandle: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    bottom: 0\n  }\n};\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Sidebar, _Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      // the detected width of the sidebar in pixels\n      sidebarWidth: props.defaultSidebarWidth,\n      // keep track of touching params\n      touchIdentifier: null,\n      touchStartX: null,\n      touchCurrentX: null,\n      // if touch is supported by the browser\n      dragSupported: false\n    };\n    _this.overlayClicked = _this.overlayClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchStart = _this.onTouchStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchMove = _this.onTouchMove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchEnd = _this.onTouchEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onScroll = _this.onScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveSidebarRef = _this.saveSidebarRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Sidebar.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var isIos = /iPad|iPhone|iPod/.test(navigator ? navigator.userAgent : \"\");\n    this.setState({\n      dragSupported: typeof window === \"object\" && \"ontouchstart\" in window && !isIos\n    });\n    this.saveSidebarWidth();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    // filter out the updates when we're touching\n    if (!this.isTouching()) {\n      this.saveSidebarWidth();\n    }\n  };\n\n  _proto.onTouchStart = function onTouchStart(ev) {\n    // filter out if a user starts swiping with a second finger\n    if (!this.isTouching()) {\n      var touch = ev.targetTouches[0];\n      this.setState({\n        touchIdentifier: touch.identifier,\n        touchStartX: touch.clientX,\n        touchCurrentX: touch.clientX\n      });\n    }\n  };\n\n  _proto.onTouchMove = function onTouchMove(ev) {\n    if (this.isTouching()) {\n      for (var ind = 0; ind < ev.targetTouches.length; ind++) {\n        // we only care about the finger that we are tracking\n        if (ev.targetTouches[ind].identifier === this.state.touchIdentifier) {\n          this.setState({\n            touchCurrentX: ev.targetTouches[ind].clientX\n          });\n          break;\n        }\n      }\n    }\n  };\n\n  _proto.onTouchEnd = function onTouchEnd() {\n    if (this.isTouching()) {\n      // trigger a change to open if sidebar has been dragged beyond dragToggleDistance\n      var touchWidth = this.touchSidebarWidth();\n\n      if (this.props.open && touchWidth < this.state.sidebarWidth - this.props.dragToggleDistance || !this.props.open && touchWidth > this.props.dragToggleDistance) {\n        this.props.onSetOpen(!this.props.open);\n      }\n\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // This logic helps us prevents the user from sliding the sidebar horizontally\n  // while scrolling the sidebar vertically. When a scroll event comes in, we're\n  // cancelling the ongoing gesture if it did not move horizontally much.\n\n\n  _proto.onScroll = function onScroll() {\n    if (this.isTouching() && this.inCancelDistanceOnScroll()) {\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // True if the on going gesture X distance is less than the cancel distance\n\n\n  _proto.inCancelDistanceOnScroll = function inCancelDistanceOnScroll() {\n    var cancelDistanceOnScroll;\n\n    if (this.props.pullRight) {\n      cancelDistanceOnScroll = Math.abs(this.state.touchCurrentX - this.state.touchStartX) < CANCEL_DISTANCE_ON_SCROLL;\n    } else {\n      cancelDistanceOnScroll = Math.abs(this.state.touchStartX - this.state.touchCurrentX) < CANCEL_DISTANCE_ON_SCROLL;\n    }\n\n    return cancelDistanceOnScroll;\n  };\n\n  _proto.isTouching = function isTouching() {\n    return this.state.touchIdentifier !== null;\n  };\n\n  _proto.overlayClicked = function overlayClicked() {\n    if (this.props.open) {\n      this.props.onSetOpen(false);\n    }\n  };\n\n  _proto.saveSidebarWidth = function saveSidebarWidth() {\n    var width = this.sidebar.offsetWidth;\n\n    if (width !== this.state.sidebarWidth) {\n      this.setState({\n        sidebarWidth: width\n      });\n    }\n  };\n\n  _proto.saveSidebarRef = function saveSidebarRef(node) {\n    this.sidebar = node;\n  }; // calculate the sidebarWidth based on current touch info\n\n\n  _proto.touchSidebarWidth = function touchSidebarWidth() {\n    // if the sidebar is open and start point of drag is inside the sidebar\n    // we will only drag the distance they moved their finger\n    // otherwise we will move the sidebar to be below the finger.\n    if (this.props.pullRight) {\n      if (this.props.open && window.innerWidth - this.state.touchStartX < this.state.sidebarWidth) {\n        if (this.state.touchCurrentX > this.state.touchStartX) {\n          return this.state.sidebarWidth + this.state.touchStartX - this.state.touchCurrentX;\n        }\n\n        return this.state.sidebarWidth;\n      }\n\n      return Math.min(window.innerWidth - this.state.touchCurrentX, this.state.sidebarWidth);\n    }\n\n    if (this.props.open && this.state.touchStartX < this.state.sidebarWidth) {\n      if (this.state.touchCurrentX > this.state.touchStartX) {\n        return this.state.sidebarWidth;\n      }\n\n      return this.state.sidebarWidth - this.state.touchStartX + this.state.touchCurrentX;\n    }\n\n    return Math.min(this.state.touchCurrentX, this.state.sidebarWidth);\n  };\n\n  _proto.render = function render() {\n    var sidebarStyle = _objectSpread({}, defaultStyles.sidebar, this.props.styles.sidebar);\n\n    var contentStyle = _objectSpread({}, defaultStyles.content, this.props.styles.content);\n\n    var overlayStyle = _objectSpread({}, defaultStyles.overlay, this.props.styles.overlay);\n\n    var useTouch = this.state.dragSupported && this.props.touch;\n    var isTouching = this.isTouching();\n    var rootProps = {\n      className: this.props.rootClassName,\n      style: _objectSpread({}, defaultStyles.root, this.props.styles.root),\n      role: \"navigation\",\n      id: this.props.rootId\n    };\n    var dragHandle;\n    var hasBoxShadow = this.props.shadow && (isTouching || this.props.open || this.props.docked); // sidebarStyle right/left\n\n    if (this.props.pullRight) {\n      sidebarStyle.right = 0;\n      sidebarStyle.transform = \"translateX(100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"-2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    } else {\n      sidebarStyle.left = 0;\n      sidebarStyle.transform = \"translateX(-100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(-100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    }\n\n    if (isTouching) {\n      var percentage = this.touchSidebarWidth() / this.state.sidebarWidth; // slide open to what we dragged\n\n      if (this.props.pullRight) {\n        sidebarStyle.transform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n      } else {\n        sidebarStyle.transform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n      } // fade overlay to match distance of drag\n\n\n      overlayStyle.opacity = percentage;\n      overlayStyle.visibility = \"visible\";\n    } else if (this.props.docked) {\n      // show sidebar\n      if (this.state.sidebarWidth !== 0) {\n        sidebarStyle.transform = \"translateX(0%)\";\n        sidebarStyle.WebkitTransform = \"translateX(0%)\";\n      } // make space on the left/right side of the content for the sidebar\n\n\n      if (this.props.pullRight) {\n        contentStyle.right = this.state.sidebarWidth + \"px\";\n      } else {\n        contentStyle.left = this.state.sidebarWidth + \"px\";\n      }\n    } else if (this.props.open) {\n      // slide open sidebar\n      sidebarStyle.transform = \"translateX(0%)\";\n      sidebarStyle.WebkitTransform = \"translateX(0%)\"; // show overlay\n\n      overlayStyle.opacity = 1;\n      overlayStyle.visibility = \"visible\";\n    }\n\n    if (isTouching || !this.props.transitions) {\n      sidebarStyle.transition = \"none\";\n      sidebarStyle.WebkitTransition = \"none\";\n      contentStyle.transition = \"none\";\n      overlayStyle.transition = \"none\";\n    }\n\n    if (useTouch) {\n      if (this.props.open) {\n        rootProps.onTouchStart = this.onTouchStart;\n        rootProps.onTouchMove = this.onTouchMove;\n        rootProps.onTouchEnd = this.onTouchEnd;\n        rootProps.onTouchCancel = this.onTouchEnd;\n        rootProps.onScroll = this.onScroll;\n      } else {\n        var dragHandleStyle = _objectSpread({}, defaultStyles.dragHandle, this.props.styles.dragHandle);\n\n        dragHandleStyle.width = this.props.touchHandleWidth; // dragHandleStyle right/left\n\n        if (this.props.pullRight) {\n          dragHandleStyle.right = 0;\n        } else {\n          dragHandleStyle.left = 0;\n        }\n\n        dragHandle = React.createElement(\"div\", {\n          style: dragHandleStyle,\n          onTouchStart: this.onTouchStart,\n          onTouchMove: this.onTouchMove,\n          onTouchEnd: this.onTouchEnd,\n          onTouchCancel: this.onTouchEnd\n        });\n      }\n    }\n\n    return React.createElement(\"div\", rootProps, React.createElement(\"div\", {\n      className: this.props.sidebarClassName,\n      style: sidebarStyle,\n      ref: this.saveSidebarRef,\n      id: this.props.sidebarId\n    }, this.props.sidebar), React.createElement(\"div\", {\n      className: this.props.overlayClassName,\n      style: overlayStyle,\n      onClick: this.overlayClicked,\n      id: this.props.overlayId\n    }), React.createElement(\"div\", {\n      className: this.props.contentClassName,\n      style: contentStyle,\n      id: this.props.contentId\n    }, dragHandle, this.props.children));\n  };\n\n  return Sidebar;\n}(Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Sidebar.propTypes = {\n  // main content to render\n  children: PropTypes.node.isRequired,\n  // styles\n  styles: PropTypes.shape({\n    root: PropTypes.object,\n    sidebar: PropTypes.object,\n    content: PropTypes.object,\n    overlay: PropTypes.object,\n    dragHandle: PropTypes.object\n  }),\n  // root component optional class\n  rootClassName: PropTypes.string,\n  // sidebar optional class\n  sidebarClassName: PropTypes.string,\n  // content optional class\n  contentClassName: PropTypes.string,\n  // overlay optional class\n  overlayClassName: PropTypes.string,\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n  // boolean if sidebar should be docked\n  docked: PropTypes.bool,\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n  // boolean if transitions should be disabled\n  transitions: PropTypes.bool,\n  // boolean if touch gestures are enabled\n  touch: PropTypes.bool,\n  // max distance from the edge we can start touching\n  touchHandleWidth: PropTypes.number,\n  // Place the sidebar on the right\n  pullRight: PropTypes.bool,\n  // Enable/Disable sidebar shadow\n  shadow: PropTypes.bool,\n  // distance we have to drag the sidebar to toggle open state\n  dragToggleDistance: PropTypes.number,\n  // callback called when the overlay is clicked\n  onSetOpen: PropTypes.func,\n  // Initial sidebar width when page loads\n  defaultSidebarWidth: PropTypes.number,\n  // root component optional id\n  rootId: PropTypes.string,\n  // sidebar optional id\n  sidebarId: PropTypes.string,\n  // content optional id\n  contentId: PropTypes.string,\n  // overlay optional id\n  overlayId: PropTypes.string\n} : void 0;\nSidebar.defaultProps = {\n  docked: false,\n  open: false,\n  transitions: true,\n  touch: true,\n  touchHandleWidth: 20,\n  pullRight: false,\n  shadow: true,\n  dragToggleDistance: 30,\n  onSetOpen: function onSetOpen() {},\n  styles: {},\n  defaultSidebarWidth: 0\n};\n\nexport default Sidebar;\n", "import d from \"./node_modules/react-sidebar/dist/react-sidebar.esm.js\";export default d;"],
  "mappings": ";;;;;;;;;;;;;;;AAAe,SAAR,gBAAiC,KAAK,KAAK,OAAO;AACvD,MAAI,OAAO,KAAK;AACd,WAAO,eAAe,KAAK,KAAK;AAAA,MAC9B;AAAA,MACA,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,IACZ,CAAC;AAAA,EACH,OAAO;AACL,QAAI,OAAO;AAAA,EACb;AACA,SAAO;AACT;;;ACXe,SAAR,cAA+B,QAAQ;AAC5C,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,QAAI,SAAS,UAAU,MAAM,OAAO,OAAO,UAAU,EAAE,IAAI,CAAC;AAC5D,QAAI,UAAU,OAAO,KAAK,MAAM;AAChC,QAAI,OAAO,OAAO,0BAA0B,YAAY;AACtD,cAAQ,KAAK,MAAM,SAAS,OAAO,sBAAsB,MAAM,EAAE,OAAO,SAAU,KAAK;AACrF,eAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,MACtD,CAAC,CAAC;AAAA,IACJ;AACA,YAAQ,QAAQ,SAAU,KAAK;AAC7B,sBAAe,QAAQ,KAAK,OAAO,IAAI;AAAA,IACzC,CAAC;AAAA,EACH;AACA,SAAO;AACT;;;ACZA,mBAAiC;AACjC,wBAAsB;AAEtB,IAAI,4BAA4B;AAChC,IAAI,gBAAgB;AAAA,EAClB,MAAM;AAAA,IACJ,UAAU;AAAA,IACV,KAAK;AAAA,IACL,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,UAAU;AAAA,EACZ;AAAA,EACA,SAAS;AAAA,IACP,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,KAAK;AAAA,IACL,QAAQ;AAAA,IACR,YAAY;AAAA,IACZ,kBAAkB;AAAA,IAClB,YAAY;AAAA,IACZ,WAAW;AAAA,EACb;AAAA,EACA,SAAS;AAAA,IACP,UAAU;AAAA,IACV,KAAK;AAAA,IACL,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,yBAAyB;AAAA,IACzB,YAAY;AAAA,EACd;AAAA,EACA,SAAS;AAAA,IACP,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,KAAK;AAAA,IACL,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,iBAAiB;AAAA,EACnB;AAAA,EACA,YAAY;AAAA,IACV,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,KAAK;AAAA,IACL,QAAQ;AAAA,EACV;AACF;AAEA,IAAI,UAEJ,SAAU,YAAY;AACpB,iBAAeA,UAAS,UAAU;AAElC,WAASA,SAAQ,OAAO;AACtB,QAAI;AAEJ,YAAQ,WAAW,KAAK,MAAM,KAAK,KAAK;AACxC,UAAM,QAAQ;AAAA,MAEZ,cAAc,MAAM;AAAA,MAEpB,iBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,eAAe;AAAA,MAEf,eAAe;AAAA,IACjB;AACA,UAAM,iBAAiB,MAAM,eAAe,KAAK,uBAAuB,uBAAuB,KAAK,CAAC,CAAC;AACtG,UAAM,eAAe,MAAM,aAAa,KAAK,uBAAuB,uBAAuB,KAAK,CAAC,CAAC;AAClG,UAAM,cAAc,MAAM,YAAY,KAAK,uBAAuB,uBAAuB,KAAK,CAAC,CAAC;AAChG,UAAM,aAAa,MAAM,WAAW,KAAK,uBAAuB,uBAAuB,KAAK,CAAC,CAAC;AAC9F,UAAM,WAAW,MAAM,SAAS,KAAK,uBAAuB,uBAAuB,KAAK,CAAC,CAAC;AAC1F,UAAM,iBAAiB,MAAM,eAAe,KAAK,uBAAuB,uBAAuB,KAAK,CAAC,CAAC;AACtG,WAAO;AAAA,EACT;AAEA,MAAI,SAASA,SAAQ;AAErB,SAAO,oBAAoB,SAAS,oBAAoB;AACtD,QAAI,QAAQ,mBAAmB,KAAK,YAAY,UAAU,YAAY,EAAE;AACxE,SAAK,SAAS;AAAA,MACZ,eAAe,OAAO,WAAW,YAAY,kBAAkB,UAAU,CAAC;AAAA,IAC5E,CAAC;AACD,SAAK,iBAAiB;AAAA,EACxB;AAEA,SAAO,qBAAqB,SAAS,qBAAqB;AAExD,QAAI,CAAC,KAAK,WAAW,GAAG;AACtB,WAAK,iBAAiB;AAAA,IACxB;AAAA,EACF;AAEA,SAAO,eAAe,SAAS,aAAa,IAAI;AAE9C,QAAI,CAAC,KAAK,WAAW,GAAG;AACtB,UAAI,QAAQ,GAAG,cAAc;AAC7B,WAAK,SAAS;AAAA,QACZ,iBAAiB,MAAM;AAAA,QACvB,aAAa,MAAM;AAAA,QACnB,eAAe,MAAM;AAAA,MACvB,CAAC;AAAA,IACH;AAAA,EACF;AAEA,SAAO,cAAc,SAAS,YAAY,IAAI;AAC5C,QAAI,KAAK,WAAW,GAAG;AACrB,eAAS,MAAM,GAAG,MAAM,GAAG,cAAc,QAAQ,OAAO;AAEtD,YAAI,GAAG,cAAc,KAAK,eAAe,KAAK,MAAM,iBAAiB;AACnE,eAAK,SAAS;AAAA,YACZ,eAAe,GAAG,cAAc,KAAK;AAAA,UACvC,CAAC;AACD;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,SAAO,aAAa,SAAS,aAAa;AACxC,QAAI,KAAK,WAAW,GAAG;AAErB,UAAI,aAAa,KAAK,kBAAkB;AAExC,UAAI,KAAK,MAAM,QAAQ,aAAa,KAAK,MAAM,eAAe,KAAK,MAAM,sBAAsB,CAAC,KAAK,MAAM,QAAQ,aAAa,KAAK,MAAM,oBAAoB;AAC7J,aAAK,MAAM,UAAU,CAAC,KAAK,MAAM,IAAI;AAAA,MACvC;AAEA,WAAK,SAAS;AAAA,QACZ,iBAAiB;AAAA,QACjB,aAAa;AAAA,QACb,eAAe;AAAA,MACjB,CAAC;AAAA,IACH;AAAA,EACF;AAKA,SAAO,WAAW,SAAS,WAAW;AACpC,QAAI,KAAK,WAAW,KAAK,KAAK,yBAAyB,GAAG;AACxD,WAAK,SAAS;AAAA,QACZ,iBAAiB;AAAA,QACjB,aAAa;AAAA,QACb,eAAe;AAAA,MACjB,CAAC;AAAA,IACH;AAAA,EACF;AAGA,SAAO,2BAA2B,SAAS,2BAA2B;AACpE,QAAI;AAEJ,QAAI,KAAK,MAAM,WAAW;AACxB,+BAAyB,KAAK,IAAI,KAAK,MAAM,gBAAgB,KAAK,MAAM,WAAW,IAAI;AAAA,IACzF,OAAO;AACL,+BAAyB,KAAK,IAAI,KAAK,MAAM,cAAc,KAAK,MAAM,aAAa,IAAI;AAAA,IACzF;AAEA,WAAO;AAAA,EACT;AAEA,SAAO,aAAa,SAAS,aAAa;AACxC,WAAO,KAAK,MAAM,oBAAoB;AAAA,EACxC;AAEA,SAAO,iBAAiB,SAAS,iBAAiB;AAChD,QAAI,KAAK,MAAM,MAAM;AACnB,WAAK,MAAM,UAAU,KAAK;AAAA,IAC5B;AAAA,EACF;AAEA,SAAO,mBAAmB,SAAS,mBAAmB;AACpD,QAAI,QAAQ,KAAK,QAAQ;AAEzB,QAAI,UAAU,KAAK,MAAM,cAAc;AACrC,WAAK,SAAS;AAAA,QACZ,cAAc;AAAA,MAChB,CAAC;AAAA,IACH;AAAA,EACF;AAEA,SAAO,iBAAiB,SAAS,eAAe,MAAM;AACpD,SAAK,UAAU;AAAA,EACjB;AAGA,SAAO,oBAAoB,SAAS,oBAAoB;AAItD,QAAI,KAAK,MAAM,WAAW;AACxB,UAAI,KAAK,MAAM,QAAQ,OAAO,aAAa,KAAK,MAAM,cAAc,KAAK,MAAM,cAAc;AAC3F,YAAI,KAAK,MAAM,gBAAgB,KAAK,MAAM,aAAa;AACrD,iBAAO,KAAK,MAAM,eAAe,KAAK,MAAM,cAAc,KAAK,MAAM;AAAA,QACvE;AAEA,eAAO,KAAK,MAAM;AAAA,MACpB;AAEA,aAAO,KAAK,IAAI,OAAO,aAAa,KAAK,MAAM,eAAe,KAAK,MAAM,YAAY;AAAA,IACvF;AAEA,QAAI,KAAK,MAAM,QAAQ,KAAK,MAAM,cAAc,KAAK,MAAM,cAAc;AACvE,UAAI,KAAK,MAAM,gBAAgB,KAAK,MAAM,aAAa;AACrD,eAAO,KAAK,MAAM;AAAA,MACpB;AAEA,aAAO,KAAK,MAAM,eAAe,KAAK,MAAM,cAAc,KAAK,MAAM;AAAA,IACvE;AAEA,WAAO,KAAK,IAAI,KAAK,MAAM,eAAe,KAAK,MAAM,YAAY;AAAA,EACnE;AAEA,SAAO,SAAS,SAAS,SAAS;AAChC,QAAI,eAAe,cAAc,CAAC,GAAG,cAAc,SAAS,KAAK,MAAM,OAAO,OAAO;AAErF,QAAI,eAAe,cAAc,CAAC,GAAG,cAAc,SAAS,KAAK,MAAM,OAAO,OAAO;AAErF,QAAI,eAAe,cAAc,CAAC,GAAG,cAAc,SAAS,KAAK,MAAM,OAAO,OAAO;AAErF,QAAI,WAAW,KAAK,MAAM,iBAAiB,KAAK,MAAM;AACtD,QAAI,aAAa,KAAK,WAAW;AACjC,QAAI,YAAY;AAAA,MACd,WAAW,KAAK,MAAM;AAAA,MACtB,OAAO,cAAc,CAAC,GAAG,cAAc,MAAM,KAAK,MAAM,OAAO,IAAI;AAAA,MACnE,MAAM;AAAA,MACN,IAAI,KAAK,MAAM;AAAA,IACjB;AACA,QAAI;AACJ,QAAI,eAAe,KAAK,MAAM,WAAW,cAAc,KAAK,MAAM,QAAQ,KAAK,MAAM;AAErF,QAAI,KAAK,MAAM,WAAW;AACxB,mBAAa,QAAQ;AACrB,mBAAa,YAAY;AACzB,mBAAa,kBAAkB;AAE/B,UAAI,cAAc;AAChB,qBAAa,YAAY;AAAA,MAC3B;AAAA,IACF,OAAO;AACL,mBAAa,OAAO;AACpB,mBAAa,YAAY;AACzB,mBAAa,kBAAkB;AAE/B,UAAI,cAAc;AAChB,qBAAa,YAAY;AAAA,MAC3B;AAAA,IACF;AAEA,QAAI,YAAY;AACd,UAAI,aAAa,KAAK,kBAAkB,IAAI,KAAK,MAAM;AAEvD,UAAI,KAAK,MAAM,WAAW;AACxB,qBAAa,YAAY,iBAAiB,IAAI,cAAc,MAAM;AAClE,qBAAa,kBAAkB,iBAAiB,IAAI,cAAc,MAAM;AAAA,MAC1E,OAAO;AACL,qBAAa,YAAY,kBAAkB,IAAI,cAAc,MAAM;AACnE,qBAAa,kBAAkB,kBAAkB,IAAI,cAAc,MAAM;AAAA,MAC3E;AAGA,mBAAa,UAAU;AACvB,mBAAa,aAAa;AAAA,IAC5B,WAAW,KAAK,MAAM,QAAQ;AAE5B,UAAI,KAAK,MAAM,iBAAiB,GAAG;AACjC,qBAAa,YAAY;AACzB,qBAAa,kBAAkB;AAAA,MACjC;AAGA,UAAI,KAAK,MAAM,WAAW;AACxB,qBAAa,QAAQ,KAAK,MAAM,eAAe;AAAA,MACjD,OAAO;AACL,qBAAa,OAAO,KAAK,MAAM,eAAe;AAAA,MAChD;AAAA,IACF,WAAW,KAAK,MAAM,MAAM;AAE1B,mBAAa,YAAY;AACzB,mBAAa,kBAAkB;AAE/B,mBAAa,UAAU;AACvB,mBAAa,aAAa;AAAA,IAC5B;AAEA,QAAI,cAAc,CAAC,KAAK,MAAM,aAAa;AACzC,mBAAa,aAAa;AAC1B,mBAAa,mBAAmB;AAChC,mBAAa,aAAa;AAC1B,mBAAa,aAAa;AAAA,IAC5B;AAEA,QAAI,UAAU;AACZ,UAAI,KAAK,MAAM,MAAM;AACnB,kBAAU,eAAe,KAAK;AAC9B,kBAAU,cAAc,KAAK;AAC7B,kBAAU,aAAa,KAAK;AAC5B,kBAAU,gBAAgB,KAAK;AAC/B,kBAAU,WAAW,KAAK;AAAA,MAC5B,OAAO;AACL,YAAI,kBAAkB,cAAc,CAAC,GAAG,cAAc,YAAY,KAAK,MAAM,OAAO,UAAU;AAE9F,wBAAgB,QAAQ,KAAK,MAAM;AAEnC,YAAI,KAAK,MAAM,WAAW;AACxB,0BAAgB,QAAQ;AAAA,QAC1B,OAAO;AACL,0BAAgB,OAAO;AAAA,QACzB;AAEA,qBAAa,aAAAC,QAAM,cAAc,OAAO;AAAA,UACtC,OAAO;AAAA,UACP,cAAc,KAAK;AAAA,UACnB,aAAa,KAAK;AAAA,UAClB,YAAY,KAAK;AAAA,UACjB,eAAe,KAAK;AAAA,QACtB,CAAC;AAAA,MACH;AAAA,IACF;AAEA,WAAO,aAAAA,QAAM,cAAc,OAAO,WAAW,aAAAA,QAAM,cAAc,OAAO;AAAA,MACtE,WAAW,KAAK,MAAM;AAAA,MACtB,OAAO;AAAA,MACP,KAAK,KAAK;AAAA,MACV,IAAI,KAAK,MAAM;AAAA,IACjB,GAAG,KAAK,MAAM,OAAO,GAAG,aAAAA,QAAM,cAAc,OAAO;AAAA,MACjD,WAAW,KAAK,MAAM;AAAA,MACtB,OAAO;AAAA,MACP,SAAS,KAAK;AAAA,MACd,IAAI,KAAK,MAAM;AAAA,IACjB,CAAC,GAAG,aAAAA,QAAM,cAAc,OAAO;AAAA,MAC7B,WAAW,KAAK,MAAM;AAAA,MACtB,OAAO;AAAA,MACP,IAAI,KAAK,MAAM;AAAA,IACjB,GAAG,YAAY,KAAK,MAAM,QAAQ,CAAC;AAAA,EACrC;AAEA,SAAOD;AACT,EAAE,sBAAS;AAEX,OAAwC,QAAQ,YAAY;AAAA,EAE1D,UAAU,kBAAAE,QAAU,KAAK;AAAA,EAEzB,QAAQ,kBAAAA,QAAU,MAAM;AAAA,IACtB,MAAM,kBAAAA,QAAU;AAAA,IAChB,SAAS,kBAAAA,QAAU;AAAA,IACnB,SAAS,kBAAAA,QAAU;AAAA,IACnB,SAAS,kBAAAA,QAAU;AAAA,IACnB,YAAY,kBAAAA,QAAU;AAAA,EACxB,CAAC;AAAA,EAED,eAAe,kBAAAA,QAAU;AAAA,EAEzB,kBAAkB,kBAAAA,QAAU;AAAA,EAE5B,kBAAkB,kBAAAA,QAAU;AAAA,EAE5B,kBAAkB,kBAAAA,QAAU;AAAA,EAE5B,SAAS,kBAAAA,QAAU,KAAK;AAAA,EAExB,QAAQ,kBAAAA,QAAU;AAAA,EAElB,MAAM,kBAAAA,QAAU;AAAA,EAEhB,aAAa,kBAAAA,QAAU;AAAA,EAEvB,OAAO,kBAAAA,QAAU;AAAA,EAEjB,kBAAkB,kBAAAA,QAAU;AAAA,EAE5B,WAAW,kBAAAA,QAAU;AAAA,EAErB,QAAQ,kBAAAA,QAAU;AAAA,EAElB,oBAAoB,kBAAAA,QAAU;AAAA,EAE9B,WAAW,kBAAAA,QAAU;AAAA,EAErB,qBAAqB,kBAAAA,QAAU;AAAA,EAE/B,QAAQ,kBAAAA,QAAU;AAAA,EAElB,WAAW,kBAAAA,QAAU;AAAA,EAErB,WAAW,kBAAAA,QAAU;AAAA,EAErB,WAAW,kBAAAA,QAAU;AACvB,IAAI;AACJ,QAAQ,eAAe;AAAA,EACrB,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,aAAa;AAAA,EACb,OAAO;AAAA,EACP,kBAAkB;AAAA,EAClB,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,oBAAoB;AAAA,EACpB,WAAW,SAAS,YAAY;AAAA,EAAC;AAAA,EACjC,QAAQ,CAAC;AAAA,EACT,qBAAqB;AACvB;AAEA,IAAO,4BAAQ;;;AC7ZwD,IAAO,wBAAQ;",
  "names": ["Sidebar", "React", "PropTypes"]
}
