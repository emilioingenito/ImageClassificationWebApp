import {
  addClass,
  removeClass
} from "./chunk-6C7ITYGU.js";
import {
  _extends,
  _objectWithoutPropertiesLoose,
  init_extends,
  init_objectWithoutPropertiesLoose
} from "./chunk-SVBXQ2RZ.js";
import {
  require_react_dom
} from "./chunk-VFCKLIQH.js";
import {
  _assertThisInitialized,
  _inheritsLoose
} from "./chunk-G6O25BTV.js";
import {
  require_prop_types
} from "./chunk-BZTWW5W7.js";
import {
  require_react
} from "./chunk-M45RNPIH.js";
import {
  __export,
  __toESM
} from "./chunk-J43GMYXM.js";

// node_modules/@progress/kendo-react-dropdowns/dist/es/DropDownList/DropDownList.js
var React56 = __toESM(require_react());
var PropTypes25 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-common/dist/es/contexts/ZIndexContext.js
var React = __toESM(require_react());
var ZIndexContext = React.createContext(0);
var useZIndexContext = function() {
  return React.useContext(ZIndexContext);
};
ZIndexContext.displayName = "KendoReactZIndexContext";

// node_modules/@progress/kendo-react-common/dist/es/browser-support.service.js
var getDocument = function() {
  return typeof document !== "undefined" ? document : {};
};
var BrowserSupportService = function() {
  function BrowserSupportService2() {
    this.scrollbar = 0;
  }
  Object.defineProperty(BrowserSupportService2.prototype, "scrollbarWidth", {
    get: function() {
      var document2 = getDocument();
      if (!this.scrollbar && document2 && document2.createElement) {
        var div = document2.createElement("div");
        div.style.cssText = "overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block";
        div.innerHTML = "&nbsp;";
        document2.body.appendChild(div);
        this.scrollbar = div.offsetWidth - div.scrollWidth;
        document2.body.removeChild(div);
      }
      return this.scrollbar;
    },
    enumerable: false,
    configurable: true
  });
  return BrowserSupportService2;
}();

// node_modules/@progress/kendo-react-common/dist/es/canUseDOM.js
var canUseDOM = Boolean(
  typeof window !== "undefined" && window.document && window.document.createElement
);

// node_modules/@progress/kendo-react-common/dist/es/classNames.js
var classNames = function() {
  var args = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }
  var result = {};
  var addLeafKeys = function(arg) {
    return typeof arg === "object" ? Object.keys(arg).forEach(function(key) {
      result[key] = arg[key];
    }) : result[arg] = true;
  };
  ;
  var addKeys = function(list) {
    return list.filter(function(arg) {
      return arg !== true && !!arg;
    }).map(function(arg) {
      return Array.isArray(arg) ? addKeys(arg) : addLeafKeys(arg);
    });
  };
  ;
  addKeys(args);
  return Object.keys(result).map(function(key) {
    return result[key] && key || null;
  }).filter(function(el) {
    return el !== null;
  }).join(" ");
};

// node_modules/@progress/kendo-react-common/dist/es/clone.js
var React2 = __toESM(require_react());

// node_modules/@progress/kendo-react-common/dist/es/FormComponent.js
var FormComponent = function() {
  function FormComponent2() {
  }
  return FormComponent2;
}();

// node_modules/@progress/kendo-react-common/dist/es/getTabIndex.js
var DISABLED_TABINDEX = -1;
var DEFAULT_TABINDEX = 0;
var getTabIndex = function(tabIndex, disabled, useDefaultTabIndexWhenDisabled) {
  var parsedTabIndex = typeof tabIndex === "string" ? parseInt(tabIndex, void 0) : tabIndex;
  if (parsedTabIndex === NaN) {
    return void 0;
  }
  return parsedTabIndex !== void 0 ? parsedTabIndex : disabled ? useDefaultTabIndexWhenDisabled ? void 0 : DISABLED_TABINDEX : DEFAULT_TABINDEX;
};

// node_modules/@progress/kendo-react-common/dist/es/constants/index.js
var FIELD_REGEX = /\[(?:(\d+)|['"](.*?)['"])\]|((?:(?!\[.*?\]|\.).)+)/g;

// node_modules/@progress/kendo-react-common/dist/es/fieldList.js
function fieldList(field) {
  var fields = [];
  field.replace(FIELD_REGEX, function(_match, index, indexAccessor, fieldName) {
    fields.push(index !== void 0 ? index : indexAccessor || fieldName);
  });
  return fields;
}

// node_modules/@progress/kendo-react-common/dist/es/getter.js
var getterCache = {};
getterCache.undefined = function() {
  return void 0;
};
function getter(field) {
  if (getterCache[field]) {
    return getterCache[field];
  }
  var fields = fieldList(field);
  getterCache[field] = function(obj) {
    var result = obj;
    for (var idx = 0; idx < fields.length && result; idx++) {
      result = result[fields[idx]];
    }
    return result;
  };
  return getterCache[field];
}

// node_modules/@progress/kendo-react-common/dist/es/guid.js
var guid = function() {
  var id = "";
  var i;
  var random;
  for (i = 0; i < 32; i++) {
    random = Math.random() * 16 | 0;
    if (i === 8 || i === 12 || i === 16 || i === 20) {
      id += "-";
    }
    id += (i === 12 ? 4 : i === 16 ? random & 3 | 8 : random).toString(16);
  }
  return id;
};

// node_modules/@progress/kendo-react-common/dist/es/keys.js
var Keys = {
  backspace: 8,
  tab: 9,
  enter: 13,
  shift: 16,
  esc: 27,
  space: 32,
  pageUp: 33,
  pageDown: 34,
  end: 35,
  home: 36,
  left: 37,
  up: 38,
  right: 39,
  down: 40,
  delete: 46
};

// node_modules/@progress/kendo-react-common/dist/es/noop.js
var noop = function() {
};

// node_modules/@progress/kendo-react-common/dist/es/scrollbarWidth.js
var getScrollbarWidth = function() {
  if (!canUseDOM || !document.body) {
    return false;
  }
  var scrollbarWidth2 = new BrowserSupportService().scrollbarWidth;
  return scrollbarWidth2;
};
var setScrollbarWidth = function() {
  if (!canUseDOM || !document.body) {
    return false;
  }
  var scrollbarWidth2 = new BrowserSupportService().scrollbarWidth;
  document.body.style.setProperty("--kendo-scrollbar-width", "".concat(scrollbarWidth2, "px"));
};

// node_modules/@progress/kendo-react-common/dist/es/setter.js
var setterCache = {};
setterCache.undefined = function(obj) {
  return obj;
};

// node_modules/@progress/kendo-react-common/dist/es/treeDataOperations.js
var __assign = function() {
  __assign = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
var __spreadArray = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
function children(item, subItemsField, subItems) {
  var _a3;
  if (subItems) {
    return __assign(__assign({}, item), (_a3 = {}, _a3[subItemsField] = subItems.length ? __spreadArray([], subItems, true) : void 0, _a3));
  } else {
    return item && item[subItemsField] ? __spreadArray([], item[subItemsField], true) : [];
  }
}
function mapItem(dataItem, subItemsField, callbackfn) {
  if (dataItem[subItemsField]) {
    var subItems = children(dataItem, subItemsField).map(function(child) {
      return mapItem(child, subItemsField, callbackfn);
    });
    return callbackfn(children(dataItem, subItemsField, subItems));
  }
  return callbackfn(dataItem);
}
var mapTree = function(tree, subItemsField, callback) {
  return __spreadArray([], tree.map(function(item) {
    return mapItem(item, subItemsField, callback);
  }), true);
};
var extendDataItem = function(item, subItemsField, propsToExtend) {
  var _a3;
  return Object.assign({}, item, item[subItemsField] ? (_a3 = {}, _a3[subItemsField] = item[subItemsField].slice(), _a3) : {}, propsToExtend || {});
};

// node_modules/@progress/kendo-licensing/dist/index-esm.js
var index_esm_exports = {};
__export(index_esm_exports, {
  setScriptKey: () => setScriptKey,
  validatePackage: () => validatePackage
});
var _0x3282 = ["AgfZ", "turOExC=", "zNvUy3rPB24=", "z3jVDxa=", "ChvIBgLZAerHDgu=", "zgf0yq==", "DgLTzxn0yw1W", "vM5SC2O=", "rejpz2u=", "DfvPvvq=", "D01gsvi=", "u0Xdu2y=", "C2nYAxb0s2v5", "Dg9mB2nHBgvtDhjPBMC=", "r3bNtu8=", "C2v0", "ChjVzhvJDe5HBwu=", "BgLJzw5ZAw5Nrg9JC1vYBa==", "vgHLihbYB2r1y3qGAxmGBM90igLUy2X1zgvKigLUihrOzsbSAwnLBNnLlGO=", "DMvYC2LVBG==", "C1DHyu0=", "ChjVzhvJDhm=", "CNfLrgK=", "uKP0uwG=", "CgfYC2u=", "y3DYvhq=", "zxHWAxj5rgf0zq==", "uMLXufK=", "tM8GBgLJzw5ZzsbMB3vUzc4k", "tNz1Awe=", "z3jVDxbfBMq=", "sK1Vvey=", "zMLUza==", "D2fYBG==", "tfDRtxq=", "CgfJA2fNzu5HBwu=", "Dw5KzwzPBMvK", "C3niBfO=", "BgLJzw5Zzuv4CgLYyxrPB25eyxrL", "ChjVzhvJDenVzgvZ", "tgLJzw5ZzsbHy3rPDMf0Aw9UigzHAwXLzcbMB3iG", "uhjVz3jLC3mG", "tfLwDLa=", "BgvUz3rO", "lcb0AguGCgfJA2fNzsb3yxmGChvIBgLZAgvKig9Uia==", "uvPnu2m=", "BMfTzq==", "B2jQzwn0", "igzVCIbTB3jLigLUzM9YBwf0Aw9UlGO=", "zvn3tLG=", "u2vLia==", "s0PPBvO=", "zxbwz0u=", "zg9JC1vYBa==", "z2v0", "DhLWzq==", "y29Kzq==", "ww91CIbSAwnLBNnLigv4CgLYzwqGB24G"];
(function(_0x456c2b, _0x328245) {
  var _0x5a5cad = function(_0x97df7c) {
    while (--_0x97df7c) {
      _0x456c2b["push"](_0x456c2b["shift"]());
    }
  };
  _0x5a5cad(++_0x328245);
})(_0x3282, 391);
var _0x5a5c = function(_0x456c2b, _0x328245) {
  _0x456c2b = _0x456c2b - 0;
  var _0x5a5cad = _0x3282[_0x456c2b];
  if (_0x5a5c["IhMVZF"] === void 0) {
    var _0x97df7c = function(_0xf176a0) {
      var _0x2f5c1a = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/=", _0xc2d087 = String(_0xf176a0)["replace"](/=+$/, "");
      var _0x4465a8 = "";
      for (var _0x56daec = 0, _0x42848b, _0x544e1d2, _0x2bb26d2 = 0; _0x544e1d2 = _0xc2d087["charAt"](_0x2bb26d2++); ~_0x544e1d2 && (_0x42848b = _0x56daec % 4 ? _0x42848b * 64 + _0x544e1d2 : _0x544e1d2, _0x56daec++ % 4) ? _0x4465a8 += String["fromCharCode"](255 & _0x42848b >> (-2 * _0x56daec & 6)) : 0) {
        _0x544e1d2 = _0x2f5c1a["indexOf"](_0x544e1d2);
      }
      return _0x4465a8;
    };
    _0x5a5c["uAzrZg"] = function(_0x4f259a) {
      var _0x1b5199 = _0x97df7c(_0x4f259a);
      var _0x10f781 = [];
      for (var _0x2b16412 = 0, _0x36436a2 = _0x1b5199["length"]; _0x2b16412 < _0x36436a2; _0x2b16412++) {
        _0x10f781 += "%" + ("00" + _0x1b5199["charCodeAt"](_0x2b16412)["toString"](16))["slice"](-2);
      }
      return decodeURIComponent(_0x10f781);
    }, _0x5a5c["jhAfvh"] = {}, _0x5a5c["IhMVZF"] = !![];
  }
  var _0x49ba15 = _0x5a5c["jhAfvh"][_0x456c2b];
  return _0x49ba15 === void 0 ? (_0x5a5cad = _0x5a5c["uAzrZg"](_0x5a5cad), _0x5a5c["jhAfvh"][_0x456c2b] = _0x5a5cad) : _0x5a5cad = _0x49ba15, _0x5a5cad;
};
var context = { data: "  {}  " };
var cache = /* @__PURE__ */ new Map();
function setScriptKey(_0x3f7888) {
}
function validatePackage(_0x4a1050) {
  if (cache[_0x5a5c("0xf")](_0x4a1050[_0x5a5c("0x3")])) {
    if (_0x5a5c("0x8") !== _0x5a5c("0x8")) {
      let _0x153d7b = function() {
        var _0x6f019e = _0x5a5c("0x37") + _0x93d1e0[_0x5a5c("0x32")] + "\n";
        if (_0x1d58e3[_0x5a5c("0xc")] === 2)
          _0x6f019e += _0x5a5c("0xe") + _0x3814cc[_0x5a5c("0x29")][_0x5a5c("0x1c")]() + _0x5a5c("0x1") + _0x105281[_0x5a5c("0x13")][_0x5a5c("0x1c")]() + ".\n";
        else {
          if (_0x333263[_0x5a5c("0xc")] === 0)
            _0x6f019e += _0x5a5c("0x2b");
          else
            _0x281f6e[_0x5a5c("0xc")] === 1 && (_0x6f019e += _0x5a5c("0x21"));
        }
        return _0x6f019e += _0x5a5c("0x7") + _0xaa3d77[_0x5a5c("0xa")] + _0x5a5c("0x5"), _0x6f019e;
      };
    } else
      return cache[_0x5a5c("0xb")](_0x4a1050[_0x5a5c("0x3")]);
  }
  var _0x5f3536 = _0x4a1050[_0x5a5c("0x22")] ? " v" + _0x4a1050[_0x5a5c("0x22")] : "", _0x28c95f = _0x4a1050[_0x5a5c("0x3")] + _0x5f3536, _0x354beb = JSON[_0x5a5c("0x27")](context[_0x5a5c("0x14")]), _0x236cba = !_0x354beb[_0x5a5c("0x1b")] && !_0x354beb[_0x5a5c("0x15")], _0x1e1a8d = _0x354beb[_0x5a5c("0x1b")] && typeof KendoLicensing === _0x5a5c("0x33"), _0x232f89 = matchProduct(_0x354beb, _0x4a1050[_0x5a5c("0x36")]), _0x493c49;
  if (_0x236cba || _0x1e1a8d) {
    if (_0x5a5c("0x1d") === _0x5a5c("0x1d"))
      _0x493c49 = { "type": 0, "packageName": _0x28c95f, "docsUrl": _0x4a1050[_0x5a5c("0x20")] };
    else {
      let _0x38933e = function() {
        var _0x3a76ad = _0x5a5c("0x38") + _0x160df8[_0x5a5c("0x1f")], _0x46900d = typeof _0x4c5dc3[_0x5a5c("0x12")] === _0x5a5c("0x11");
        _0x46900d ? _0x3c6396[_0x5a5c("0x12")](_0x3a76ad) : _0x156a7a[_0x5a5c("0x30")](_0x3a76ad), _0x3a6cc8[_0x5a5c("0x30")](_0x20d0d4(_0x4b3d98)), _0x46900d && _0x126050[_0x5a5c("0x2d")]();
      };
    }
  } else {
    if (_0x5a5c("0x25") === _0x5a5c("0x10")) {
      let _0x2eedf9 = function() {
        _0x5c9d09 = { "type": 1, "packageName": _0x1b4532, "docsUrl": _0x2c67b6[_0x5a5c("0x20")] };
      };
    } else {
      if (!_0x232f89) {
        if (_0x5a5c("0x31") !== _0x5a5c("0x31")) {
          let _0x43e69f = function() {
            _0x2b1641 = { "type": 0, "packageName": _0x36436a, "docsUrl": _0x3d5bc8[_0x5a5c("0x20")] };
          };
        } else
          _0x493c49 = { "type": 1, "packageName": _0x28c95f, "docsUrl": _0x4a1050[_0x5a5c("0x20")] };
      } else {
        if (_0x5a5c("0x6") === _0x5a5c("0x2")) {
          let _0x1a3b76 = function() {
            _0x88b173 = { "type": 2, "packageName": _0x7a4b9, "publishDate": _0x272f8c(_0x2e605a[_0x5a5c("0x13")]), "expiryDate": _0x27f75b(_0x1ae22c[_0x5a5c("0x35")]), "docsUrl": _0x493ad8[_0x5a5c("0x20")] };
          };
        } else {
          if (_0x232f89[_0x5a5c("0x35")] < _0x4a1050[_0x5a5c("0x13")]) {
            if (_0x5a5c("0x2e") === _0x5a5c("0x2e"))
              _0x493c49 = { "type": 2, "packageName": _0x28c95f, "publishDate": parseDate(_0x4a1050[_0x5a5c("0x13")]), "expiryDate": parseDate(_0x232f89[_0x5a5c("0x35")]), "docsUrl": _0x4a1050[_0x5a5c("0x20")] };
            else {
              let _0x5b1451 = function() {
                return new _0x5de45c(_0x354370 * 1e3);
              };
            }
          }
        }
      }
    }
  }
  if (_0x493c49 && typeof console === _0x5a5c("0x4")) {
    if (_0x5a5c("0x17") !== _0x5a5c("0x2c")) {
      var _0x3e1208 = _0x5a5c("0x38") + _0x4a1050[_0x5a5c("0x1f")], _0x11fad5 = typeof console[_0x5a5c("0x12")] === _0x5a5c("0x11");
      if (_0x11fad5) {
        if (_0x5a5c("0x18") === _0x5a5c("0x18"))
          console[_0x5a5c("0x12")](_0x3e1208);
        else {
          let _0x2ca9f1 = function() {
            _0x4b304a += _0x5a5c("0x2b");
          };
        }
      } else {
        if (_0x5a5c("0x2a") === _0x5a5c("0x2a"))
          console[_0x5a5c("0x30")](_0x3e1208);
        else {
          let _0x22229f = function() {
            _0x560756[_0x5a5c("0x30")](_0x5cc11d);
          };
        }
      }
      console[_0x5a5c("0x30")](formatError(_0x493c49));
      if (_0x11fad5) {
        if (_0x5a5c("0x19") !== _0x5a5c("0x19")) {
          let _0x1ba7c1 = function() {
            return _0x5853d5[_0x5a5c("0xf")](_0x8ce849[_0x5a5c("0xd")]);
          };
        } else
          console[_0x5a5c("0x2d")]();
      }
    } else {
      let _0x144f55 = function() {
        return _0x544e1d[_0x5a5c("0xb")](_0x2bb26d[_0x5a5c("0x3")]);
      };
    }
  }
  var _0x40a89d = !_0x493c49;
  return cache[_0x5a5c("0x1e")](_0x4a1050[_0x5a5c("0x3")], _0x40a89d), _0x40a89d;
}
function formatError(_0x2bf099) {
  var _0x3b8354 = _0x5a5c("0x37") + _0x2bf099[_0x5a5c("0x32")] + "\n";
  if (_0x2bf099[_0x5a5c("0xc")] === 2) {
    if (_0x5a5c("0x16") !== _0x5a5c("0x16")) {
      let _0x333f51 = function() {
        _0x1cd78a += _0x5a5c("0xe") + _0x1069cf[_0x5a5c("0x29")][_0x5a5c("0x1c")]() + _0x5a5c("0x1") + _0x58f1d3[_0x5a5c("0x13")][_0x5a5c("0x1c")]() + ".\n";
      };
    } else
      _0x3b8354 += _0x5a5c("0xe") + _0x2bf099[_0x5a5c("0x29")][_0x5a5c("0x1c")]() + _0x5a5c("0x1") + _0x2bf099[_0x5a5c("0x13")][_0x5a5c("0x1c")]() + ".\n";
  } else {
    if (_0x2bf099[_0x5a5c("0xc")] === 0) {
      if (_0x5a5c("0x28") === _0x5a5c("0x34")) {
        let _0x2de46a = function() {
          _0x44d8f3 += _0x5a5c("0x21");
        };
      } else
        _0x3b8354 += _0x5a5c("0x2b");
    } else {
      if (_0x2bf099[_0x5a5c("0xc")] === 1) {
        if (_0x5a5c("0x9") === _0x5a5c("0x1a")) {
          let _0x42e868 = function() {
            _0x3c8674[_0x5a5c("0x12")](_0x3c7683);
          };
        } else
          _0x3b8354 += _0x5a5c("0x21");
      }
    }
  }
  return _0x3b8354 += _0x5a5c("0x7") + _0x2bf099[_0x5a5c("0xa")] + _0x5a5c("0x5"), _0x3b8354;
}
function matchProduct(_0x3be8d0, _0x22e53b) {
  var _0x2de868 = _0x3be8d0[_0x5a5c("0x24")];
  if (!_0x2de868 || !_0x2de868[_0x5a5c("0x0")]) {
    if (_0x5a5c("0x26") === _0x5a5c("0x23")) {
      let _0x2ce30d = function() {
        return null;
      };
    } else
      return null;
  }
  var _0x1c39ae = new Set(_0x22e53b);
  return _0x2de868[_0x5a5c("0x2f")](function(_0xf8b567) {
    if (_0x5a5c("0x39") === _0x5a5c("0x39"))
      return _0x1c39ae[_0x5a5c("0xf")](_0xf8b567[_0x5a5c("0xd")]);
    else {
      let _0x2ffdc4 = function() {
        var _0x287464 = _0x41d50e[_0x5a5c("0x24")];
        if (!_0x287464 || !_0x287464[_0x5a5c("0x0")])
          return null;
        var _0x473ae4 = new _0x5ba11e(_0x2ff6bd);
        return _0x287464[_0x5a5c("0x2f")](function(_0x54470f) {
          return _0x473ae4[_0x5a5c("0xf")](_0x54470f[_0x5a5c("0xd")]);
        });
      };
    }
  });
}
function parseDate(_0x15d2db) {
  return new Date(_0x15d2db * 1e3);
}

// node_modules/@progress/kendo-react-common/dist/es/validate-package.js
function validatePackage2(packageMetadata8) {
  if (typeof index_esm_exports !== "undefined") {
    validatePackage(packageMetadata8);
  } else {
    var message = "License activation failed for ".concat(packageMetadata8.name, "\n");
    message += "The @progress/kendo-licensing script is not loaded.\n";
    message += "See ".concat(packageMetadata8.licensingDocsUrl, " for more information.\n");
    console.warn(message);
  }
}

// node_modules/@progress/kendo-react-common/dist/es/events/dispatchEvent.js
function dispatchEvent(eventHandler, dispatchedEvent, target, eventData) {
  if (eventHandler) {
    var eventBaseData = {
      syntheticEvent: dispatchedEvent,
      nativeEvent: dispatchedEvent.nativeEvent,
      target
    };
    eventHandler.call(void 0, Object.assign(eventBaseData, eventData));
  }
}

// node_modules/@progress/kendo-react-common/dist/es/hocs/AsyncFocusBlur.js
var React4 = __toESM(require_react());

// node_modules/@progress/kendo-react-common/dist/es/hooks/useAsyncFocusBlur.js
var React3 = __toESM(require_react());

// node_modules/@progress/kendo-react-common/dist/es/hocs/withPropsContext.js
var React6 = __toESM(require_react());

// node_modules/@progress/kendo-react-common/dist/es/hooks/usePropsContext.js
var React5 = __toESM(require_react());
var usePropsContext = function(context2, props) {
  var contextPropsCallback = React5.useContext(context2);
  var contextProps = contextPropsCallback(props);
  return contextProps;
};

// node_modules/@progress/kendo-react-common/dist/es/hocs/withPropsContext.js
var __assign2 = function() {
  __assign2 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign2.apply(this, arguments);
};
var createPropsContext = function() {
  return React6.createContext(function(props) {
    return props;
  });
};
var withPropsContext = function(context2, Component34) {
  return React6.forwardRef(function(props, ref) {
    var contextProps = usePropsContext(context2, props);
    return React6.createElement(Component34, __assign2({}, contextProps, { ref }));
  });
};

// node_modules/@progress/kendo-react-common/dist/es/hooks/useDir.js
var React7 = __toESM(require_react());
function useDir(elementRef, initialDir, args) {
  var _a3 = React7.useState(initialDir), dir = _a3[0], setDir = _a3[1];
  React7.useEffect(function() {
    if (!dir && window && elementRef.current) {
      var rtlCandidate = window.getComputedStyle(elementRef.current).direction;
      if (rtlCandidate) {
        setDir(rtlCandidate);
      }
    }
  }, args);
  return dir;
}

// node_modules/@progress/kendo-react-common/dist/es/hooks/useRtl.js
var React8 = __toESM(require_react());
function useRtl(elementRef, initialDir, args) {
  var _a3 = React8.useState(initialDir), dir = _a3[0], setDir = _a3[1];
  React8.useEffect(function() {
    if (!dir && window && elementRef.current) {
      var rtlCandidate = window.getComputedStyle(elementRef.current).direction;
      if (rtlCandidate) {
        setDir(rtlCandidate);
      }
    }
  }, args);
  return dir;
}

// node_modules/@progress/kendo-react-common/dist/es/hooks/useMouse.js
var React9 = __toESM(require_react());
var useMouse = function(props, target, extend) {
  if (extend === void 0) {
    extend = {};
  }
  var handleMouseDown = React9.useCallback(function(event) {
    if (extend.onMouseDown) {
      extend.onMouseDown.call(void 0, event);
    }
    if (props.onMouseDown) {
      props.onMouseDown.call(void 0, {
        target: target.current,
        syntheticEvent: event
      });
    }
  }, [extend.onMouseDown, props.onMouseDown, target]);
  var handleMouseUp = React9.useCallback(function(event) {
    if (extend.onMouseUp) {
      extend.onMouseUp.call(void 0, event);
    }
    if (props.onMouseUp) {
      props.onMouseUp.call(void 0, {
        target: target.current,
        syntheticEvent: event
      });
    }
  }, [extend.onMouseUp, props.onMouseUp, target]);
  var handleClick = React9.useCallback(function(event) {
    if (extend.onClick) {
      extend.onClick.call(void 0, event);
    }
    if (props.onClick) {
      props.onClick.call(void 0, {
        target: target.current,
        syntheticEvent: event
      });
    }
  }, [extend.onClick, props.onClick, target]);
  var handleDoubleClick = React9.useCallback(function(event) {
    if (extend.onDoubleClick) {
      extend.onDoubleClick.call(void 0, event);
    }
    if (props.onDoubleClick) {
      props.onDoubleClick.call(void 0, {
        target: target.current,
        syntheticEvent: event
      });
    }
  }, [extend.onDoubleClick, props.onDoubleClick, target]);
  var handleMouseEnter = React9.useCallback(function(event) {
    if (extend.onMouseEnter) {
      extend.onMouseEnter.call(void 0, event);
    }
    if (props.onMouseEnter) {
      props.onMouseEnter.call(void 0, {
        target: target.current,
        syntheticEvent: event
      });
    }
  }, [extend.onMouseEnter, props.onMouseEnter, target]);
  var handleMouseLeave = React9.useCallback(function(event) {
    if (extend.onMouseLeave) {
      extend.onMouseLeave.call(void 0, event);
    }
    if (props.onMouseLeave) {
      props.onMouseLeave.call(void 0, {
        target: target.current,
        syntheticEvent: event
      });
    }
  }, [extend.onMouseLeave, props.onMouseLeave, target]);
  var handelMouseMove = React9.useCallback(function(event) {
    if (extend.onMouseMove) {
      extend.onMouseMove.call(void 0, event);
    }
    if (props.onMouseMove) {
      props.onMouseMove.call(void 0, {
        target: target.current,
        syntheticEvent: event
      });
    }
  }, [extend.onMouseMove, props.onMouseMove, target]);
  var handleMouseOut = React9.useCallback(function(event) {
    if (extend.onMouseOut) {
      extend.onMouseOut.call(void 0, event);
    }
    if (props.onMouseOut) {
      props.onMouseOut.call(void 0, {
        target: target.current,
        syntheticEvent: event
      });
    }
  }, [extend.onMouseOut, props.onMouseOut, target]);
  var handleMouseOver = React9.useCallback(function(event) {
    if (extend.onMouseOver) {
      extend.onMouseOver.call(void 0, event);
    }
    if (props.onMouseOver) {
      props.onMouseOver.call(void 0, {
        target: target.current,
        syntheticEvent: event
      });
    }
  }, [extend.onMouseOver, props.onMouseOver, target]);
  return {
    onClick: handleClick,
    onMouseUp: handleMouseUp,
    onMouseDown: handleMouseDown,
    onDoubleClick: handleDoubleClick,
    onMouseEnter: handleMouseEnter,
    onMouseLeave: handleMouseLeave,
    onMouseMove: handelMouseMove,
    onMouseOut: handleMouseOut,
    onMouseOver: handleMouseOver
  };
};

// node_modules/@progress/kendo-react-common/dist/es/hooks/useCollection.js
var React10 = __toESM(require_react());
var COLLECTION_ACTION;
(function(COLLECTION_ACTION2) {
  COLLECTION_ACTION2[COLLECTION_ACTION2["add"] = 0] = "add";
  COLLECTION_ACTION2[COLLECTION_ACTION2["remove"] = 1] = "remove";
})(COLLECTION_ACTION || (COLLECTION_ACTION = {}));
var useCollection = function(initial) {
  if (initial === void 0) {
    initial = [];
  }
  var collection = React10.useRef(initial);
  var handleCollectionAction = React10.useCallback(function(action) {
    switch (action.type) {
      case COLLECTION_ACTION.add:
        collection.current.push(action.item);
        break;
      case COLLECTION_ACTION.remove:
        var index = collection.current.indexOf(action.item);
        collection.current.splice(index, 1);
        break;
      default:
        break;
    }
  }, []);
  return [collection.current, handleCollectionAction];
};

// node_modules/@progress/kendo-react-common/dist/es/hooks/useDocument.js
var React11 = __toESM(require_react());

// node_modules/@progress/kendo-react-common/dist/es/hooks/useWindow.js
var React12 = __toESM(require_react());

// node_modules/@progress/kendo-react-common/dist/es/icons/Icon.js
var React13 = __toESM(require_react());
var PropTypes = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-common/dist/es/icons/constants.js
var SIZE_CLASSES = {
  "default": "",
  "xsmall": "k-icon-xs",
  "small": "k-icon-sm",
  "medium": "k-icon-md",
  "large": "k-icon-lg",
  "xlarge": "k-icon-xl"
};

// node_modules/@progress/kendo-react-common/dist/es/icons/Icon.js
var __assign3 = function() {
  __assign3 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign3.apply(this, arguments);
};
var __rest = function(s, e) {
  var t = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e.indexOf(p2) < 0)
      t[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t[p2[i]] = s[p2[i]];
    }
  return t;
};
var Icon = React13.forwardRef(function(props, ref) {
  var className = props.className, name = props.name, themeColor = props.themeColor, size = props.size, flip2 = props.flip, style = props.style, id = props.id, tabIndex = props.tabIndex, others = __rest(props, ["className", "name", "themeColor", "size", "flip", "style", "id", "tabIndex"]);
  var target = React13.useRef(null);
  var elementRef = React13.useRef(null);
  React13.useImperativeHandle(target, function() {
    return {
      element: elementRef.current
    };
  });
  React13.useImperativeHandle(ref, function() {
    return target.current;
  });
  var themeColorProp = React13.useMemo(function() {
    return themeColor || defaultProps.themeColor;
  }, [themeColor]);
  var sizeProp = React13.useMemo(function() {
    return size || defaultProps.size;
  }, [size]);
  var flipProp = React13.useMemo(function() {
    return flip2 || defaultProps.flip;
  }, [flip2]);
  var fontClassNames = React13.useMemo(function() {
    return classNames("k-icon", "k-i-" + name, "k-color-" + themeColorProp, {
      "k-flip-h": flipProp === "horizontal" || flipProp === "both",
      "k-flip-v": flipProp === "vertical" || flipProp === "both"
    }, SIZE_CLASSES[sizeProp], className);
  }, [name, themeColorProp, sizeProp, flipProp, className]);
  var mouseProps = useMouse(props, target);
  return React13.createElement("span", __assign3({ ref: elementRef }, others, mouseProps, { className: fontClassNames, id, tabIndex, style, role: "presentation" }));
});
Icon.propTypes = {
  style: PropTypes.object,
  classNames: PropTypes.string,
  name: PropTypes.string,
  themeColor: PropTypes.oneOf([
    "inherit",
    "primary",
    "secondary",
    "tertiary",
    "info",
    "success",
    "error",
    "warning",
    "dark",
    "light",
    "inverse"
  ]),
  size: PropTypes.oneOf(["default", "xsmall", "small", "medium", "large", "xlarge"]),
  flip: PropTypes.oneOf(["default", "horizontal", "vertical", "both"])
};
var defaultProps = {
  size: "default",
  themeColor: "inherit",
  flip: "default"
};
Icon.displayName = "KendoIcon";

// node_modules/@progress/kendo-react-common/dist/es/icons/SvgIcon.js
var React14 = __toESM(require_react());
var PropTypes2 = __toESM(require_prop_types());
var __assign4 = function() {
  __assign4 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign4.apply(this, arguments);
};
var __rest2 = function(s, e) {
  var t = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e.indexOf(p2) < 0)
      t[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t[p2[i]] = s[p2[i]];
    }
  return t;
};
var SvgIcon = React14.forwardRef(function(props, ref) {
  var children3 = props.children, className = props.className, svgClassName = props.svgClassName, icon = props.icon, flip2 = props.flip, id = props.id, tabIndex = props.tabIndex, size = props.size, style = props.style, svgStyle = props.svgStyle, themeColor = props.themeColor, viewBox = props.viewBox, others = __rest2(props, ["children", "className", "svgClassName", "icon", "flip", "id", "tabIndex", "size", "style", "svgStyle", "themeColor", "viewBox"]);
  var elementRef = React14.useRef(null);
  React14.useImperativeHandle(ref, function() {
    return {
      element: elementRef.current
    };
  });
  var iconNameProp = React14.useMemo(function() {
    return icon ? icon.name : defaultProps2.icon;
  }, [icon]);
  var themeColorProp = React14.useMemo(function() {
    return themeColor || defaultProps2.themeColor;
  }, [themeColor]);
  var sizeProp = React14.useMemo(function() {
    return size || defaultProps2.size;
  }, [size]);
  var flipProp = React14.useMemo(function() {
    return flip2 || defaultProps2.flip;
  }, [flip2]);
  var viewBoxProp = React14.useMemo(function() {
    return viewBox || defaultProps2.viewBox;
  }, [viewBox]);
  var elementClassNames = React14.useMemo(function() {
    return classNames("k-svg-icon", "k-color-" + themeColorProp, "k-svg-i-" + iconNameProp, {
      "k-flip-h": flipProp === "horizontal" || flipProp === "both",
      "k-flip-v": flipProp === "vertical" || flipProp === "both"
    }, SIZE_CLASSES[sizeProp], className);
  }, [iconNameProp, themeColorProp, sizeProp, flipProp, className]);
  var elementStyle = React14.useMemo(function() {
    if (props.width && props.height) {
      return __assign4({ width: props.width, height: props.height }, style);
    } else if (props.width) {
      return __assign4({ width: props.width, height: props.width }, style);
    } else if (props.height) {
      return __assign4({ width: props.height, height: props.height }, style);
    } else {
      return __assign4({}, style);
    }
  }, [props.width, props.height, style]);
  return React14.createElement(
    "span",
    { className: elementClassNames, style: elementStyle, ref: elementRef },
    React14.createElement("svg", __assign4({ id, className: svgClassName, style: svgStyle, "aria-hidden": true, tabIndex, focusable: "false", xmlns: "http://www.w3.org/2000/svg", viewBox: icon ? icon.viewBox : viewBoxProp, dangerouslySetInnerHTML: icon ? { __html: icon.content } : void 0 }, others), icon ? void 0 : children3)
  );
});
SvgIcon.propTypes = {
  style: PropTypes2.object,
  classNames: PropTypes2.string,
  children: PropTypes2.any,
  icon: PropTypes2.object,
  themeColor: PropTypes2.oneOf([
    "inherit",
    "primary",
    "secondary",
    "tertiary",
    "info",
    "success",
    "error",
    "warning",
    "dark",
    "light",
    "inverse"
  ]),
  size: PropTypes2.oneOf(["default", "xsmall", "small", "medium", "large", "xlarge"]),
  flip: PropTypes2.oneOf(["default", "horizontal", "vertical", "both"])
};
var defaultProps2 = {
  size: "default",
  themeColor: "inherit",
  flip: "default",
  icon: "",
  viewBox: "0 0 24 24"
};
SvgIcon.displayName = "KendoSvgIcon";

// node_modules/@progress/kendo-react-common/dist/es/typography/Typography.js
var React15 = __toESM(require_react());
var PropTypes3 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-common/dist/es/typography/constants.js
var FONT_SIZE_CLASSES = {
  "xsmall": "k-fs-xs",
  "small": "k-fs-sm",
  "medium": "k-fs-md",
  "large": "k-fs-lg",
  "xlarge": "k-fs-xl"
};
var FONT_WEIGHT_CLASSES = {
  "light": "k-font-weight-light",
  "normal": "k-font-weight-normal",
  "bold": "k-font-weight-bold"
};
var MARGIN_ENUM_CLASSES = {
  "xsmall": "k-m-xs",
  "small": "k-m-sm",
  "medium": "k-m-md",
  "large": "k-m-lg",
  "xlarge": "k-m-xl",
  "thin": "k-m-thin",
  "hair": "k-m-hair"
};
var MARGIN_ENUM_VALUES = {
  "xsmall": "xs",
  "small": "sm",
  "medium": "md",
  "large": "lg",
  "xlarge": "xl",
  "thin": "thin",
  "hair": "hair"
};
var MARGIN_SIDES_CLASSES = {
  "top": "k-mt-",
  "right": "k-mr-",
  "bottom": "k-mb-",
  "left": "k-ml-"
};
var TEXT_ALIGN_CLASSES = {
  "left": "k-text-left",
  "right": "k-text-right",
  "center": "k-text-center",
  "justify": "k-text-justify"
};
var TEXT_TRANSFORM_CLASSES = {
  "lowercase": "k-text-lowercase",
  "uppercase": "k-text-uppercase",
  "capitalize": "k-text-capitalize"
};
var THEME_COLOR_CLASSES = {
  "inherit": "k-color-inherit",
  "primary": "k-color-primary",
  "secondary": "k-color-secondary",
  "tertiary": "k-color-tertiary",
  "info": "k-color-info",
  "success": "k-color-success",
  "warning": "k-color-warning",
  "error": "k-color-error",
  "dark": "k-color-dark",
  "light": "k-color-light",
  "inverse": "k-color-inverse"
};

// node_modules/@progress/kendo-react-common/dist/es/typography/Typography.js
var __assign5 = function() {
  __assign5 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign5.apply(this, arguments);
};
var __rest3 = function(s, e) {
  var t = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e.indexOf(p2) < 0)
      t[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t[p2[i]] = s[p2[i]];
    }
  return t;
};
var generateTypography = function(element5) {
  var component = React15.forwardRef(function(props, ref) {
    var id = props.id, style = props.style, className = props.className, fontSize = props.fontSize, fontWeight = props.fontWeight, textAlign = props.textAlign, textTransform = props.textTransform, themeColor = props.themeColor, margin = props.margin, others = __rest3(props, ["id", "style", "className", "fontSize", "fontWeight", "textAlign", "textTransform", "themeColor", "margin"]);
    var target = React15.useRef(null);
    var elementRef = React15.useRef(null);
    React15.useImperativeHandle(target, function() {
      return {
        element: elementRef.current,
        props
      };
    });
    React15.useImperativeHandle(ref, function() {
      return target.current;
    });
    var defaultClass = function() {
      var classMap = element5 === "p" ? "paragraph" : element5;
      return "k-".concat(classMap);
    };
    var Component34 = element5;
    var setMarginClassPerSide = function(marginSide, value) {
      var val = typeof value === "string" ? MARGIN_ENUM_VALUES[value] : value;
      return "".concat(MARGIN_SIDES_CLASSES[marginSide]).concat(val);
    };
    var setMarginClasses = function() {
      if (margin === void 0) {
        return;
      }
      if (typeof margin === "string") {
        return [MARGIN_ENUM_CLASSES[margin]];
      }
      if (typeof margin === "number" && margin >= 0 && margin <= 24) {
        return ["k-m-".concat(margin)];
      }
      if (typeof margin === "object") {
        var marginClassesList_1 = [];
        Object.keys(margin).forEach(function(key) {
          if (margin[key] !== null && margin[key] !== void 0) {
            marginClassesList_1.push(setMarginClassPerSide(key, margin[key]));
          }
        });
        var classes = marginClassesList_1.join(" ");
        return classes;
      }
    };
    var setTypographyClasses = function() {
      var typographyArray = [
        defaultClass(),
        FONT_SIZE_CLASSES[fontSize],
        FONT_WEIGHT_CLASSES[fontWeight],
        TEXT_ALIGN_CLASSES[textAlign],
        TEXT_TRANSFORM_CLASSES[textTransform],
        THEME_COLOR_CLASSES[themeColor],
        setMarginClasses(),
        className
      ];
      var typographyClasses = typographyArray.filter(function(n) {
        return n !== void 0;
      }).join(" ");
      return typographyClasses;
    };
    return React15.createElement(Component34, __assign5({ id, ref: elementRef, className: setTypographyClasses(), style }, others), props.children);
  });
  component.propTypes = {
    style: PropTypes3.object,
    className: PropTypes3.string,
    fontSize: PropTypes3.oneOf(["xsmall", "small", "medium", "large", "xlarge"]),
    fontWeight: PropTypes3.oneOf(["light", "normal", "bold"]),
    margin: PropTypes3.oneOfType([
      PropTypes3.number,
      PropTypes3.object,
      PropTypes3.oneOf(["xsmall", "small", "medium", "large", "xlarge", "thin", "hair"])
    ]),
    textAlign: PropTypes3.oneOf(["left", "right", "center", "justify"]),
    textTransform: PropTypes3.oneOf(["lowercase", "uppercase", "capitalize"]),
    themeColor: PropTypes3.oneOf([
      "inherit",
      "primary",
      "secondary",
      "tertiary",
      "info",
      "success",
      "error",
      "warning",
      "dark",
      "light",
      "inverse"
    ])
  };
  component.displayName = "KendoReactTypography".concat(element5.toUpperCase());
  return component;
};
var h1 = generateTypography("h1");
var h2 = generateTypography("h2");
var h3 = generateTypography("h3");
var h4 = generateTypography("h4");
var h5 = generateTypography("h5");
var h6 = generateTypography("h6");
var p = generateTypography("p");
var code = generateTypography("code");
var pre = generateTypography("pre");

// node_modules/@progress/kendo-react-common/dist/es/drag-n-drop/index.js
var React21 = __toESM(require_react());

// node_modules/@progress/kendo-react-common/dist/es/hooks/useDraggable.js
var React18 = __toESM(require_react());

// node_modules/@progress/kendo-draggable-common/dist/es/algorithms/intersect.js
var getRatio = function(element5, target) {
  var elementRect = element5.getBoundingClientRect();
  var targetRect = target.getBoundingClientRect();
  var top = Math.max(targetRect.top, elementRect.top);
  var left = Math.max(targetRect.left, elementRect.left);
  var right = Math.min(targetRect.left + targetRect.width, elementRect.left + elementRect.width);
  var bottom = Math.min(targetRect.top + targetRect.height, elementRect.top + elementRect.height);
  var width = right - left;
  var height = bottom - top;
  if (left < right && top < bottom) {
    var targetArea = targetRect.width * targetRect.height;
    var entryArea = elementRect.width * elementRect.height;
    var intersectionArea = width * height;
    var intersectionRatio = intersectionArea / (targetArea + entryArea - intersectionArea);
    return Number(intersectionRatio.toFixed(4));
  }
  return 0;
};
var intersect = function(element5, candidates) {
  var max = 0;
  var result = null;
  candidates.forEach(function(candidate) {
    if (candidate && element5) {
      var ration = getRatio(element5, candidate);
      if (ration > max) {
        max = ration;
        result = candidate;
      }
    }
  });
  return result;
};

// node_modules/@progress/kendo-draggable-common/dist/es/utils/index.js
var detectBrowser = function() {
  var ua = window && window.navigator.userAgent;
  if (!ua) {
    return false;
  }
  var browser = false;
  var match = [];
  var browserRxs = {
    edge: /(edge)[ \/]([\w.]+)/i,
    webkit: /(chrome|crios)[ \/]([\w.]+)/i,
    safari: /(webkit)[ \/]([\w.]+)/i,
    opera: /(opera)(?:.*version|)[ \/]([\w.]+)/i,
    msie: /(msie\s|trident.*? rv:)([\w.]+)/i,
    mozilla: /(mozilla)(?:.*? rv:([\w.]+)|)/i
  };
  for (var agent in browserRxs) {
    if (browserRxs.hasOwnProperty(agent)) {
      match = ua.match(browserRxs[agent]);
      if (match) {
        browser = {};
        browser[agent] = true;
        browser[match[1].toLowerCase().split(" ")[0].split("/")[0]] = true;
        browser.version = parseInt(document.DOCUMENT_NODE || match[2], 10);
        break;
      }
    }
  }
  return browser;
};
var getDocument2 = function(element5) {
  return element5 ? element5.ownerDocument || window.document : window.document;
};
var getWindow = function(element5) {
  var document2 = getDocument2(element5);
  return document2 ? document2.defaultView || window : window;
};
var scrollableRoot = function(element5) {
  var support = { browser: detectBrowser() };
  var document2 = getDocument2(element5);
  return support.browser.edge || support.browser.safari ? document2.body : document2.documentElement;
};
var isScrollable = function(el) {
  if (el && el.className && typeof el.className === "string" && el.className.indexOf("k-auto-scrollable") > -1) {
    return true;
  }
  var overflow = window.getComputedStyle(el, "overflow").overflow;
  return overflow.indexOf("auto") > -1 || overflow.indexOf("scroll") > -1;
};
var getScrollableParent = function(el) {
  var root = scrollableRoot(el);
  if (!el || el === document.body || el === document.documentElement) {
    return root;
  }
  var parent = el;
  while (parent && parent !== document.body && parent.nodeType !== Node.DOCUMENT_FRAGMENT_NODE && parent.nodeType !== Node.DOCUMENT_NODE && !isScrollable(parent)) {
    parent = parent.parentNode;
  }
  if (parent && (parent === document.body || parent.nodeType === Node.DOCUMENT_FRAGMENT_NODE)) {
    return root;
  }
  return parent;
};
var autoScrollVelocity = function(mouseX, mouseY, rect) {
  var velocity = { x: 0, y: 0 };
  var AUTO_SCROLL_AREA = 50;
  if (mouseX - rect.left < AUTO_SCROLL_AREA) {
    velocity.x = -(AUTO_SCROLL_AREA - (mouseX - rect.left));
  } else if (rect.right - mouseX < AUTO_SCROLL_AREA) {
    velocity.x = AUTO_SCROLL_AREA - (rect.right - mouseX);
  }
  if (mouseY - rect.top < AUTO_SCROLL_AREA) {
    velocity.y = -(AUTO_SCROLL_AREA - (mouseY - rect.top));
  } else if (rect.bottom - mouseY < AUTO_SCROLL_AREA) {
    velocity.y = AUTO_SCROLL_AREA - (rect.bottom - mouseY);
  }
  return velocity;
};
var scrollableViewPort = function(el, window2) {
  var root = scrollableRoot(el);
  if (el === root) {
    return {
      top: root.scrollTop,
      left: root.scrollLeft,
      bottom: root.scrollTop + window2.innerHeight,
      right: root.scrollLeft + window2.innerWidth
    };
  } else {
    var rect = el.getBoundingClientRect();
    return {
      bottom: rect.top + rect.height,
      right: rect.left + rect.width,
      left: rect.left,
      top: rect.top
    };
  }
};
var isPointerInsideContainer = function(x, y, container) {
  var rect = container.getBoundingClientRect();
  return rect.top <= y && rect.left <= x && y <= rect.bottom && x <= rect.right;
};

// node_modules/@progress/kendo-draggable-common/dist/es/drag-n-drop.js
var DRAG_AND_DROP_DISPATCH_ACTION;
(function(DRAG_AND_DROP_DISPATCH_ACTION2) {
  DRAG_AND_DROP_DISPATCH_ACTION2["POINTER_DOWN"] = "pointerdown";
  DRAG_AND_DROP_DISPATCH_ACTION2["POINTER_MOVE"] = "pointermove";
  DRAG_AND_DROP_DISPATCH_ACTION2["POINTER_UP"] = "pointerup";
  DRAG_AND_DROP_DISPATCH_ACTION2["POINTER_CANCEL"] = "pointercancel";
  DRAG_AND_DROP_DISPATCH_ACTION2["MOUSE_DOWN"] = "mousedown";
  DRAG_AND_DROP_DISPATCH_ACTION2["MOUSE_MOVE"] = "mousemove";
  DRAG_AND_DROP_DISPATCH_ACTION2["MOUSE_UP"] = "mouseup";
  DRAG_AND_DROP_DISPATCH_ACTION2["CONTEXT_MENU"] = "contextmenu";
  DRAG_AND_DROP_DISPATCH_ACTION2["TOUCH_START"] = "touchstart";
  DRAG_AND_DROP_DISPATCH_ACTION2["TOUCH_MOVE"] = "touchmove";
  DRAG_AND_DROP_DISPATCH_ACTION2["TOUCH_END"] = "touchend";
  DRAG_AND_DROP_DISPATCH_ACTION2["TOUCH_CANCEL"] = "touchcancel";
  DRAG_AND_DROP_DISPATCH_ACTION2["SCROLL"] = "scroll";
  DRAG_AND_DROP_DISPATCH_ACTION2["START"] = "KENDO_DRAG_AND_DROP_START";
  DRAG_AND_DROP_DISPATCH_ACTION2["MOVE"] = "KENDO_DRAG_AND_DROP_MOVE";
  DRAG_AND_DROP_DISPATCH_ACTION2["END"] = "KENDO_DRAG_AND_DROP_END";
  DRAG_AND_DROP_DISPATCH_ACTION2["CANCEL"] = "KENDO_DRAG_AND_DROP_CANCEL";
})(DRAG_AND_DROP_DISPATCH_ACTION || (DRAG_AND_DROP_DISPATCH_ACTION = {}));
var isTouchEvent = function(event) {
  return /^touch/.test(event.type);
};
var isScrollEvent = function(event) {
  return /^(scroll)/.test(event.type);
};
var normalizeEvent = function(event, state) {
  return isTouchEvent(event) ? {
    pageX: event.changedTouches[0].pageX,
    pageY: event.changedTouches[0].pageY,
    clientX: event.changedTouches[0].clientX,
    clientY: event.changedTouches[0].clientY,
    scrollX: state.scrollOffset.x,
    scrollY: state.scrollOffset.y,
    offsetX: state.offset.x,
    offsetY: state.offset.y,
    type: event.type,
    originalEvent: event,
    isTouch: true,
    altKey: false,
    ctrlKey: false,
    shiftKey: false,
    metaKey: false
  } : isScrollEvent(event) ? {
    pageX: state.pageOffset.x,
    pageY: state.pageOffset.y,
    clientX: state.clientOffset.x,
    clientY: state.clientOffset.y,
    scrollX: state.scrollOffset.x,
    scrollY: state.scrollOffset.y,
    offsetX: state.offset.x,
    offsetY: state.offset.y,
    type: event.type,
    originalEvent: event,
    altKey: false,
    ctrlKey: false,
    shiftKey: false,
    metaKey: false
  } : {
    pageX: event.pageX,
    pageY: event.pageY,
    clientX: event.clientX,
    clientY: event.clientY,
    offsetX: event.offsetX,
    offsetY: event.offsetY,
    scrollX: state.scrollOffset.x,
    scrollY: state.scrollOffset.y,
    type: event.type,
    ctrlKey: event.ctrlKey,
    shiftKey: event.shiftKey,
    altKey: event.altKey,
    metaKey: event.metaKey,
    originalEvent: event
  };
};
var noop2 = function() {
};
var dispatchDragAndDrop = function(state, action, callbacks) {
  if (callbacks === void 0) {
    callbacks = {};
  }
  var _a3 = callbacks.onIsPressedChange, onIsPressedChange = _a3 === void 0 ? noop2 : _a3, _b = callbacks.onIsScrollingChange, onIsScrollingChange = _b === void 0 ? noop2 : _b, _c = callbacks.onVelocityChange, onVelocityChange = _c === void 0 ? noop2 : _c, _d = callbacks.onOffsetChange, onOffsetChange = _d === void 0 ? noop2 : _d, _e = callbacks.onPageOffsetChange, onPageOffsetChange = _e === void 0 ? noop2 : _e, _f = callbacks.onClientOffsetChange, onClientOffsetChange = _f === void 0 ? noop2 : _f, _g = callbacks.onScrollOffsetChange, onScrollOffsetChange = _g === void 0 ? noop2 : _g, _h = callbacks.onInitialScrollOffsetChange, onInitialScrollOffsetChange = _h === void 0 ? noop2 : _h;
  var drag = action.payload;
  var element5 = drag.element;
  var hint = drag.hint;
  var autoScrollDirection = state.autoScrollDirection;
  var overrideScrollableParent = state.scrollableParent;
  var event = normalizeEvent(action.event, state);
  switch (event.type) {
    case DRAG_AND_DROP_DISPATCH_ACTION.POINTER_DOWN:
      if (event.type === DRAG_AND_DROP_DISPATCH_ACTION.POINTER_DOWN && (!event.originalEvent.isPrimary || event.originalEvent.button !== 0)) {
        break;
      }
    case DRAG_AND_DROP_DISPATCH_ACTION.MOUSE_DOWN:
      if (event.type === DRAG_AND_DROP_DISPATCH_ACTION.MOUSE_DOWN && (event.originalEvent.which && event.originalEvent.which > 1) || state.ignoreMouse) {
        break;
      }
    case DRAG_AND_DROP_DISPATCH_ACTION.TOUCH_START:
      if (event.type === DRAG_AND_DROP_DISPATCH_ACTION.TOUCH_START && event.originalEvent.touches.length !== 1) {
        break;
      }
    case DRAG_AND_DROP_DISPATCH_ACTION.START: {
      var scrollableParent_1 = overrideScrollableParent || getScrollableParent(action.payload.element);
      onInitialScrollOffsetChange(scrollableParent_1 instanceof Window ? { x: scrollableParent_1.scrollX, y: scrollableParent_1.scrollY } : { x: scrollableParent_1.scrollLeft, y: scrollableParent_1.scrollTop });
      onClientOffsetChange({
        x: event.clientX,
        y: event.clientY
      });
      onPageOffsetChange({
        x: event.pageX,
        y: event.pageY
      });
      onOffsetChange({
        x: event.offsetX,
        y: event.offsetY
      });
      onIsPressedChange(true);
      if (drag.onPress) {
        drag.onPress(event);
      }
      break;
    }
    case DRAG_AND_DROP_DISPATCH_ACTION.SCROLL:
      if (event.type === DRAG_AND_DROP_DISPATCH_ACTION.SCROLL && !state.pressed) {
        break;
      }
      var scrollableParent = overrideScrollableParent || getScrollableParent(element5);
      var scrollOffset = scrollableParent instanceof Window ? { x: scrollableParent.scrollX, y: scrollableParent.scrollY } : { x: scrollableParent.scrollLeft, y: scrollableParent.scrollTop };
      event.scrollX = scrollOffset.x - state.initialScrollOffset.x;
      event.scrollY = scrollOffset.y - state.initialScrollOffset.y;
      onScrollOffsetChange({
        x: event.scrollX,
        y: event.scrollY
      });
    case DRAG_AND_DROP_DISPATCH_ACTION.POINTER_MOVE:
      if (event.type === DRAG_AND_DROP_DISPATCH_ACTION.POINTER_MOVE && !event.originalEvent.isPrimary) {
        break;
      }
    case DRAG_AND_DROP_DISPATCH_ACTION.MOUSE_MOVE:
    case DRAG_AND_DROP_DISPATCH_ACTION.TOUCH_MOVE:
      if (event.type === DRAG_AND_DROP_DISPATCH_ACTION.TOUCH_MOVE && event.originalEvent.touches.length !== 1) {
        break;
      }
    case DRAG_AND_DROP_DISPATCH_ACTION.MOVE: {
      if (state.pressed) {
        if (state.autoScroll && event.originalEvent.type !== "scroll") {
          if (element5) {
            var document_1 = getDocument2(element5);
            var scrollableParent_2 = overrideScrollableParent || getScrollableParent(document_1.elementFromPoint(event.clientX, event.clientY));
            var newVelocity = autoScrollVelocity(event.clientX, event.clientY, scrollableViewPort(scrollableParent_2, getWindow(element5)));
            onVelocityChange({
              x: autoScrollDirection && autoScrollDirection.horizontal === false ? 0 : newVelocity.x,
              y: autoScrollDirection && autoScrollDirection.vertical === false ? 0 : newVelocity.y
            });
            onIsScrollingChange(newVelocity.y !== 0 || newVelocity.x !== 0);
          }
        }
        if (!state.drag && drag.onDragStart) {
          drag.onDragStart(event);
        }
        if (drag.onDrag) {
          drag.onDrag(event);
        }
        var dropElement_1 = intersect(hint || element5, state.drops.map(function(drop2) {
          return drop2 && drop2.element;
        }).filter(function(d) {
          return d !== (hint || element5);
        }));
        var drop = state.drops.find(function(drop2) {
          return drop2.element === dropElement_1;
        });
        if (drop && dropElement_1 && isPointerInsideContainer(event.clientX, event.clientY, overrideScrollableParent || getScrollableParent(dropElement_1)) && dropElement_1 !== element5) {
          if ((state.drop && state.drop.element) !== dropElement_1) {
            if (state.drop && state.drop.onDragLeave) {
              state.drop.onDragLeave(event);
            }
            if (drop.onDragEnter) {
              drop.onDragEnter(event);
            }
          } else {
            if (drop.onDragOver) {
              drop.onDragOver(event);
            }
          }
        } else if (state.drop && state.drop.onDragLeave) {
          state.drop.onDragLeave(event);
        }
      }
      onClientOffsetChange({
        x: event.clientX,
        y: event.clientY
      });
      onPageOffsetChange({
        x: event.pageX,
        y: event.pageY
      });
      break;
    }
    case DRAG_AND_DROP_DISPATCH_ACTION.POINTER_UP:
      if (event.type === DRAG_AND_DROP_DISPATCH_ACTION.POINTER_UP && !event.originalEvent.isPrimary) {
        break;
      }
    case DRAG_AND_DROP_DISPATCH_ACTION.MOUSE_UP:
    case DRAG_AND_DROP_DISPATCH_ACTION.TOUCH_END:
      if (event.type === DRAG_AND_DROP_DISPATCH_ACTION.TOUCH_END && event.originalEvent.touches.length !== 1) {
        break;
      }
    case DRAG_AND_DROP_DISPATCH_ACTION.END: {
      onIsPressedChange(false);
      onIsScrollingChange(false);
      onScrollOffsetChange({ x: 0, y: 0 });
      if (drag.onRelease) {
        drag.onRelease(event);
      }
      if (state.drop && state.drop.onDrop) {
        state.drop.onDrop(event);
      }
      if (state.drag && drag.onDragEnd) {
        drag.onDragEnd(event);
      }
      break;
    }
    case DRAG_AND_DROP_DISPATCH_ACTION.POINTER_CANCEL:
    case DRAG_AND_DROP_DISPATCH_ACTION.CONTEXT_MENU:
    case DRAG_AND_DROP_DISPATCH_ACTION.TOUCH_CANCEL:
    case DRAG_AND_DROP_DISPATCH_ACTION.CANCEL: {
      onIsPressedChange(false);
      onIsScrollingChange(false);
      onScrollOffsetChange({ x: 0, y: 0 });
      if (drag.onDragEnd) {
        drag.onDragEnd(event);
      }
      if (state.drop && state.drop.onDragLeave) {
        state.drop.onDragLeave(event);
      }
      break;
    }
    default:
      break;
  }
};

// node_modules/@progress/kendo-draggable-common/dist/es/auto-scroll.js
var autoScroll = function(scrollableParent, vel) {
  if (!scrollableParent) {
    return;
  }
  var yIsScrollable;
  var xIsScrollable;
  var isRootNode = scrollableParent === scrollableRoot(scrollableParent);
  if (isRootNode) {
    yIsScrollable = document.body.scrollHeight > window.innerHeight;
    xIsScrollable = document.body.scrollWidth > window.innerWidth;
  } else {
    yIsScrollable = scrollableParent.offsetHeight <= scrollableParent.scrollHeight;
    xIsScrollable = scrollableParent.offsetWidth <= scrollableParent.scrollWidth;
  }
  var yDelta = scrollableParent.scrollTop + vel.y;
  var yInBounds = yIsScrollable && yDelta > 0 && yDelta < scrollableParent.scrollHeight;
  var xDelta = scrollableParent.scrollLeft + vel.x;
  var xInBounds = xIsScrollable && xDelta > 0 && xDelta < scrollableParent.scrollWidth;
  if (yInBounds) {
    scrollableParent.scrollTop += vel.y;
  } else if (yIsScrollable && yDelta < 0) {
    scrollableParent.scrollTop = 0;
  }
  if (xInBounds) {
    scrollableParent.scrollLeft += vel.x;
  } else if (xIsScrollable && xDelta < 0) {
    scrollableParent.scrollLeft = 0;
  }
};

// node_modules/@progress/kendo-react-common/dist/es/hooks/useInheritedState.js
var React16 = __toESM(require_react());
var useInheritedState = function(context2, defaultValue) {
  var _a3 = React16.useContext(context2), contextValue = _a3[0], contextSetter = _a3[1];
  var _b = React16.useState(defaultValue), localValue = _b[0], localSetter = _b[1];
  var value = contextValue !== void 0 ? contextValue : localValue;
  var handleValueChange = function() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    contextValue !== void 0 ? contextSetter.apply(void 0, args) : localSetter(args[0]);
  };
  return [
    value,
    handleValueChange
  ];
};

// node_modules/@progress/kendo-react-common/dist/es/drag-n-drop/context/index.js
var React17 = __toESM(require_react());
var DragContext = React17.createContext([
  void 0,
  noop
]);
var DropContext = React17.createContext([
  void 0,
  noop
]);
var DragsContext = React17.createContext([[], noop, noop]);
var DropsContext = React17.createContext([[], noop, noop]);

// node_modules/@progress/kendo-react-common/dist/es/hooks/useDraggable.js
var IGNORE_MOUSE_TIMEOUT = 2e3;
function useDraggable(ref, callbacks, options) {
  if (options === void 0) {
    options = {};
  }
  var _a3 = callbacks.onPress, onPress = _a3 === void 0 ? noop : _a3, _b = callbacks.onRelease, onRelease = _b === void 0 ? noop : _b, _c = callbacks.onDragStart, onDragStart = _c === void 0 ? noop : _c, _d = callbacks.onDrag, onDrag = _d === void 0 ? noop : _d, _e = callbacks.onDragEnd, onDragEnd = _e === void 0 ? noop : _e;
  var _f = options.hint, hint = _f === void 0 ? null : _f, _g = options.mouseOnly, mouseOnly = _g === void 0 ? false : _g, _h = options.autoScroll, autoScroll2 = _h === void 0 ? true : _h, _j = options.scrollContainer, scrollContainer = _j === void 0 ? null : _j;
  var _k = React18.useState(false), pressed = _k[0], setPressed = _k[1];
  var _l = React18.useState(false), scrolling = _l[0], setScrolling = _l[1];
  var drop = useInheritedState(DropContext)[0];
  var _m = useInheritedState(DragContext), drag = _m[0], setDrag = _m[1];
  var drops = React18.useContext(DropsContext)[0];
  var _o = React18.useContext(DragsContext), drags = _o[0], registerDrag = _o[1], deregisterDrag = _o[2];
  var velocity = React18.useRef({ x: 0, y: 0 });
  var scrollInterval = React18.useRef();
  var ignoreMouse = React18.useRef(false);
  var restoreMouseTimeout = React18.useRef();
  var scrollable = React18.useRef(null);
  var unmount = React18.useRef(false);
  var offset3 = React18.useRef({ x: 0, y: 0 });
  var pageOffset = React18.useRef({ x: 0, y: 0 });
  var clientOffset = React18.useRef({ x: 0, y: 0 });
  var initialClientOffset = React18.useRef({ x: 0, y: 0 });
  var scrollOffset = React18.useRef({ x: 0, y: 0 });
  var initialScrollOffset = React18.useRef({ x: 0, y: 0 });
  var supportPointerEvent = Boolean(typeof window !== "undefined" && window.PointerEvent);
  var pointers = !mouseOnly && supportPointerEvent;
  var getElement = React18.useCallback(function() {
    return ref.current && ref.current.element ? ref.current.element : ref.current;
  }, [ref]);
  var getHintElement = React18.useCallback(function() {
    return hint && hint.current && hint.current.element ? hint.current.element : hint ? hint.current : null;
  }, [hint]);
  var getScrollContainer = React18.useCallback(function() {
    return scrollContainer && scrollContainer.current && scrollContainer.current.element ? scrollContainer.current.element : scrollContainer ? scrollContainer.current : null;
  }, [scrollContainer]);
  var getAutoScrollContainer = React18.useCallback(function() {
    return typeof autoScroll2 === "object" && autoScroll2.boundaryElementRef && autoScroll2.boundaryElementRef.current && autoScroll2.boundaryElementRef.current.element ? autoScroll2.boundaryElementRef.current.element : typeof autoScroll2 === "object" && autoScroll2.boundaryElementRef && autoScroll2.boundaryElementRef.current ? autoScroll2.boundaryElementRef.current : null;
  }, [autoScroll2]);
  var target = React18.useRef(null);
  React18.useImperativeHandle(target, function() {
    return {
      element: getElement(),
      hint: getHintElement(),
      onPress: handlePress,
      onDragStart: handleDragStart,
      onDrag: handleDrag,
      onDragEnd: handleDragEnd,
      onRelease: handleRelease,
      data: ref.current
    };
  });
  var getDocument4 = React18.useCallback(function() {
    var element5 = getElement();
    return element5 ? element5.ownerDocument || document : document;
  }, [getElement]);
  var getWindow4 = React18.useCallback(function() {
    var document2 = getDocument4();
    return document2 ? document2.defaultView || window : window;
  }, [getDocument4]);
  var getState = React18.useCallback(function() {
    return {
      drag: drag ? drag.current : null,
      drop: drop ? drop.current : null,
      drags: drags.map(function(d) {
        return d.current;
      }),
      drops: drops.map(function(d) {
        return d.current;
      }),
      pressed,
      ignoreMouse: ignoreMouse.current,
      scrollOffset: scrollOffset.current,
      offset: offset3.current,
      pageOffset: pageOffset.current,
      initialScrollOffset: initialScrollOffset.current,
      clientOffset: clientOffset.current,
      initialClientOffset: initialClientOffset.current,
      velocity: velocity.current,
      autoScroll: Boolean(typeof autoScroll2 === "object" ? autoScroll2.enabled !== false : autoScroll2),
      scrollableParent: getAutoScrollContainer(),
      autoScrollDirection: typeof autoScroll2 === "object" ? autoScroll2.direction : { horizontal: true, vertical: true },
      isScrolling: scrolling
    };
  }, [drag, drop, drags, drops, pressed, autoScroll2, getAutoScrollContainer, scrolling]);
  var handlePressedChange = React18.useCallback(function(value) {
    setPressed(value);
  }, []);
  var handleScrollingChange = React18.useCallback(function(value) {
    setScrolling(value);
  }, []);
  var handleVelocityChange = React18.useCallback(function(value) {
    velocity.current = value;
  }, []);
  var handleOffsetChange = React18.useCallback(function(value) {
    offset3.current = value;
  }, []);
  var handleClientOffsetChange = React18.useCallback(function(value) {
    clientOffset.current = value;
  }, []);
  var handlePageOffsetChange = React18.useCallback(function(value) {
    pageOffset.current = value;
  }, []);
  var handleInitialClientOffsetChange = React18.useCallback(function(value) {
    initialClientOffset.current = value;
  }, []);
  var handleScrollOffsetChange = React18.useCallback(function(value) {
    scrollOffset.current = value;
  }, []);
  var handleInitialScrollOffsetChange = React18.useCallback(function(value) {
    initialScrollOffset.current = value;
  }, []);
  var handlePress = React18.useCallback(function(event) {
    onPress(event);
  }, [onPress]);
  var handleRelease = React18.useCallback(function(event) {
    onRelease(event);
  }, [onRelease]);
  var handleDragStart = React18.useCallback(function(event) {
    setDrag(target, { target: ref.current, event });
    onDragStart(event);
  }, [setDrag, ref, onDragStart]);
  var handleDrag = React18.useCallback(function(event) {
    onDrag(event);
  }, [onDrag]);
  var handleDragEnd = React18.useCallback(function(event) {
    if (unmount.current) {
      return;
    }
    setDrag(null, { target: ref.current, event });
    onDragEnd(event);
  }, [onDragEnd, setDrag, ref]);
  var dispatchDragEvent = React18.useCallback(function(event) {
    dispatchDragAndDrop(getState(), { event, payload: target.current }, {
      onVelocityChange: handleVelocityChange,
      onOffsetChange: handleOffsetChange,
      onClientOffsetChange: handleClientOffsetChange,
      onPageOffsetChange: handlePageOffsetChange,
      onInitialClientOffsetChange: handleInitialClientOffsetChange,
      onScrollOffsetChange: handleScrollOffsetChange,
      onInitialScrollOffsetChange: handleInitialScrollOffsetChange,
      onIsPressedChange: handlePressedChange,
      onIsScrollingChange: handleScrollingChange
    });
  }, [
    getState,
    handleVelocityChange,
    handleOffsetChange,
    handlePageOffsetChange,
    handleClientOffsetChange,
    handleInitialClientOffsetChange,
    handleInitialScrollOffsetChange,
    handlePressedChange,
    handleScrollOffsetChange,
    handleScrollingChange
  ]);
  var handlePointerDown = React18.useCallback(function(event) {
    dispatchDragEvent(event);
  }, [dispatchDragEvent]);
  var handlePointerMove = React18.useCallback(function(event) {
    dispatchDragEvent(event);
  }, [dispatchDragEvent]);
  var handlePointerCancel = React18.useCallback(function(event) {
    dispatchDragEvent(event);
  }, [dispatchDragEvent]);
  var handlePointerUp = React18.useCallback(function(event) {
    dispatchDragEvent(event);
  }, [dispatchDragEvent]);
  var handleMouseDown = React18.useCallback(function(event) {
    dispatchDragEvent(event);
  }, [dispatchDragEvent]);
  var handleMouseMove = React18.useCallback(function(event) {
    dispatchDragEvent(event);
  }, [dispatchDragEvent]);
  var handleMouseUp = React18.useCallback(function(event) {
    dispatchDragEvent(event);
  }, [dispatchDragEvent]);
  var handleContextMenu = React18.useCallback(function(event) {
    event.preventDefault();
    dispatchDragEvent(event);
  }, [dispatchDragEvent]);
  var handleTouchStart = React18.useCallback(function(event) {
    event.preventDefault();
    dispatchDragEvent(event);
  }, [dispatchDragEvent]);
  var handleTouchMove = React18.useCallback(function(event) {
    event.preventDefault();
    dispatchDragEvent(event);
  }, [dispatchDragEvent]);
  var handleTouchEnd = React18.useCallback(function(event) {
    if (event.touches.length === 0 && event.changedTouches.length === 1) {
      var currentWindow = getWindow4();
      ignoreMouse.current = true;
      restoreMouseTimeout.current = currentWindow.setTimeout(function() {
        ignoreMouse.current = false;
      }, IGNORE_MOUSE_TIMEOUT);
    }
    dispatchDragEvent(event);
  }, [dispatchDragEvent, getWindow4]);
  var handleScroll = React18.useCallback(function(event) {
    dispatchDragEvent(event);
  }, [dispatchDragEvent]);
  var prerequisites = React18.useCallback(function() {
    var element5 = getElement();
    if (element5) {
      var initialTouchAction_1 = element5.style.touchAction;
      element5.style.touchAction = "none";
      return function() {
        element5.style.touchAction = initialTouchAction_1;
      };
    }
  }, [getElement]);
  var register = React18.useCallback(function() {
    registerDrag(target);
    return function() {
      deregisterDrag(target);
    };
  }, [deregisterDrag, registerDrag]);
  var init = function() {
    var window2 = getWindow4();
    var element5 = getElement();
    var document2 = getDocument4();
    if (pointers) {
      if (element5) {
        scrollable.current = getScrollableParent(element5);
        if (scrollable.current) {
          scrollable.current.addEventListener("scroll", handleScroll, { passive: true });
        }
        element5.addEventListener("pointerdown", handlePointerDown, { passive: true });
      }
      if (pressed) {
        document2.addEventListener("pointermove", handlePointerMove);
        document2.addEventListener("pointerup", handlePointerUp, true);
        document2.addEventListener("contextmenu", handleContextMenu);
        document2.addEventListener("pointercancel", handlePointerCancel, { passive: true });
      }
    } else {
      window2.addEventListener("touchmove", noop, { capture: false, passive: false });
      if (element5) {
        element5.addEventListener("mousedown", handleMouseDown, { passive: true });
        if (!mouseOnly) {
          element5.addEventListener("touchstart", handleTouchStart, { passive: true });
          if (pressed) {
            element5.addEventListener("touchmove", handleTouchMove, { passive: true });
            element5.addEventListener("touchend", handleTouchEnd, { passive: true });
          }
        }
      }
      if (pressed) {
        document2.addEventListener("mousemove", handleMouseMove, { passive: true });
        document2.addEventListener("mouseup", handleMouseUp, { passive: true });
      }
    }
    return function() {
      if (scrollable.current) {
        scrollable.current.removeEventListener("scroll", handleScroll);
      }
      if (element5) {
        element5.removeEventListener("pointerdown", handlePointerDown);
        element5.removeEventListener("mousedown", handleMouseDown);
        element5.removeEventListener("touchstart", handleTouchStart);
        element5.removeEventListener("touchmove", handleTouchMove);
        element5.removeEventListener("touchend", handleTouchEnd);
      }
      document2.removeEventListener("pointermove", handlePointerMove);
      document2.removeEventListener("pointerup", handlePointerUp, true);
      document2.removeEventListener("contextmenu", handleContextMenu);
      document2.removeEventListener("pointercancel", handlePointerCancel);
      document2.removeEventListener("mousemove", handleMouseMove);
      document2.removeEventListener("mouseup", handleMouseUp);
      window2.removeEventListener("touchmove", noop);
      window2.clearTimeout(restoreMouseTimeout.current);
    };
  };
  React18.useEffect(function() {
    var window2 = getWindow4();
    if (scrolling) {
      var scrollableParent_1 = getScrollContainer() || getScrollableParent(document.elementFromPoint(clientOffset.current.x, clientOffset.current.y));
      window2.clearInterval(scrollInterval.current);
      scrollInterval.current = window2.setInterval(function() {
        autoScroll(scrollableParent_1, { x: velocity.current.x, y: velocity.current.y });
      }, 50);
    }
    return function() {
      window2.clearInterval(scrollInterval.current);
    };
  }, [getElement, getScrollContainer, getWindow4, scrolling]);
  React18.useEffect(prerequisites, [prerequisites]);
  React18.useEffect(init, [
    pressed,
    getWindow4,
    getElement,
    getDocument4,
    mouseOnly,
    pointers,
    handleContextMenu,
    handleMouseDown,
    handleMouseMove,
    handleMouseUp,
    handlePointerCancel,
    handlePointerDown,
    handlePointerMove,
    handlePointerUp,
    handleTouchEnd,
    handleTouchMove,
    handleTouchStart,
    handleScroll
  ]);
  React18.useEffect(function() {
    return function() {
      unmount.current = true;
    };
  }, []);
  React18.useLayoutEffect(register, [register]);
}

// node_modules/@progress/kendo-react-common/dist/es/hooks/useDroppable.js
var React19 = __toESM(require_react());
function useDroppable(ref, callbacks) {
  if (callbacks === void 0) {
    callbacks = {
      onDragEnter: noop,
      onDragOver: noop,
      onDragLeave: noop,
      onDrop: noop
    };
  }
  var _a3 = callbacks.onDragEnter, onDragEnter = _a3 === void 0 ? noop : _a3, _b = callbacks.onDragOver, onDragOver = _b === void 0 ? noop : _b, _c = callbacks.onDragLeave, onDragLeave = _c === void 0 ? noop : _c, _d = callbacks.onDrop, onDrop = _d === void 0 ? noop : _d;
  var _e = useInheritedState(DropContext), setDrop = _e[1];
  var _f = React19.useContext(DropsContext), registerDrop = _f[1], deregisterDrop = _f[2];
  var getElement = React19.useCallback(function() {
    return ref.current && ref.current.element ? ref.current.element : ref.current;
  }, [ref]);
  var target = React19.useRef(null);
  React19.useImperativeHandle(target, function() {
    return {
      element: getElement(),
      onDragEnter: handleDragEnter,
      onDragOver: handleDragOver,
      onDragLeave: handleDragLeave,
      onDrop: handleDrop,
      data: ref.current
    };
  });
  var handleDragEnter = React19.useCallback(function(event) {
    setDrop(target, { target: ref.current, event });
    onDragEnter(event);
  }, [setDrop, ref, onDragEnter]);
  var handleDragOver = React19.useCallback(function(event) {
    onDragOver(event);
  }, [onDragOver]);
  var handleDragLeave = React19.useCallback(function(event) {
    setDrop(null, { target: ref.current, event });
    onDragLeave(event);
  }, [setDrop, ref, onDragLeave]);
  var handleDrop = React19.useCallback(function(event) {
    setDrop(null, { target: ref.current, event });
    onDrop(event);
  }, [setDrop, ref, onDrop]);
  var register = React19.useCallback(function() {
    registerDrop(target);
    return function() {
      deregisterDrop(target);
    };
  }, [deregisterDrop, registerDrop]);
  React19.useLayoutEffect(register, [register]);
}

// node_modules/@progress/kendo-react-common/dist/es/hooks/useControlledState.js
var React20 = __toESM(require_react());
var __assign6 = function() {
  __assign6 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign6.apply(this, arguments);
};
var useControlledState = function(defaultProp, prop, callback) {
  var _a3 = React20.useState(prop || defaultProp), state = _a3[0], setState = _a3[1];
  var handleSetEdit = React20.useCallback(function(value, args) {
    setState(value);
    if (callback) {
      callback.call(void 0, __assign6(__assign6({}, args), { value }));
    }
  }, [callback, setState]);
  return [prop !== void 0 ? prop : state, handleSetEdit];
};

// node_modules/@progress/kendo-react-common/dist/es/drag-n-drop/index.js
var DragAndDrop = function(props) {
  var _a3 = useControlledState(null, void 0), drag = _a3[0], setDrag = _a3[1];
  var _b = useControlledState(null, void 0), drop = _b[0], setDrop = _b[1];
  var _c = useCollection([]), drags = _c[0], dispatchDrags = _c[1];
  var _d = useCollection([]), drops = _d[0], dispatchDrops = _d[1];
  var registerDrag = function(item) {
    dispatchDrags({
      type: COLLECTION_ACTION.add,
      item
    });
  };
  var deregisterDrag = function(item) {
    dispatchDrags({
      type: COLLECTION_ACTION.remove,
      item
    });
  };
  var registerDrop = function(item) {
    dispatchDrops({
      type: COLLECTION_ACTION.add,
      item
    });
  };
  var deregisterDrop = function(item) {
    dispatchDrops({
      type: COLLECTION_ACTION.remove,
      item
    });
  };
  return React21.createElement(
    DragContext.Provider,
    { value: [drag, setDrag] },
    React21.createElement(
      DropContext.Provider,
      { value: [drop, setDrop] },
      React21.createElement(
        DragsContext.Provider,
        { value: [drags, registerDrag, deregisterDrag] },
        React21.createElement(DropsContext.Provider, { value: [drops, registerDrop, deregisterDrop] }, props.children)
      )
    )
  );
};
DragAndDrop.displayName = "KendoReactDragAndDrop";

// node_modules/@progress/kendo-react-common/dist/es/Draggable.js
var React22 = __toESM(require_react());
var Draggable = React22.forwardRef(function(props, ref) {
  var childRef = React22.useRef(null);
  var target = React22.useRef(null);
  var getElement = React22.useCallback(function() {
    return childRef.current && childRef.current.element ? childRef.current.element : childRef.current;
  }, [childRef]);
  React22.useImperativeHandle(target, function() {
    return { element: getElement() || null };
  });
  React22.useImperativeHandle(ref, function() {
    return target.current;
  });
  React22.useImperativeHandle(props.childRef, function() {
    return childRef.current;
  });
  var handlePress = React22.useCallback(function(event) {
    if (!props.onPress) {
      return;
    }
    props.onPress({
      element: getElement(),
      target: target.current,
      event
    });
  }, [getElement, props.onPress]);
  var handleRelease = React22.useCallback(function(event) {
    if (!props.onRelease) {
      return;
    }
    props.onRelease({
      element: getElement(),
      target: target.current,
      event
    });
  }, [getElement, props.onRelease]);
  var handleDragStart = React22.useCallback(function(event) {
    if (!props.onDragStart) {
      return;
    }
    props.onDragStart({
      element: getElement(),
      target: target.current,
      event
    });
  }, [props, getElement]);
  var handleDrag = React22.useCallback(function(event) {
    if (!props.onDrag) {
      return;
    }
    props.onDrag({
      element: getElement(),
      target: target.current,
      event
    });
  }, [getElement, props.onDrag]);
  var handleDragEnd = React22.useCallback(function(event) {
    if (!props.onDragEnd) {
      return;
    }
    props.onDragEnd({
      element: getElement(),
      target: target.current,
      event
    });
  }, [getElement, props.onDragEnd]);
  useDraggable(childRef, {
    onPress: handlePress,
    onRelease: handleRelease,
    onDragStart: handleDragStart,
    onDrag: handleDrag,
    onDragEnd: handleDragEnd
  }, {
    mouseOnly: props.mouseOnly,
    autoScroll: props.autoScroll,
    hint: props.hint,
    scrollContainer: props.scrollContainer
  });
  return props.children ? React22.cloneElement(React22.Children.only(props.children), { ref: childRef }) : null;
});
Draggable.displayName = "KendoReactDraggable";

// node_modules/@progress/kendo-react-common/dist/es/Droppable.js
var React23 = __toESM(require_react());
var Droppable = React23.forwardRef(function(props, ref) {
  var childRef = React23.useRef(null);
  var target = React23.useRef(null);
  var getElement = React23.useCallback(function() {
    return childRef.current && childRef.current.element ? childRef.current.element : childRef.current;
  }, [childRef]);
  React23.useImperativeHandle(target, function() {
    return { element: getElement() || void 0 };
  });
  React23.useImperativeHandle(ref, function() {
    return target.current;
  });
  React23.useImperativeHandle(props.childRef, function() {
    return childRef.current;
  });
  var handleDragEnter = React23.useCallback(function(event) {
    if (!props.onDragEnter) {
      return;
    }
    props.onDragEnter({
      element: getElement(),
      target: target.current,
      event
    });
  }, [props.onDragEnter, getElement]);
  var handleDragOver = React23.useCallback(function(event) {
    if (!props.onDragOver) {
      return;
    }
    props.onDragOver({
      element: getElement(),
      target: target.current,
      event
    });
  }, [getElement, props.onDragOver]);
  var handleDragLeave = React23.useCallback(function(event) {
    if (!props.onDragLeave) {
      return;
    }
    props.onDragLeave({
      element: getElement(),
      target: target.current,
      event
    });
  }, [props.onDragLeave, getElement]);
  var handleDrop = React23.useCallback(function(event) {
    if (!props.onDrop) {
      return;
    }
    props.onDrop({
      element: getElement(),
      target: target.current,
      event
    });
  }, [props.onDrop, getElement]);
  useDroppable(childRef, {
    onDragEnter: handleDragEnter,
    onDragOver: handleDragOver,
    onDragLeave: handleDragLeave,
    onDrop: handleDrop
  });
  return props.children ? React23.cloneElement(React23.Children.only(props.children), { ref: childRef }) : null;
});
Droppable.displayName = "KendoReactDroppable";

// node_modules/@progress/kendo-react-common/dist/es/theme.js
var kendoThemeMaps = {
  sizeMap: {
    small: "sm",
    medium: "md",
    large: "lg"
  },
  roundedMap: {
    small: "sm",
    medium: "md",
    large: "lg"
  }
};

// node_modules/@progress/kendo-react-labels/dist/es/Label.js
var React29 = __toESM(require_react());
var PropTypes6 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-labels/dist/es/messages/index.js
var _a;
var labelsOptional = "labels.optional";
var messages = (_a = {}, _a[labelsOptional] = "(Optional)", _a);

// node_modules/@progress/kendo-react-intl/dist/es/Intl/IntlProvider.js
var React25 = __toESM(require_react());
var PropTypes4 = __toESM(require_prop_types());

// node_modules/@progress/kendo-intl/dist/es/cldr/default-data.js
var defaultData = {
  en: {
    name: "en",
    identity: {
      version: {
        _unicodeVersion: "14.0.0",
        _cldrVersion: "41"
      },
      language: "en"
    },
    territory: "US",
    numbers: {
      symbols: {
        decimal: ".",
        group: ",",
        list: ";",
        percentSign: "%",
        plusSign: "+",
        minusSign: "-",
        exponential: "E",
        superscriptingExponent: "\xD7",
        perMille: "\u2030",
        infinity: "\u221E",
        nan: "NaN",
        timeSeparator: ":",
        approximatelySign: "~"
      },
      decimal: {
        patterns: [
          "n"
        ],
        groupSize: [
          3
        ]
      },
      scientific: {
        patterns: [
          "nEn"
        ],
        groupSize: []
      },
      percent: {
        patterns: [
          "n%"
        ],
        groupSize: [
          3
        ]
      },
      currency: {
        patterns: [
          "$n"
        ],
        groupSize: [
          3
        ],
        "unitPattern-count-one": "n $",
        "unitPattern-count-other": "n $"
      },
      currencies: {
        BGN: {
          displayName: "Bulgarian Lev",
          "displayName-count-one": "Bulgarian lev",
          "displayName-count-other": "Bulgarian leva",
          symbol: "BGN"
        },
        EUR: {
          displayName: "Euro",
          "displayName-count-one": "euro",
          "displayName-count-other": "euros",
          symbol: "\u20AC",
          "symbol-alt-narrow": "\u20AC"
        },
        USD: {
          displayName: "US Dollar",
          "displayName-count-one": "US dollar",
          "displayName-count-other": "US dollars",
          symbol: "$",
          "symbol-alt-narrow": "$"
        }
      },
      localeCurrency: "USD",
      accounting: {
        patterns: [
          "$n",
          "($n)"
        ],
        groupSize: [
          3
        ]
      }
    },
    calendar: {
      gmtFormat: "GMT{0}",
      gmtZeroFormat: "GMT",
      patterns: {
        d: "M/d/y",
        D: "EEEE, MMMM d, y",
        m: "MMM d",
        M: "MMMM d",
        y: "MMM y",
        Y: "MMMM y",
        F: "EEEE, MMMM d, y h:mm:ss a",
        g: "M/d/y h:mm a",
        G: "M/d/y h:mm:ss a",
        t: "h:mm a",
        T: "h:mm:ss a",
        s: "yyyy'-'MM'-'dd'T'HH':'mm':'ss",
        u: "yyyy'-'MM'-'dd HH':'mm':'ss'Z'"
      },
      dateTimeFormats: {
        full: "{1} 'at' {0}",
        long: "{1} 'at' {0}",
        medium: "{1}, {0}",
        short: "{1}, {0}",
        availableFormats: {
          Bh: "h B",
          Bhm: "h:mm B",
          Bhms: "h:mm:ss B",
          d: "d",
          E: "ccc",
          EBhm: "E h:mm B",
          EBhms: "E h:mm:ss B",
          Ed: "d E",
          Ehm: "E h:mm a",
          EHm: "E HH:mm",
          Ehms: "E h:mm:ss a",
          EHms: "E HH:mm:ss",
          Gy: "y G",
          GyMd: "M/d/y GGGGG",
          GyMMM: "MMM y G",
          GyMMMd: "MMM d, y G",
          GyMMMEd: "E, MMM d, y G",
          h: "h a",
          H: "HH",
          hm: "h:mm a",
          Hm: "HH:mm",
          hms: "h:mm:ss a",
          Hms: "HH:mm:ss",
          hmsv: "h:mm:ss a v",
          Hmsv: "HH:mm:ss v",
          hmv: "h:mm a v",
          Hmv: "HH:mm v",
          M: "L",
          Md: "M/d",
          MEd: "E, M/d",
          MMM: "LLL",
          MMMd: "MMM d",
          MMMEd: "E, MMM d",
          MMMMd: "MMMM d",
          "MMMMW-count-one": "'week' W 'of' MMMM",
          "MMMMW-count-other": "'week' W 'of' MMMM",
          ms: "mm:ss",
          y: "y",
          yM: "M/y",
          yMd: "M/d/y",
          yMEd: "E, M/d/y",
          yMMM: "MMM y",
          yMMMd: "MMM d, y",
          yMMMEd: "E, MMM d, y",
          yMMMM: "MMMM y",
          yQQQ: "QQQ y",
          yQQQQ: "QQQQ y",
          "yw-count-one": "'week' w 'of' Y",
          "yw-count-other": "'week' w 'of' Y"
        }
      },
      timeFormats: {
        full: "h:mm:ss a zzzz",
        long: "h:mm:ss a z",
        medium: "h:mm:ss a",
        short: "h:mm a"
      },
      dateFormats: {
        full: "EEEE, MMMM d, y",
        long: "MMMM d, y",
        medium: "MMM d, y",
        short: "M/d/yy"
      },
      days: {
        format: {
          abbreviated: [
            "Sun",
            "Mon",
            "Tue",
            "Wed",
            "Thu",
            "Fri",
            "Sat"
          ],
          narrow: [
            "S",
            "M",
            "T",
            "W",
            "T",
            "F",
            "S"
          ],
          short: [
            "Su",
            "Mo",
            "Tu",
            "We",
            "Th",
            "Fr",
            "Sa"
          ],
          wide: [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ]
        },
        "stand-alone": {
          abbreviated: [
            "Sun",
            "Mon",
            "Tue",
            "Wed",
            "Thu",
            "Fri",
            "Sat"
          ],
          narrow: [
            "S",
            "M",
            "T",
            "W",
            "T",
            "F",
            "S"
          ],
          short: [
            "Su",
            "Mo",
            "Tu",
            "We",
            "Th",
            "Fr",
            "Sa"
          ],
          wide: [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ]
        }
      },
      months: {
        format: {
          abbreviated: [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec"
          ],
          narrow: [
            "J",
            "F",
            "M",
            "A",
            "M",
            "J",
            "J",
            "A",
            "S",
            "O",
            "N",
            "D"
          ],
          wide: [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December"
          ]
        },
        "stand-alone": {
          abbreviated: [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec"
          ],
          narrow: [
            "J",
            "F",
            "M",
            "A",
            "M",
            "J",
            "J",
            "A",
            "S",
            "O",
            "N",
            "D"
          ],
          wide: [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December"
          ]
        }
      },
      quarters: {
        format: {
          abbreviated: [
            "Q1",
            "Q2",
            "Q3",
            "Q4"
          ],
          narrow: [
            "1",
            "2",
            "3",
            "4"
          ],
          wide: [
            "1st quarter",
            "2nd quarter",
            "3rd quarter",
            "4th quarter"
          ]
        },
        "stand-alone": {
          abbreviated: [
            "Q1",
            "Q2",
            "Q3",
            "Q4"
          ],
          narrow: [
            "1",
            "2",
            "3",
            "4"
          ],
          wide: [
            "1st quarter",
            "2nd quarter",
            "3rd quarter",
            "4th quarter"
          ]
        }
      },
      dayPeriods: {
        format: {
          abbreviated: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "in the morning",
            afternoon1: "in the afternoon",
            evening1: "in the evening",
            night1: "at night"
          },
          narrow: {
            midnight: "mi",
            am: "a",
            "am-alt-variant": "am",
            noon: "n",
            pm: "p",
            "pm-alt-variant": "pm",
            morning1: "in the morning",
            afternoon1: "in the afternoon",
            evening1: "in the evening",
            night1: "at night"
          },
          wide: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "in the morning",
            afternoon1: "in the afternoon",
            evening1: "in the evening",
            night1: "at night"
          }
        },
        "stand-alone": {
          abbreviated: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "morning",
            afternoon1: "afternoon",
            evening1: "evening",
            night1: "night"
          },
          narrow: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "morning",
            afternoon1: "afternoon",
            evening1: "evening",
            night1: "night"
          },
          wide: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "morning",
            afternoon1: "afternoon",
            evening1: "evening",
            night1: "night"
          }
        }
      },
      eras: {
        format: {
          wide: {
            "0": "Before Christ",
            "1": "Anno Domini",
            "0-alt-variant": "Before Common Era",
            "1-alt-variant": "Common Era"
          },
          abbreviated: {
            "0": "BC",
            "1": "AD",
            "0-alt-variant": "BCE",
            "1-alt-variant": "CE"
          },
          narrow: {
            "0": "B",
            "1": "A",
            "0-alt-variant": "BCE",
            "1-alt-variant": "CE"
          }
        }
      },
      dateFields: {
        era: {
          wide: "era",
          short: "era",
          narrow: "era"
        },
        year: {
          wide: "year",
          short: "yr.",
          narrow: "yr."
        },
        quarter: {
          wide: "quarter",
          short: "qtr.",
          narrow: "qtr."
        },
        month: {
          wide: "month",
          short: "mo.",
          narrow: "mo."
        },
        week: {
          wide: "week",
          short: "wk.",
          narrow: "wk."
        },
        weekOfMonth: {
          wide: "week of month",
          short: "wk. of mo.",
          narrow: "wk. of mo."
        },
        day: {
          wide: "day",
          short: "day",
          narrow: "day"
        },
        dayOfYear: {
          wide: "day of year",
          short: "day of yr.",
          narrow: "day of yr."
        },
        weekday: {
          wide: "day of the week",
          short: "day of wk.",
          narrow: "day of wk."
        },
        weekdayOfMonth: {
          wide: "weekday of the month",
          short: "wkday. of mo.",
          narrow: "wkday. of mo."
        },
        dayperiod: {
          short: "AM/PM",
          wide: "AM/PM",
          narrow: "AM/PM"
        },
        hour: {
          wide: "hour",
          short: "hr.",
          narrow: "hr."
        },
        minute: {
          wide: "minute",
          short: "min.",
          narrow: "min."
        },
        second: {
          wide: "second",
          short: "sec.",
          narrow: "sec."
        },
        zone: {
          wide: "time zone",
          short: "zone",
          narrow: "zone"
        },
        millisecond: {
          narrow: "ms",
          short: "ms",
          wide: "millisecond"
        }
      }
    }
  },
  supplemental: {
    likelySubtags: {
      en: "en-Latn-US"
    },
    currencyData: {
      region: {
        US: [
          {
            USD: {
              _from: "1792-01-01"
            }
          }
        ]
      }
    },
    weekData: {
      firstDay: {
        US: "sun"
      },
      weekendStart: {
        "001": "sat"
      },
      weekendEnd: {
        "001": "sun"
      }
    }
  }
};
var default_data_default = defaultData;

// node_modules/@progress/kendo-intl/dist/es/common/is-string.js
function isString(value) {
  return typeof value === "string";
}

// node_modules/@progress/kendo-intl/dist/es/error-details.js
var error_details_default = {
  "NoLocale": "Missing locale info for '{0}'",
  "NoCurrency": "Cannot determine currency information. Please load the locale currencies data.",
  "NoSupplementalCurrency": "Cannot determine currency. Please load the supplemental currencyData.",
  "NoCurrencyRegion": "No currency data for region '{0}'",
  "NoCurrencyDisplay": "Cannot determine currency display information. Please load the locale currencies data. The default culture does not include the all currencies data.",
  "NoGMTInfo": "Cannot determine locale GMT format. Please load the locale timeZoneNames data.",
  "NoWeekData": "Cannot determine locale first day of week. Please load the supplemental weekData.",
  "NoFirstDay": "Cannot determine locale first day of week. Please load the supplemental weekData. The default culture includes only the 'en-US' first day info.",
  "NoValidCurrency": "Cannot determine a default currency for the {0} locale. Please specify explicitly the currency with the format options.",
  "NoDateFieldNames": "Cannot determine the locale date field names. Please load the locale dateFields data."
};

// node_modules/@progress/kendo-intl/dist/es/errors.js
var formatRegExp = /\{(\d+)}?\}/g;
var IntlError = function IntlError2(ref) {
  var name = ref.name;
  var message = ref.message;
  if (!name || !message) {
    throw new Error("{ name: string, message: string } object is required!");
  }
  this.name = name;
  this.message = message;
};
IntlError.prototype.formatMessage = function formatMessage() {
  var values2 = [], len = arguments.length;
  while (len--)
    values2[len] = arguments[len];
  var flattenValues = flatten(values2);
  var formattedMessage = this.message.replace(formatRegExp, function(match, index) {
    return flattenValues[parseInt(index, 10)];
  });
  return this.name + ": " + formattedMessage;
};
IntlError.prototype.error = function error() {
  var values2 = [], len = arguments.length;
  while (len--)
    values2[len] = arguments[len];
  return new Error(this.formatMessage(values2));
};
var flatten = function(arr) {
  return arr.reduce(function(a, b) {
    return a.concat(b);
  }, []);
};
var toIntlErrors = function(errors2) {
  var predicate = function(prev, name) {
    prev[name] = new IntlError({ name, message: errors2[name] });
    return prev;
  };
  return Object.keys(errors2).reduce(predicate, {});
};
var errors = toIntlErrors(error_details_default);

// node_modules/@progress/kendo-intl/dist/es/cldr/info.js
function availableLocaleInfo(fullName, suffixes) {
  var parts = fullName.split("-");
  var language = parts[0];
  var script = parts[1];
  var territory = parts[2];
  return cldr[fullName] || suffixes.indexOf(territory) !== -1 && cldr[language + "-" + territory] || suffixes.indexOf(script) !== -1 && cldr[language + "-" + script] || cldr[language];
}
function localeFullName(language, suffixes) {
  var likelySubtags = cldr.supplemental.likelySubtags;
  for (var idx = 0; idx < suffixes.length; idx++) {
    var name = likelySubtags[language + "-" + suffixes[idx]];
    if (name) {
      return name;
    }
  }
  if (likelySubtags[language]) {
    return likelySubtags[language];
  }
}
var cldr = default_data_default;
function getLocaleInfo(locale) {
  var info;
  if (isString(locale)) {
    info = localeInfo(locale);
  } else {
    info = locale;
  }
  return info;
}
function localeInfo(locale) {
  if (cldr[locale]) {
    return cldr[locale];
  }
  var likelySubtags = cldr.supplemental.likelySubtags;
  if (likelySubtags) {
    var parts = locale.split("-");
    var language = parts[0];
    var suffixes = parts.slice(1);
    var fullName = localeFullName(language, suffixes);
    var info = fullName ? availableLocaleInfo(fullName, suffixes) : null;
    if (info) {
      return info;
    }
  }
  throw errors.NoLocale.error(locale);
}

// node_modules/@progress/kendo-intl/dist/es/common/constants.js
var DECIMAL = "decimal";
var CURRENCY = "currency";
var ACCOUNTING = "accounting";
var PERCENT = "percent";
var SCIENTIFIC = "scientific";
var CURRENCY_PLACEHOLDER = "$";
var PERCENT_PLACEHOLDER = "%";
var NUMBER_PLACEHOLDER = "n";
var LIST_SEPARATOR = ";";
var GROUP_SEPARATOR = ",";
var POINT = ".";
var EMPTY = "";
var DEFAULT_LOCALE = "en";

// node_modules/@progress/kendo-intl/dist/es/cldr/territory.js
function territoryFromName(name, identity) {
  var likelySubtags = cldr.supplemental.likelySubtags;
  var parts = name.split("-");
  if (likelySubtags) {
    var likelyName = likelySubtags[name] || likelySubtags[parts[0]];
    if (likelyName) {
      parts = likelyName.split("-");
    }
  }
  if (identity) {
    for (var idx = parts.length - 1; idx >= 1; idx--) {
      var part = parts[idx];
      if (part === identity.variant || part === identity.script) {
        parts.splice(idx, 1);
      }
    }
  }
  var length = parts.length;
  if (length > 1) {
    var territory = parts[length - 1];
    return territory.toUpperCase();
  }
}
function localeTerritory(info) {
  if (info.territory) {
    return info.territory;
  }
  var name = info.name;
  var identity = info.identity;
  var territory;
  if (identity && identity.territory) {
    territory = identity.territory;
  } else {
    territory = territoryFromName(name, identity);
  }
  info.territory = territory;
  return territory;
}

// node_modules/@progress/kendo-intl/dist/es/cldr/date-field-name.js
function dateFieldName(options, locale) {
  if (locale === void 0)
    locale = DEFAULT_LOCALE;
  var info = localeInfo(locale);
  var dateFields = info.calendar.dateFields;
  if (!dateFields) {
    throw errors.NoDateFieldNames.error();
  }
  var fieldNameInfo = dateFields[options.type] || {};
  return fieldNameInfo[options.nameType] || fieldNameInfo["wide"];
}

// node_modules/@progress/kendo-intl/dist/es/cldr/date-format-names.js
function lowerArray(arr) {
  var result = [];
  for (var idx = 0; idx < arr.length; idx++) {
    result.push(arr[idx].toLowerCase());
  }
  return result;
}
function lowerObject(obj) {
  var result = {};
  for (var field in obj) {
    result[field] = obj[field].toLowerCase();
  }
  return result;
}
function cloneLower(obj) {
  var result = Array.isArray(obj) ? lowerArray(obj) : lowerObject(obj);
  return result;
}
function dateFormatNames(locale, options) {
  var type = options.type;
  var nameType = options.nameType;
  var standAlone = options.standAlone;
  var lower = options.lower;
  var info = getLocaleInfo(locale);
  var formatType = standAlone ? "stand-alone" : "format";
  var lowerNameType = (lower ? "lower-" : EMPTY) + nameType;
  var formatNames2 = info.calendar[type][formatType];
  var result = formatNames2[lowerNameType];
  if (!result && lower) {
    result = formatNames2[lowerNameType] = cloneLower(formatNames2[nameType]);
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/cldr/parse-range-date.js
function parseRangeDate(value) {
  var parts = value.split("-");
  var year = parseInt(parts[0], 10);
  var month = parseInt(parts[1], 10) - 1;
  var day = parseInt(parts[2], 10);
  return new Date(year, month, day);
}

// node_modules/@progress/kendo-intl/dist/es/cldr/currency.js
var NoCurrency = errors.NoCurrency;
var NoCurrencyDisplay = errors.NoCurrencyDisplay;
var NoSupplementalCurrency = errors.NoSupplementalCurrency;
var NoCurrencyRegion = errors.NoCurrencyRegion;
var NoValidCurrency = errors.NoValidCurrency;
var DEFAULT_CURRENCY_FRACTIONS = 2;
var SYMBOL = "symbol";
var INVALID_CURRENCY_CODE = "XXX";
var GLOBAL_CURRENCIES = {
  "001": "USD",
  "150": "EUR"
};
function getCurrencyInfo(locale, currency, throwIfNoValid) {
  var info = getLocaleInfo(locale);
  var currencies = info.numbers.currencies;
  if (!currencies) {
    if (throwIfNoValid) {
      throw NoCurrency.error();
    }
    return;
  }
  var currencyDisplayInfo = currencies[currency];
  if (!currencyDisplayInfo) {
    if (throwIfNoValid) {
      throw NoCurrencyDisplay.error();
    }
    return;
  }
  return currencyDisplayInfo;
}
function lengthComparer(a, b) {
  return b.length - a.length;
}
function regionCurrency(regionCurrencies) {
  var latestValidUntil, latestValidUntilRange;
  var latestStillValid, latestStillValidDate;
  for (var idx = 0; idx < regionCurrencies.length; idx++) {
    var currency = regionCurrencies[idx];
    var code2 = Object.keys(currency)[0];
    var info = currency[code2];
    if (code2 !== INVALID_CURRENCY_CODE && info._tender !== "false" && info._from) {
      if (!info._to) {
        var stillValidDate = parseRangeDate(info._from);
        if (!latestStillValidDate || latestStillValidDate < stillValidDate) {
          latestStillValid = code2;
          latestStillValidDate = stillValidDate;
        }
      } else if (!latestStillValid) {
        var validFrom = parseRangeDate(info._from);
        var validTo = parseRangeDate(info._to);
        if (!latestValidUntilRange || latestValidUntilRange.to < validTo || latestValidUntilRange.from < validFrom) {
          latestValidUntil = code2;
          latestValidUntilRange = {
            from: validFrom,
            to: validTo
          };
        }
      }
    }
  }
  return latestStillValid || latestValidUntil;
}
function currencyDisplays(locale, currency, throwIfNoValid) {
  if (throwIfNoValid === void 0)
    throwIfNoValid = true;
  var currencyInfo = getCurrencyInfo(locale, currency, throwIfNoValid);
  if (!currencyInfo) {
    return;
  }
  if (!currencyInfo.displays) {
    var displays = [currency];
    for (var field in currencyInfo) {
      displays.push(currencyInfo[field]);
    }
    displays.sort(lengthComparer);
    currencyInfo.displays = displays;
  }
  return currencyInfo.displays;
}
function currencyDisplay(locale, options) {
  var value = options.value;
  var currency = options.currency;
  var currencyDisplay2 = options.currencyDisplay;
  if (currencyDisplay2 === void 0)
    currencyDisplay2 = SYMBOL;
  if (currencyDisplay2 === "code") {
    return currency;
  }
  var currencyInfo = getCurrencyInfo(locale, currency, true);
  var result;
  if (currencyDisplay2 === SYMBOL) {
    result = currencyInfo["symbol-alt-narrow"] || currencyInfo[SYMBOL];
  } else {
    if (typeof value === "undefined" || value !== 1) {
      result = currencyInfo["displayName-count-other"];
    } else {
      result = currencyInfo["displayName-count-one"];
    }
  }
  return result;
}
function currencyFractionOptions(code2) {
  var minimumFractionDigits = DEFAULT_CURRENCY_FRACTIONS;
  var maximumFractionDigits = DEFAULT_CURRENCY_FRACTIONS;
  var fractions = ((cldr.supplemental.currencyData || {}).fractions || {})[code2];
  if (fractions && fractions._digits) {
    maximumFractionDigits = minimumFractionDigits = parseInt(fractions._digits, 10);
  }
  return {
    minimumFractionDigits,
    maximumFractionDigits
  };
}
function territoryCurrencyCode(territory, throwIfNoValid) {
  if (throwIfNoValid === void 0)
    throwIfNoValid = true;
  if (GLOBAL_CURRENCIES[territory]) {
    return GLOBAL_CURRENCIES[territory];
  }
  var currencyData = cldr.supplemental.currencyData;
  if (!currencyData) {
    if (throwIfNoValid) {
      throw NoSupplementalCurrency.error();
    }
    return;
  }
  var regionCurrencies = currencyData.region[territory];
  if (!regionCurrencies) {
    if (throwIfNoValid) {
      throw NoCurrencyRegion.error(territory);
    }
    return;
  }
  var currencyCode = regionCurrency(regionCurrencies);
  return currencyCode;
}
function localeCurrency(locale, throwIfNoValid) {
  var info = getLocaleInfo(locale);
  var numbers = info.numbers;
  if (!numbers.localeCurrency) {
    var currency = territoryCurrencyCode(localeTerritory(info), throwIfNoValid);
    if (!currency && throwIfNoValid) {
      throw NoValidCurrency.error(info.name);
    }
    numbers.localeCurrency = currency;
  }
  return numbers.localeCurrency;
}

// node_modules/@progress/kendo-intl/dist/es/cldr/constants.js
var DAYS_OF_WEEK = ["sun", "mon", "tue", "wed", "thu", "fri", "sat"];
var DEFAULT_TERRITORY = "001";

// node_modules/@progress/kendo-intl/dist/es/cldr/first-day.js
var NoWeekData = errors.NoWeekData;
var NoFirstDay = errors.NoFirstDay;
function firstDay(locale) {
  var info = getLocaleInfo(locale);
  if (!isNaN(info.firstDay)) {
    return info.firstDay;
  }
  var weekData = cldr.supplemental.weekData;
  if (!weekData) {
    throw NoWeekData.error();
  }
  var firstDay2 = weekData.firstDay[localeTerritory(info)] || weekData.firstDay[DEFAULT_TERRITORY];
  if (!firstDay2) {
    throw NoFirstDay.error();
  }
  info.firstDay = DAYS_OF_WEEK.indexOf(firstDay2);
  return info.firstDay;
}

// node_modules/@progress/kendo-intl/dist/es/cldr/weekend-range.js
var NoWeekData2 = errors.NoWeekData;

// node_modules/@progress/kendo-intl/dist/es/cldr/number-symbols.js
function numberSymbols(locale) {
  var info = getLocaleInfo(locale);
  return info.numbers.symbols;
}

// node_modules/@progress/kendo-intl/dist/es/common/is-negative-zero.js
function isNegativeZero(value) {
  return 1 / value === -Infinity;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/format-currency-symbol.js
function formatCurrencySymbol(info, options) {
  if (options === void 0)
    options = {};
  if (!options.currency) {
    options.currency = localeCurrency(info, true);
  }
  var display = currencyDisplay(info, options);
  return display;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/group-integer.js
function groupInteger(number17, start, end, options, info) {
  var symbols = info.numbers.symbols;
  var decimalIndex = number17.indexOf(symbols.decimal);
  var groupSizes = options.groupSize.slice();
  var groupSize = groupSizes.shift();
  var integerEnd = decimalIndex !== -1 ? decimalIndex : end + 1;
  var integer = number17.substring(start, integerEnd);
  var result = number17;
  var integerLength = integer.length;
  if (integerLength >= groupSize) {
    var idx = integerLength;
    var parts = [];
    while (idx > -1) {
      var value = integer.substring(idx - groupSize, idx);
      if (value) {
        parts.push(value);
      }
      idx -= groupSize;
      var newGroupSize = groupSizes.shift();
      groupSize = newGroupSize !== void 0 ? newGroupSize : groupSize;
      if (groupSize === 0) {
        value = integer.substring(0, idx);
        if (value) {
          parts.push(value);
        }
        break;
      }
    }
    integer = parts.reverse().join(symbols.group);
    result = number17.substring(0, start) + integer + number17.substring(integerEnd);
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/is-currency-style.js
function isCurrencyStyle(style) {
  return style === CURRENCY || style === ACCOUNTING;
}

// node_modules/@progress/kendo-intl/dist/es/common/pad.js
function pad(number17, digits, right) {
  if (digits === void 0)
    digits = 2;
  if (right === void 0)
    right = false;
  var count = digits - String(number17).length;
  var result = number17;
  if (count > 0) {
    var padString = new Array(count + 1).join("0");
    result = right ? number17 + padString : padString + number17;
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/common/round.js
var MAX_PRECISION = 20;
function round(value, precision) {
  var result = value;
  var decimals = precision || 0;
  result = result.toString().split("e");
  result = Math.round(Number(result[0] + "e" + (result[1] ? Number(result[1]) + decimals : decimals)));
  result = result.toString().split("e");
  result = Number(result[0] + "e" + (result[1] ? Number(result[1]) - decimals : -decimals));
  return result.toFixed(Math.min(decimals, MAX_PRECISION));
}

// node_modules/@progress/kendo-intl/dist/es/numbers/standard-number-format.js
var DEFAULT_DECIMAL_ROUNDING = 3;
var DEFAULT_PERCENT_ROUNDING = 0;
var trailingZeroRegex = /0+$/;
function fractionOptions(options) {
  var minimumFractionDigits = options.minimumFractionDigits;
  var maximumFractionDigits = options.maximumFractionDigits;
  var style = options.style;
  var isCurrency = isCurrencyStyle(style);
  var currencyFractions;
  if (isCurrency) {
    currencyFractions = currencyFractionOptions(options.currency);
  }
  if (minimumFractionDigits === void 0) {
    minimumFractionDigits = isCurrency ? currencyFractions.minimumFractionDigits : 0;
  }
  if (maximumFractionDigits === void 0) {
    if (style === PERCENT) {
      maximumFractionDigits = Math.max(minimumFractionDigits, DEFAULT_PERCENT_ROUNDING);
    } else if (isCurrency) {
      maximumFractionDigits = Math.max(minimumFractionDigits, currencyFractions.maximumFractionDigits);
    } else {
      maximumFractionDigits = Math.max(minimumFractionDigits, DEFAULT_DECIMAL_ROUNDING);
    }
  }
  return {
    minimumFractionDigits,
    maximumFractionDigits
  };
}
function applyPattern(value, pattern, symbol) {
  var result = EMPTY;
  for (var idx = 0, length = pattern.length; idx < length; idx++) {
    var ch = pattern.charAt(idx);
    if (ch === NUMBER_PLACEHOLDER) {
      result += value;
    } else if (ch === CURRENCY_PLACEHOLDER || ch === PERCENT_PLACEHOLDER) {
      result += symbol;
    } else {
      result += ch;
    }
  }
  return result;
}
function currencyUnitPattern(info, value) {
  var currencyInfo = info.numbers.currency;
  var pattern = value !== 1 ? currencyInfo["unitPattern-count-other"] : currencyInfo["unitPattern-count-one"];
  if (value < 0) {
    pattern = pattern.replace(NUMBER_PLACEHOLDER, "-" + NUMBER_PLACEHOLDER);
  }
  return pattern;
}
function standardNumberFormat(number17, options, info) {
  var symbols = info.numbers.symbols;
  var style = options.style;
  var isCurrency = isCurrencyStyle(style);
  if (style === SCIENTIFIC) {
    var exponential = options.minimumFractionDigits !== void 0 ? number17.toExponential(options.minimumFractionDigits) : number17.toExponential();
    return exponential.replace(POINT, symbols.decimal);
  }
  var value = number17;
  var symbol;
  if (isCurrency) {
    options.value = value;
    symbol = formatCurrencySymbol(info, options);
  }
  if (style === PERCENT) {
    value *= 100;
    symbol = symbols.percentSign;
  }
  var ref = fractionOptions(options);
  var minimumFractionDigits = ref.minimumFractionDigits;
  var maximumFractionDigits = ref.maximumFractionDigits;
  value = round(value, maximumFractionDigits);
  var negative = value < 0;
  var negativeZero = isNegativeZero(number17);
  var parts = value.split(POINT);
  var integer = parts[0];
  var fraction = pad(parts[1] ? parts[1].replace(trailingZeroRegex, EMPTY) : EMPTY, minimumFractionDigits, true);
  if (negative) {
    integer = integer.substring(1);
  }
  if (options.minimumIntegerDigits) {
    integer = pad(integer, options.minimumIntegerDigits);
  }
  var formattedValue = options.useGrouping !== false ? groupInteger(integer, 0, integer.length, options, info) : integer;
  if (fraction) {
    formattedValue += symbols.decimal + fraction;
  }
  var pattern;
  if (isCurrency && options.currencyDisplay === "name") {
    pattern = currencyUnitPattern(info, number17);
  } else {
    var patterns = options.patterns;
    pattern = negative || negativeZero ? patterns[1] || "-" + patterns[0] : patterns[0];
  }
  if (pattern === NUMBER_PLACEHOLDER && !negative) {
    return formattedValue;
  }
  var result = applyPattern(formattedValue, pattern, symbol);
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/utils.js
var literalRegExp = /(\\.)|(['][^']*[']?)|(["][^"]*["]?)/g;
var PLACEHOLDER = "__??__";
function setStyleOptions(formatOptions2, info) {
  var format2 = formatOptions2.format;
  if (format2.indexOf(PERCENT_PLACEHOLDER) !== -1) {
    formatOptions2.style = PERCENT;
    formatOptions2.symbol = info.numbers.symbols.percentSign;
    formatOptions2.number *= 100;
  }
  if (format2.indexOf(CURRENCY_PLACEHOLDER) !== -1) {
    formatOptions2.style = CURRENCY;
    formatOptions2.symbol = formatCurrencySymbol(info);
  }
}
function setFormatLiterals(formatOptions2) {
  var format2 = formatOptions2.format;
  if (format2.indexOf("'") > -1 || format2.indexOf('"') > -1 || format2.indexOf("\\") > -1) {
    var literals = formatOptions2.literals = [];
    formatOptions2.format = format2.replace(literalRegExp, function(match) {
      var quoteChar = match.charAt(0).replace("\\", EMPTY);
      var literal = match.slice(1).replace(quoteChar, EMPTY);
      literals.push(literal);
      return PLACEHOLDER;
    });
  }
}
function replaceLiterals(number17, literals) {
  var result = number17;
  if (literals) {
    var length = literals.length;
    for (var idx = 0; idx < length; idx++) {
      result = result.replace(PLACEHOLDER, literals[idx]);
    }
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/custom-number-format.js
var SHARP = "#";
var ZERO = "0";
var trailingZerosRegExp = /(\.(?:[0-9]*[1-9])?)0+$/g;
var trailingPointRegExp = /\.$/;
var commaRegExp = /,/g;
function trimTrailingZeros(value, lastZero) {
  var trimRegex;
  if (lastZero === 0) {
    trimRegex = trailingZerosRegExp;
  } else {
    trimRegex = new RegExp("(\\.[0-9]{" + lastZero + "}[1-9]*)0+$", "g");
  }
  return value.replace(trimRegex, "$1").replace(trailingPointRegExp, EMPTY);
}
function roundNumber(formatOptions2) {
  var number17 = formatOptions2.number;
  var format2 = formatOptions2.format;
  var decimalIndex = format2.indexOf(POINT);
  if (decimalIndex !== -1) {
    var zeroIndex = format2.lastIndexOf(ZERO) - decimalIndex;
    var sharpIndex = format2.lastIndexOf(SHARP) - decimalIndex;
    var hasZero = zeroIndex > -1;
    var hasSharp = sharpIndex > -1;
    var fraction = number17.toString().split("e");
    if (fraction[1]) {
      fraction = round(number17, Math.abs(fraction[1]));
    } else {
      fraction = fraction[0];
    }
    fraction = fraction.split(POINT)[1] || EMPTY;
    var precision = fraction.length;
    var trailingZeros = -1;
    if (!hasZero && !hasSharp) {
      formatOptions2.format = format2.substring(0, decimalIndex) + format2.substring(decimalIndex + 1);
      decimalIndex = -1;
      precision = 0;
    } else if (hasZero && zeroIndex > sharpIndex) {
      precision = zeroIndex;
    } else if (sharpIndex > zeroIndex) {
      if (hasSharp && precision > sharpIndex) {
        precision = sharpIndex;
      } else if (hasZero && precision < zeroIndex) {
        precision = zeroIndex;
      }
      trailingZeros = hasZero ? zeroIndex : 0;
    }
    if (precision > -1) {
      number17 = round(number17, precision);
      if (trailingZeros > -1) {
        number17 = trimTrailingZeros(number17, trailingZeros);
      }
    }
  } else {
    number17 = round(number17);
  }
  if (formatOptions2.negative && number17 * -1 >= 0 && !formatOptions2.negativeZero) {
    formatOptions2.negative = false;
  }
  formatOptions2.number = number17;
  formatOptions2.decimalIndex = decimalIndex;
}
function isConstantFormat(format2) {
  return format2.indexOf(SHARP) === -1 && format2.indexOf(ZERO) === -1;
}
function setValueSpecificFormat(formatOptions2) {
  var number17 = formatOptions2.number;
  var format2 = formatOptions2.format;
  format2 = format2.split(LIST_SEPARATOR);
  if ((formatOptions2.negative || formatOptions2.negativeZero) && format2[1]) {
    format2 = format2[1];
    formatOptions2.hasNegativeFormat = true;
  } else if (number17 === 0) {
    var zeroFormat = format2[2];
    format2 = zeroFormat || format2[0];
    if (zeroFormat && isConstantFormat(zeroFormat)) {
      formatOptions2.constant = zeroFormat;
    }
  } else {
    format2 = format2[0];
  }
  formatOptions2.format = format2;
}
function setGroupOptions(formatOptions2) {
  formatOptions2.hasGroup = formatOptions2.format.indexOf(GROUP_SEPARATOR) > -1;
  if (formatOptions2.hasGroup) {
    formatOptions2.format = formatOptions2.format.replace(commaRegExp, EMPTY);
  }
}
function placeholderIndex(index1, index2, start) {
  var index;
  if (index1 === -1 && index2 !== -1) {
    index = index2;
  } else if (index1 !== -1 && index2 === -1) {
    index = index1;
  } else {
    index = start ? Math.min(index1, index2) : Math.max(index1, index2);
  }
  return index;
}
function setPlaceholderIndices(formatOptions2) {
  var format2 = formatOptions2.format;
  var sharpIndex = format2.indexOf(SHARP);
  var zeroIndex = format2.indexOf(ZERO);
  var start = placeholderIndex(sharpIndex, zeroIndex, true);
  sharpIndex = format2.lastIndexOf(SHARP);
  zeroIndex = format2.lastIndexOf(ZERO);
  var end = placeholderIndex(sharpIndex, zeroIndex);
  if (start === format2.length) {
    end = start;
  }
  formatOptions2.start = start;
  formatOptions2.end = end;
  formatOptions2.lastZeroIndex = zeroIndex;
}
function replaceStyleSymbols(number17, style, symbol) {
  var result = number17;
  if (style === CURRENCY || style === PERCENT) {
    result = EMPTY;
    for (var idx = 0, length = number17.length; idx < length; idx++) {
      var ch = number17.charAt(idx);
      result += ch === CURRENCY_PLACEHOLDER || ch === PERCENT_PLACEHOLDER ? symbol : ch;
    }
  }
  return result;
}
function replacePlaceHolders(formatOptions2, info) {
  var start = formatOptions2.start;
  var end = formatOptions2.end;
  var negative = formatOptions2.negative;
  var negativeZero = formatOptions2.negativeZero;
  var format2 = formatOptions2.format;
  var decimalIndex = formatOptions2.decimalIndex;
  var lastZeroIndex = formatOptions2.lastZeroIndex;
  var hasNegativeFormat = formatOptions2.hasNegativeFormat;
  var hasGroup = formatOptions2.hasGroup;
  var number17 = formatOptions2.number;
  var value = number17.toString().split(POINT);
  var length = format2.length;
  var integer = value[0];
  var fraction = value[1] || EMPTY;
  var integerLength = integer.length;
  var replacement = EMPTY;
  number17 = format2.substring(0, start);
  if ((negative || negativeZero) && !hasNegativeFormat) {
    number17 += "-";
  }
  for (var idx = start; idx < length; idx++) {
    var ch = format2.charAt(idx);
    if (decimalIndex === -1) {
      if (end - idx < integerLength) {
        number17 += integer;
        break;
      }
    } else {
      if (lastZeroIndex !== -1 && lastZeroIndex < idx) {
        replacement = EMPTY;
      }
      if (decimalIndex - idx <= integerLength && decimalIndex - idx > -1) {
        number17 += integer;
        idx = decimalIndex;
      }
      if (decimalIndex === idx) {
        number17 += (fraction ? info.numbers.symbols.decimal : EMPTY) + fraction;
        idx += end - decimalIndex + 1;
        continue;
      }
    }
    if (ch === ZERO) {
      number17 += ch;
      replacement = ch;
    } else if (ch === SHARP) {
      number17 += replacement;
    }
  }
  if (hasGroup) {
    number17 = groupInteger(number17, start + (negative && !hasNegativeFormat ? 1 : 0), Math.max(end, integerLength + start), info.numbers.decimal, info);
  }
  if (end >= start) {
    number17 += format2.substring(end + 1);
  }
  return number17;
}
function applyCustomFormat(formatOptions2, info) {
  var number17 = formatOptions2.number;
  if (formatOptions2.start !== -1) {
    number17 = replacePlaceHolders(formatOptions2, info);
    number17 = replaceStyleSymbols(number17, formatOptions2.style, formatOptions2.symbol);
    number17 = replaceLiterals(number17, formatOptions2.literals);
  }
  return number17;
}
function customNumberFormat(number17, format2, info) {
  var formatOptions2 = {
    negative: number17 < 0,
    number: Math.abs(number17),
    negativeZero: isNegativeZero(number17),
    format: format2
  };
  setValueSpecificFormat(formatOptions2);
  if (formatOptions2.constant) {
    return formatOptions2.constant;
  }
  setFormatLiterals(formatOptions2);
  setStyleOptions(formatOptions2, info);
  setGroupOptions(formatOptions2);
  roundNumber(formatOptions2);
  setPlaceholderIndices(formatOptions2);
  return applyCustomFormat(formatOptions2, info);
}

// node_modules/@progress/kendo-intl/dist/es/numbers/format-options.js
var standardFormatRegExp = /^(n|c|p|e|a)(\d*)$/i;
function standardFormatOptions(format2) {
  var formatAndPrecision = standardFormatRegExp.exec(format2);
  if (formatAndPrecision) {
    var options = {
      style: DECIMAL
    };
    var style = formatAndPrecision[1].toLowerCase();
    if (style === "c") {
      options.style = CURRENCY;
    } else if (style === "a") {
      options.style = ACCOUNTING;
    } else if (style === "p") {
      options.style = PERCENT;
    } else if (style === "e") {
      options.style = SCIENTIFIC;
    }
    if (formatAndPrecision[2]) {
      options.minimumFractionDigits = options.maximumFractionDigits = parseInt(formatAndPrecision[2], 10);
    }
    return options;
  }
}
function formatOptions(format2) {
  var options;
  if (isString(format2)) {
    options = standardFormatOptions(format2);
  } else {
    options = format2;
  }
  return options;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/format-number.js
function formatNumber(number17, format2, locale) {
  if (format2 === void 0)
    format2 = NUMBER_PLACEHOLDER;
  if (locale === void 0)
    locale = DEFAULT_LOCALE;
  if (number17 === void 0 || number17 === null) {
    return EMPTY;
  }
  if (!isFinite(number17)) {
    return String(number17);
  }
  var info = localeInfo(locale);
  var options = formatOptions(format2);
  var result;
  if (options) {
    var style = options.style || DECIMAL;
    result = standardNumberFormat(number17, Object.assign({}, info.numbers[style], options), info);
  } else {
    result = customNumberFormat(number17, format2, info);
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/common/is-number.js
function isNumber(value) {
  return typeof value === "number";
}

// node_modules/@progress/kendo-intl/dist/es/numbers/parse-number.js
var exponentRegExp = /[eE][-+]?[0-9]+/;
var nonBreakingSpaceRegExp = /\u00A0/g;
function cleanNegativePattern(number17, patterns) {
  if (patterns.length > 1) {
    var parts = (patterns[1] || EMPTY).replace(CURRENCY_PLACEHOLDER, EMPTY).split(NUMBER_PLACEHOLDER);
    if (number17.indexOf(parts[0]) > -1 && number17.indexOf(parts[1]) > -1) {
      return number17.replace(parts[0], EMPTY).replace(parts[1], EMPTY);
    }
  }
}
function cleanCurrencyNumber(value, info, format2) {
  var options = formatOptions(format2) || {};
  var isCurrency = isCurrencyStyle(options.style);
  var number17 = value;
  var negative;
  var currency = options.currency || localeCurrency(info, isCurrency);
  if (currency) {
    var displays = currencyDisplays(info, currency, isCurrency);
    if (displays) {
      for (var idx = 0; idx < displays.length; idx++) {
        var display = displays[idx];
        if (number17.includes(display)) {
          number17 = number17.replace(display, EMPTY);
          isCurrency = true;
          break;
        }
      }
    }
    if (isCurrency) {
      var cleanNumber = cleanNegativePattern(number17, info.numbers.currency.patterns) || cleanNegativePattern(number17, info.numbers.accounting.patterns);
      if (cleanNumber) {
        negative = true;
        number17 = cleanNumber;
      }
    }
  }
  return {
    number: number17,
    negative
  };
}
function cleanLiterals(number17, formatOptions2) {
  var literals = formatOptions2.literals;
  var result = number17;
  if (literals) {
    for (var idx = 0; idx < literals.length; idx++) {
      result = result.replace(literals[idx], EMPTY);
    }
  }
  return result;
}
function divideBy100(number17) {
  var strNumber = String(number17);
  var pointIndex = strNumber.indexOf(POINT);
  var zeroesCount = 2;
  var result = number17 / Math.pow(10, zeroesCount);
  if (pointIndex === -1 || String(result).length <= strNumber.length + zeroesCount) {
    return result;
  }
  var fractionDigits = strNumber.length - pointIndex + 1 + zeroesCount;
  return parseFloat(result.toFixed(fractionDigits));
}
function parseNumber(value, locale, format2) {
  if (locale === void 0)
    locale = DEFAULT_LOCALE;
  if (format2 === void 0)
    format2 = {};
  if (!value && value !== 0) {
    return null;
  }
  if (isNumber(value)) {
    return value;
  }
  var info = localeInfo(locale);
  var symbols = info.numbers.symbols;
  var number17 = value.toString();
  var formatOptions2 = format2 || {};
  var isPercent;
  if (isString(format2)) {
    formatOptions2 = { format: format2 };
    setFormatLiterals(formatOptions2);
    number17 = cleanLiterals(number17, formatOptions2);
    setStyleOptions(formatOptions2, info);
  }
  if (formatOptions2.style === PERCENT || number17.indexOf(symbols.percentSign) > -1) {
    number17 = number17.replace(symbols.percentSign, EMPTY);
    isPercent = true;
  }
  if (exponentRegExp.test(number17)) {
    number17 = parseFloat(number17.replace(symbols.decimal, POINT));
    return isNaN(number17) ? null : number17;
  }
  var ref = cleanCurrencyNumber(number17, info, formatOptions2);
  var negativeCurrency = ref.negative;
  var currencyNumber = ref.number;
  number17 = String(currencyNumber).trim();
  var negativeSignIndex = number17.indexOf("-");
  if (negativeSignIndex > 0) {
    return null;
  }
  var isNegative = negativeSignIndex > -1;
  isNegative = negativeCurrency !== void 0 ? negativeCurrency : isNegative;
  number17 = number17.replace("-", EMPTY).replace(nonBreakingSpaceRegExp, " ").split(symbols.group.replace(nonBreakingSpaceRegExp, " ")).join(EMPTY).replace(symbols.decimal, POINT);
  number17 = parseFloat(number17);
  if (isNaN(number17)) {
    number17 = null;
  } else if (isNegative) {
    number17 *= -1;
  }
  if (number17 && isPercent) {
    number17 = divideBy100(number17);
  }
  return number17;
}

// node_modules/@progress/kendo-intl/dist/es/common/format-string.js
var formatRegExp2 = /\{(\d+)}/g;
function formatString(format2) {
  var values2 = arguments;
  return format2.replace(formatRegExp2, function(match, index) {
    var value = values2[parseInt(index, 10) + 1];
    return value;
  });
}

// node_modules/@progress/kendo-intl/dist/es/dates/date-pattern.js
var REMOVAL_PENALTY = 120;
var ADDITION_PENALTY = 20;
var LENGHT_DELTA = [2, 1, 5, 3, 4];
var LONG_LESS_PENALTY_DELTA = -2;
var SHORT_LESS_PENALTY_DELTA = -1;
var SHORT_MORE_PENALTY_DELTA = 1;
var LONG_MORE_PENALTY_DELTA = 2;
var PENALTIES = {};
PENALTIES[LONG_LESS_PENALTY_DELTA.toString()] = 8;
PENALTIES[SHORT_LESS_PENALTY_DELTA.toString()] = 6;
PENALTIES[LONG_MORE_PENALTY_DELTA.toString()] = 6;
PENALTIES[SHORT_MORE_PENALTY_DELTA.toString()] = 3;
var VALUE_FORMAT_LENGTH = {
  numeric: 1,
  "2-digit": 2,
  short: 3,
  long: 4,
  narrow: 5
};
var TIME_SPECIFIERS_REGEX = /[hHmsSzZoOvVxX]/;
function getHourSpecifier(options) {
  return options.hour12 ? "h" : "H";
}
var DATE_OPTIONS_MAP = [{
  key: "era",
  specifier: "G"
}, {
  key: "year",
  specifier: "y"
}, {
  key: "month",
  specifier: "M"
}, {
  key: "day",
  specifier: "d"
}, {
  key: "weekday",
  specifier: "E"
}, {
  key: "hour",
  getSpecifier: getHourSpecifier
}, {
  key: "minute",
  specifier: "m"
}, {
  key: "second",
  specifier: "s"
}, {
  key: "timeZoneName",
  specifier: "z"
}];
var STAND_ALONE_SPECIFIERS = {
  e: "c",
  E: "c",
  M: "L",
  Q: "q"
};
var specifiersRegex = {};
var resolvedFormats = {};
function getSpecifierRegex(specifier) {
  if (!specifiersRegex[specifier]) {
    specifiersRegex[specifier] = new RegExp(specifier + "+");
  }
  return specifiersRegex[specifier];
}
function skeletonSpecifiers(skeleton) {
  var result = [];
  var current = skeleton.charAt(0);
  var specifier = current;
  for (var idx = 1; idx < skeleton.length; idx++) {
    var character = skeleton.charAt(idx);
    if (character === specifier) {
      current += character;
    } else {
      result.push(current);
      current = specifier = character;
    }
  }
  result.push(current);
  return result;
}
function findBestMatch(specifiers, availableFormats) {
  var specifiersLength = specifiers.length;
  var maxScore = -Number.MAX_VALUE;
  var bestMatches, result;
  for (var format2 in availableFormats) {
    var matches = [];
    var currentFormat = format2.replace("v", "z");
    var score = 0;
    for (var idx = 0; idx < specifiersLength; idx++) {
      var specifier = specifiers[idx];
      var specifierRegex = getSpecifierRegex(specifier[0]);
      var match = (specifierRegex.exec(currentFormat) || [])[0];
      if (!match) {
        score -= REMOVAL_PENALTY;
      } else {
        currentFormat = currentFormat.replace(match, EMPTY);
        if (match.length !== specifier.length) {
          var delta = Math.max(Math.min(LENGHT_DELTA[match.length] - LENGHT_DELTA[specifier.length], 2), -2);
          score -= PENALTIES[delta];
        }
      }
      matches.push(match);
      if (score < maxScore) {
        break;
      }
    }
    if (currentFormat.length) {
      score -= skeletonSpecifiers(currentFormat).length * ADDITION_PENALTY;
    }
    if (score > maxScore) {
      maxScore = score;
      bestMatches = matches;
      result = availableFormats[format2];
    }
  }
  result = result.replace("v", "z");
  for (var idx$1 = 0; idx$1 < specifiersLength; idx$1++) {
    var bestMatch = bestMatches[idx$1];
    if (bestMatch && bestMatch !== specifiers[idx$1]) {
      var matchSpecifier = bestMatches[idx$1][0];
      result = result.replace(getSpecifierRegex(matchSpecifier), specifiers[idx$1]);
      if (STAND_ALONE_SPECIFIERS[matchSpecifier]) {
        result = result.replace(getSpecifierRegex(STAND_ALONE_SPECIFIERS[matchSpecifier]), specifiers[idx$1]);
      }
    }
  }
  return result;
}
function cacheFormat(skeleton, format2, locale) {
  if (!resolvedFormats[locale]) {
    resolvedFormats[locale] = {};
  }
  resolvedFormats[locale][skeleton] = format2;
}
function skeletonFormat(skeleton, info) {
  var availableFormats = info.calendar.dateTimeFormats.availableFormats;
  if (availableFormats[skeleton]) {
    return availableFormats[skeleton];
  }
  if (resolvedFormats[info.name] && resolvedFormats[info.name][skeleton]) {
    return resolvedFormats[info.name][skeleton];
  }
  var timeStartIndex = skeleton.search(TIME_SPECIFIERS_REGEX);
  var result;
  if (timeStartIndex > 0) {
    var dateSkeleton = skeleton.substr(0, timeStartIndex);
    var timeSkeleton = skeleton.substr(timeStartIndex);
    result = formatString(
      info.calendar.dateTimeFormats.short,
      availableFormats[timeSkeleton] || findBestMatch(skeletonSpecifiers(timeSkeleton), availableFormats),
      availableFormats[dateSkeleton] || findBestMatch(skeletonSpecifiers(dateSkeleton), availableFormats)
    );
  } else {
    result = findBestMatch(skeletonSpecifiers(skeleton), availableFormats);
  }
  cacheFormat(skeleton, result, info.name);
  return result;
}
function skeletonFromOptions(options) {
  var result = [];
  for (var idx = 0; idx < DATE_OPTIONS_MAP.length; idx++) {
    var option = DATE_OPTIONS_MAP[idx];
    var field = option.key;
    var value = options[field];
    if (value) {
      var spcifier = option.specifier || option.getSpecifier(options);
      result.push(spcifier.repeat(VALUE_FORMAT_LENGTH[value]));
    }
  }
  return result.join(EMPTY);
}
function datePattern(format2, info) {
  var calendar = info.calendar;
  var result;
  if (isString(format2)) {
    if (calendar.patterns[format2]) {
      result = calendar.patterns[format2];
    } else {
      result = format2;
    }
  } else if (format2) {
    if (format2.pattern) {
      return format2.pattern;
    }
    var skeleton = format2.skeleton;
    if (!skeleton) {
      if (format2.datetime) {
        result = formatString(calendar.dateTimeFormats[format2.datetime], calendar.timeFormats[format2.datetime], calendar.dateFormats[format2.datetime]);
      } else if (format2.date) {
        result = calendar.dateFormats[format2.date];
      } else if (format2.time) {
        result = calendar.timeFormats[format2.time];
      } else {
        skeleton = skeletonFromOptions(format2);
      }
    }
    if (skeleton) {
      result = skeletonFormat(skeleton, info);
    }
  }
  if (!result) {
    result = calendar.patterns.d;
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/dates/date-name-type.js
function dateNameType(formatLength) {
  var nameType;
  if (formatLength <= 3) {
    nameType = "abbreviated";
  } else if (formatLength === 4) {
    nameType = "wide";
  } else if (formatLength === 5) {
    nameType = "narrow";
  } else if (formatLength === 6) {
    nameType = "short";
  }
  return nameType;
}

// node_modules/@progress/kendo-intl/dist/es/dates/format-names.js
function formatNames(locale, type, formatLength, standAlone, lower) {
  return dateFormatNames(locale, {
    type,
    nameType: dateNameType(formatLength),
    standAlone,
    lower
  });
}

// node_modules/@progress/kendo-intl/dist/es/common/is-date.js
function isFunction(fun) {
  return typeof fun === "function";
}
function isDate(value) {
  return Boolean(value) && isFunction(value.getTime) && isFunction(value.getMonth);
}

// node_modules/@progress/kendo-intl/dist/es/dates/constants.js
var MONTH = "month";
var HOUR = "hour";
var ZONE = "zone";
var WEEKDAY = "weekday";
var QUARTER = "quarter";
var DATE_FIELD_MAP = {
  "G": "era",
  "y": "year",
  "q": QUARTER,
  "Q": QUARTER,
  "M": MONTH,
  "L": MONTH,
  "d": "day",
  "E": WEEKDAY,
  "c": WEEKDAY,
  "e": WEEKDAY,
  "h": HOUR,
  "H": HOUR,
  "k": HOUR,
  "K": HOUR,
  "m": "minute",
  "s": "second",
  "S": "millisecond",
  "a": "dayperiod",
  "x": ZONE,
  "X": ZONE,
  "z": ZONE,
  "Z": ZONE
};
var dateFormatRegExp = /d{1,2}|E{1,6}|e{1,6}|c{3,6}|c{1}|M{1,5}|L{1,5}|y{1,4}|H{1,2}|h{1,2}|k{1,2}|K{1,2}|m{1,2}|a{1,5}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|x{1,5}|X{1,5}|G{1,5}|q{1,5}|Q{1,5}|"[^"]*"|'[^']*'/g;

// node_modules/@progress/kendo-intl/dist/es/dates/format-date.js
function formatDayOfWeekIndex(day, formatLength, localeInfo2) {
  var firstDayIndex = firstDay(localeInfo2);
  var dayIndex;
  if (day < firstDayIndex) {
    dayIndex = 7 - firstDayIndex + day;
  } else {
    dayIndex = day - firstDayIndex;
  }
  return dayIndex + 1;
}
function formatMonth(month, formatLength, info, standAlone) {
  if (formatLength <= 2) {
    return pad(month + 1, formatLength);
  }
  return formatNames(info, "months", formatLength, standAlone)[month];
}
function formatQuarter(date, formatLength, info, standAlone) {
  var quarter = Math.floor(date.getMonth() / 3);
  if (formatLength < 3) {
    return quarter + 1;
  }
  return formatNames(info, "quarters", formatLength, standAlone)[quarter];
}
function formatTimeZone(date, info, options) {
  var shortHours = options.shortHours;
  var optionalMinutes = options.optionalMinutes;
  var separator = options.separator;
  var localizedName = options.localizedName;
  var zZeroOffset = options.zZeroOffset;
  var offset3 = date.getTimezoneOffset() / 60;
  if (offset3 === 0 && zZeroOffset) {
    return "Z";
  }
  var sign = offset3 <= 0 ? "+" : "-";
  var hoursMinutes = Math.abs(offset3).toString().split(".");
  var minutes = hoursMinutes[1] || 0;
  var result = sign + (shortHours ? hoursMinutes[0] : pad(hoursMinutes[0], 2));
  if (minutes || !optionalMinutes) {
    result += (separator ? ":" : EMPTY) + pad(minutes, 2);
  }
  if (localizedName) {
    var localizedFormat = offset3 === 0 ? info.calendar.gmtZeroFormat : info.calendar.gmtFormat;
    result = formatString(localizedFormat, result);
  }
  return result;
}
function formatDayOfWeek(date, formatLength, info, standAlone) {
  var result;
  if (formatLength < 3) {
    result = formatDayOfWeekIndex(date.getDay(), formatLength, info);
  } else {
    result = formatNames(info, "days", formatLength, standAlone)[date.getDay()];
  }
  return result;
}
var formatters = {};
formatters.d = function(date, formatLength) {
  return pad(date.getDate(), formatLength);
};
formatters.E = function(date, formatLength, info) {
  return formatNames(info, "days", formatLength)[date.getDay()];
};
formatters.M = function(date, formatLength, info) {
  return formatMonth(date.getMonth(), formatLength, info, false);
};
formatters.L = function(date, formatLength, info) {
  return formatMonth(date.getMonth(), formatLength, info, true);
};
formatters.y = function(date, formatLength) {
  var year = date.getFullYear();
  if (formatLength === 2) {
    year = year % 100;
  }
  return pad(year, formatLength);
};
formatters.h = function(date, formatLength) {
  var hours = date.getHours() % 12 || 12;
  return pad(hours, formatLength);
};
formatters.H = function(date, formatLength) {
  return pad(date.getHours(), formatLength);
};
formatters.k = function(date, formatLength) {
  return pad(date.getHours() || 24, formatLength);
};
formatters.K = function(date, formatLength) {
  return pad(date.getHours() % 12, formatLength);
};
formatters.m = function(date, formatLength) {
  return pad(date.getMinutes(), formatLength);
};
formatters.s = function(date, formatLength) {
  return pad(date.getSeconds(), formatLength);
};
formatters.S = function(date, formatLength) {
  var milliseconds = date.getMilliseconds();
  var result;
  if (milliseconds !== 0) {
    result = pad(String(milliseconds / 1e3).split(".")[1].substr(0, formatLength), formatLength, true);
  } else {
    result = pad(EMPTY, formatLength);
  }
  return result;
};
formatters.a = function(date, formatLength, info) {
  return formatNames(info, "dayPeriods", formatLength)[date.getHours() < 12 ? "am" : "pm"];
};
formatters.z = function(date, formatLength, info) {
  return formatTimeZone(date, info, {
    shortHours: formatLength < 4,
    optionalMinutes: formatLength < 4,
    separator: true,
    localizedName: true
  });
};
formatters.Z = function(date, formatLength, info) {
  return formatTimeZone(date, info, {
    separator: formatLength > 3,
    localizedName: formatLength === 4,
    zZeroOffset: formatLength === 5
  });
};
formatters.x = function(date, formatLength, info) {
  return formatTimeZone(date, info, {
    optionalMinutes: formatLength === 1,
    separator: formatLength === 3 || formatLength === 5
  });
};
formatters.X = function(date, formatLength, info) {
  return formatTimeZone(date, info, {
    optionalMinutes: formatLength === 1,
    separator: formatLength === 3 || formatLength === 5,
    zZeroOffset: true
  });
};
formatters.G = function(date, formatLength, info) {
  var era = date.getFullYear() >= 0 ? 1 : 0;
  return formatNames(info, "eras", formatLength)[era];
};
formatters.e = formatDayOfWeek;
formatters.c = function(date, formatLength, info) {
  return formatDayOfWeek(date, formatLength, info, true);
};
formatters.q = function(date, formatLength, info) {
  return formatQuarter(date, formatLength, info, true);
};
formatters.Q = formatQuarter;
function formatDate(date, format2, locale) {
  if (locale === void 0)
    locale = DEFAULT_LOCALE;
  if (!isDate(date)) {
    if (date === void 0 || date === null) {
      return EMPTY;
    }
    return date;
  }
  var info = localeInfo(locale);
  var pattern = datePattern(format2, info);
  return pattern.replace(dateFormatRegExp, function(match) {
    var formatLength = match.length;
    var result;
    if (match.includes("'") || match.includes('"')) {
      result = match.slice(1, formatLength - 1);
    } else {
      result = formatters[match[0]](date, formatLength, info);
    }
    return result;
  });
}

// node_modules/@progress/kendo-intl/dist/es/dates/time-utils.js
function convertTimeZone(date, fromOffset, toOffset) {
  var fromLocalOffset = date.getTimezoneOffset();
  var offsetDate = new Date(date.getTime() + (fromOffset - toOffset) * 6e4);
  var toLocalOffset = offsetDate.getTimezoneOffset();
  return new Date(offsetDate.getTime() + (toLocalOffset - fromLocalOffset) * 6e4);
}
function adjustDST(date, hours) {
  if (!hours && date.getHours() === 23) {
    date.setHours(date.getHours() + 2);
  }
}

// node_modules/@progress/kendo-intl/dist/es/dates/parse-date.js
var timeZoneOffsetRegExp = /([+|-]\d{1,2})(:?)(\d{2})?/;
var dateRegExp = /^\/Date\((.*?)\)\/$/;
var offsetRegExp = /[+-]\d*/;
var numberRegExp = {
  2: /^\d{1,2}/,
  3: /^\d{1,3}/,
  4: /^\d{4}/
};
var numberRegex = /\d+/;
var PLACEHOLDER2 = "{0}";
var leadingSpacesRegex = /^ */;
var trailingSpacesRegex = / *$/;
var standardDateFormats = [
  "yyyy/MM/dd HH:mm:ss",
  "yyyy/MM/dd HH:mm",
  "yyyy/MM/dd",
  "E MMM dd yyyy HH:mm:ss",
  "yyyy-MM-ddTHH:mm:ss.SSSSSSSXXX",
  "yyyy-MM-ddTHH:mm:ss.SSSXXX",
  "yyyy-MM-ddTHH:mm:ss.SSXXX",
  "yyyy-MM-ddTHH:mm:ssXXX",
  "yyyy-MM-ddTHH:mm:ss.SSSSSSS",
  "yyyy-MM-ddTHH:mm:ss.SSS",
  "yyyy-MM-ddTHH:mmXXX",
  "yyyy-MM-ddTHH:mmX",
  "yyyy-MM-ddTHH:mm:ss",
  "yyyy-MM-ddTHH:mm",
  "yyyy-MM-dd HH:mm:ss",
  "yyyy-MM-dd HH:mm",
  "yyyy-MM-dd",
  "HH:mm:ss",
  "HH:mm"
];
var FORMATS_SEQUENCE = ["G", "g", "F", "Y", "y", "M", "m", "D", "d", "y", "T", "t"];
var TWO_DIGIT_YEAR_MAX = 2029;
function outOfRange(value, start, end) {
  return !(value >= start && value <= end);
}
function lookAhead(match, state) {
  var format2 = state.format;
  var idx = state.idx;
  var i = 0;
  while (format2[idx] === match) {
    i++;
    idx++;
  }
  if (i > 0) {
    idx -= 1;
  }
  state.idx = idx;
  return i;
}
function getNumber(size, state) {
  var regex = size ? numberRegExp[size] || new RegExp("^\\d{1," + size + "}") : numberRegex, match = state.value.substr(state.valueIdx, size).match(regex);
  if (match) {
    match = match[0];
    state.valueIdx += match.length;
    return parseInt(match, 10);
  }
  return null;
}
function getIndexByName(names, state, lower) {
  var i = 0, length = names.length, name, nameLength, matchLength = 0, matchIdx = 0, subValue;
  for (; i < length; i++) {
    name = names[i];
    nameLength = name.length;
    subValue = state.value.substr(state.valueIdx, nameLength);
    if (lower) {
      subValue = subValue.toLowerCase();
    }
    if (subValue === name && nameLength > matchLength) {
      matchLength = nameLength;
      matchIdx = i;
    }
  }
  if (matchLength) {
    state.valueIdx += matchLength;
    return matchIdx + 1;
  }
  return null;
}
function checkLiteral(state) {
  var result = false;
  if (state.value.charAt(state.valueIdx) === state.format[state.idx]) {
    state.valueIdx++;
    result = true;
  }
  return result;
}
function calendarGmtFormats(calendar) {
  var gmtFormat = calendar.gmtFormat;
  var gmtZeroFormat = calendar.gmtZeroFormat;
  if (!gmtFormat) {
    throw errors.NoGMTInfo.error();
  }
  return [gmtFormat.replace(PLACEHOLDER2, EMPTY).toLowerCase(), gmtZeroFormat.replace(PLACEHOLDER2, EMPTY).toLowerCase()];
}
function parseTimeZoneOffset(state, info, options) {
  var shortHours = options.shortHours;
  var noSeparator = options.noSeparator;
  var optionalMinutes = options.optionalMinutes;
  var localizedName = options.localizedName;
  var zLiteral = options.zLiteral;
  state.UTC = true;
  if (zLiteral && state.value.charAt(state.valueIdx) === "Z") {
    state.valueIdx++;
    return false;
  }
  if (localizedName && !getIndexByName(calendarGmtFormats(info.calendar), state, true)) {
    return true;
  }
  var matches = timeZoneOffsetRegExp.exec(state.value.substr(state.valueIdx, 6));
  if (!matches) {
    return !localizedName;
  }
  var hoursMatch = matches[1];
  var minutesMatch = matches[3];
  var hoursOffset = parseInt(hoursMatch, 10);
  var separator = matches[2];
  var minutesOffset = parseInt(minutesMatch, 10);
  if (isNaN(hoursOffset) || !shortHours && hoursMatch.length !== 3 || !optionalMinutes && isNaN(minutesOffset) || noSeparator && separator) {
    return true;
  }
  if (isNaN(minutesOffset)) {
    minutesOffset = null;
  }
  if (outOfRange(hoursOffset, -12, 13) || minutesOffset && outOfRange(minutesOffset, 0, 59)) {
    return true;
  }
  state.valueIdx += matches[0].length;
  state.hoursOffset = hoursOffset;
  state.minutesOffset = minutesOffset;
}
function parseMonth(ch, state, info) {
  var count = lookAhead(ch, state);
  var names = formatNames(info, "months", count, ch === "L", true);
  var month = count < 3 ? getNumber(2, state) : getIndexByName(names, state, true);
  if (month === null || outOfRange(month, 1, 12)) {
    return true;
  }
  state.month = month - 1;
}
function parseDayOfWeek(ch, state, info) {
  var count = lookAhead(ch, state);
  var names = formatNames(info, "days", count, ch === "c", true);
  var dayOfWeek = count < 3 ? getNumber(1, state) : getIndexByName(names, state, true);
  if (!dayOfWeek && dayOfWeek !== 0 || outOfRange(dayOfWeek, 1, 7)) {
    return true;
  }
}
var parsers = {};
parsers.d = function(state) {
  lookAhead("d", state);
  var day = getNumber(2, state);
  if (day === null || outOfRange(day, 1, 31)) {
    return true;
  }
  if (state.day === null) {
    state.day = day;
  }
};
parsers.E = function(state, info) {
  var count = lookAhead("E", state);
  var dayOfWeek = getIndexByName(formatNames(info, "days", count, false, true), state, true);
  if (dayOfWeek === null) {
    return true;
  }
};
parsers.M = function(state, info) {
  return parseMonth("M", state, info);
};
parsers.L = function(state, info) {
  return parseMonth("L", state, info);
};
parsers.y = function(state) {
  var count = lookAhead("y", state);
  var year = getNumber(count === 1 ? void 0 : count, state);
  if (year === null) {
    return true;
  }
  if (count === 2) {
    var currentYear = new Date().getFullYear();
    year = currentYear - currentYear % 100 + year;
    if (year > TWO_DIGIT_YEAR_MAX) {
      year -= 100;
    }
  }
  state.year = year;
};
parsers.h = function(state) {
  lookAhead("h", state);
  var hours = getNumber(2, state);
  if (hours === 12) {
    hours = 0;
  }
  if (hours === null || outOfRange(hours, 0, 11)) {
    return true;
  }
  state.hours = hours;
};
parsers.K = function(state) {
  lookAhead("K", state);
  var hours = getNumber(2, state);
  if (hours === null || outOfRange(hours, 0, 11)) {
    return true;
  }
  state.hours = hours;
};
parsers.a = function(state, info) {
  var count = lookAhead("a", state);
  var periodFormats = formatNames(info, "dayPeriods", count, false, true);
  var pmHour = getIndexByName([periodFormats.pm], state, true);
  if (!pmHour && !getIndexByName([periodFormats.am], state, true)) {
    return true;
  }
  state.pmHour = pmHour;
};
parsers.H = function(state) {
  lookAhead("H", state);
  var hours = getNumber(2, state);
  if (hours === null || outOfRange(hours, 0, 23)) {
    return true;
  }
  state.hours = hours;
};
parsers.k = function(state) {
  lookAhead("k", state);
  var hours = getNumber(2, state);
  if (hours === null || outOfRange(hours, 1, 24)) {
    return true;
  }
  state.hours = hours === 24 ? 0 : hours;
};
parsers.m = function(state) {
  lookAhead("m", state);
  var minutes = getNumber(2, state);
  if (minutes === null || outOfRange(minutes, 0, 59)) {
    return true;
  }
  state.minutes = minutes;
};
parsers.s = function(state) {
  lookAhead("s", state);
  var seconds = getNumber(2, state);
  if (seconds === null || outOfRange(seconds, 0, 59)) {
    return true;
  }
  state.seconds = seconds;
};
parsers.S = function(state) {
  var count = lookAhead("S", state);
  var match = state.value.substr(state.valueIdx, count);
  var milliseconds = null;
  if (!isNaN(parseInt(match, 10))) {
    milliseconds = parseFloat("0." + match, 10);
    milliseconds = round(milliseconds, 3);
    milliseconds *= 1e3;
    state.valueIdx += count;
  }
  if (milliseconds === null || outOfRange(milliseconds, 0, 999)) {
    return true;
  }
  state.milliseconds = milliseconds;
};
parsers.z = function(state, info) {
  var count = lookAhead("z", state);
  var shortFormat = count < 4;
  var invalid = parseTimeZoneOffset(state, info, {
    shortHours: shortFormat,
    optionalMinutes: shortFormat,
    localizedName: true
  });
  if (invalid) {
    return invalid;
  }
};
parsers.Z = function(state, info) {
  var count = lookAhead("Z", state);
  var invalid = parseTimeZoneOffset(state, info, {
    noSeparator: count < 4,
    zLiteral: count === 5,
    localizedName: count === 4
  });
  if (invalid) {
    return invalid;
  }
};
parsers.x = function(state, info) {
  var count = lookAhead("x", state);
  var invalid = parseTimeZoneOffset(state, info, {
    noSeparator: count !== 3 && count !== 5,
    optionalMinutes: count === 1
  });
  if (invalid) {
    return invalid;
  }
};
parsers.X = function(state, info) {
  var count = lookAhead("X", state);
  var invalid = parseTimeZoneOffset(state, info, {
    noSeparator: count !== 3 && count !== 5,
    optionalMinutes: count === 1,
    zLiteral: true
  });
  if (invalid) {
    return invalid;
  }
};
parsers.G = function(state, info) {
  var count = lookAhead("G", state);
  var eras = formatNames(info, "eras", count, false, true);
  var era = getIndexByName([eras[0], eras[1]], state, true);
  if (era === null) {
    return true;
  }
};
parsers.e = function(state, info) {
  return parseDayOfWeek("e", state, info);
};
parsers.c = function(state, info) {
  return parseDayOfWeek("c", state, info);
};
function createDate(state) {
  var year = state.year;
  var month = state.month;
  var day = state.day;
  var hours = state.hours;
  var minutes = state.minutes;
  var seconds = state.seconds;
  var milliseconds = state.milliseconds;
  var pmHour = state.pmHour;
  var UTC = state.UTC;
  var hoursOffset = state.hoursOffset;
  var minutesOffset = state.minutesOffset;
  var hasTime = hours !== null || minutes !== null || seconds || null;
  var date = new Date();
  var result;
  if (year === null && month === null && day === null && hasTime) {
    year = date.getFullYear();
    month = date.getMonth();
    day = date.getDate();
  } else {
    if (year === null) {
      year = date.getFullYear();
    }
    if (day === null) {
      day = 1;
    }
  }
  if (pmHour && hours < 12) {
    hours += 12;
  }
  if (UTC) {
    if (hoursOffset) {
      hours += -hoursOffset;
    }
    if (minutesOffset) {
      minutes += -minutesOffset * (hoursOffset < 0 ? -1 : 1);
    }
    result = new Date(Date.UTC(year, month, day, hours, minutes, seconds, milliseconds));
  } else {
    result = new Date(year, month, day, hours, minutes, seconds, milliseconds);
    adjustDST(result, hours);
  }
  if (year < 100) {
    result.setFullYear(year);
  }
  if (result.getDate() !== day && UTC === void 0) {
    return null;
  }
  return result;
}
function addFormatSpaces(value, format2) {
  var leadingSpaces = leadingSpacesRegex.exec(format2)[0];
  var trailingSpaces = trailingSpacesRegex.exec(format2)[0];
  return "" + leadingSpaces + value + trailingSpaces;
}
function parseExact(value, format2, info) {
  var pattern = datePattern(format2, info).split(EMPTY);
  var state = {
    format: pattern,
    idx: 0,
    value: addFormatSpaces(value, format2),
    valueIdx: 0,
    year: null,
    month: null,
    day: null,
    hours: null,
    minutes: null,
    seconds: null,
    milliseconds: null
  };
  var length = pattern.length;
  var literal = false;
  for (; state.idx < length; state.idx++) {
    var ch = pattern[state.idx];
    if (literal) {
      if (ch === "'") {
        literal = false;
      }
      checkLiteral(state);
    } else {
      if (parsers[ch]) {
        var invalid = parsers[ch](state, info);
        if (invalid) {
          return null;
        }
      } else if (ch === "'") {
        literal = true;
        checkLiteral(state);
      } else if (!checkLiteral(state)) {
        return null;
      }
    }
  }
  if (state.valueIdx < value.length) {
    return null;
  }
  return createDate(state) || null;
}
function parseMicrosoftDateOffset(offset3) {
  var sign = offset3.substr(0, 1) === "-" ? -1 : 1;
  var result = offset3.substring(1);
  result = parseInt(result.substr(0, 2), 10) * 60 + parseInt(result.substring(2), 10);
  return sign * result;
}
function parseMicrosoftDateFormat(value) {
  if (value && value.indexOf("/D") === 0) {
    var date = dateRegExp.exec(value);
    if (date) {
      date = date[1];
      var tzoffset = offsetRegExp.exec(date.substring(1));
      date = new Date(parseInt(date, 10));
      if (tzoffset) {
        tzoffset = parseMicrosoftDateOffset(tzoffset[0]);
        date = convertTimeZone(date, date.getTimezoneOffset(), 0);
        date = convertTimeZone(date, 0, -1 * tzoffset);
      }
      return date;
    }
  }
}
function defaultFormats(calendar) {
  var formats = [];
  var patterns = calendar.patterns;
  var length = FORMATS_SEQUENCE.length;
  for (var idx = 0; idx < length; idx++) {
    formats.push(patterns[FORMATS_SEQUENCE[idx]]);
  }
  return formats.concat(standardDateFormats);
}
function parseDate2(value, formats, locale) {
  if (locale === void 0)
    locale = DEFAULT_LOCALE;
  if (!value) {
    return null;
  }
  if (isDate(value)) {
    return value;
  }
  var parseValue = String(value).trim();
  var date = parseMicrosoftDateFormat(parseValue);
  if (date) {
    return date;
  }
  var info = localeInfo(locale);
  var parseFormats = formats || defaultFormats(info.calendar);
  parseFormats = Array.isArray(parseFormats) ? parseFormats : [parseFormats];
  var length = parseFormats.length;
  for (var idx = 0; idx < length; idx++) {
    date = parseExact(parseValue, parseFormats[idx], info);
    if (date) {
      return date;
    }
  }
  return date;
}

// node_modules/@progress/kendo-intl/dist/es/dates/split-date-format.js
var NAME_TYPES = {
  month: {
    type: "months",
    minLength: 3,
    standAlone: "L"
  },
  quarter: {
    type: "quarters",
    minLength: 3,
    standAlone: "q"
  },
  weekday: {
    type: "days",
    minLength: {
      E: 0,
      c: 3,
      e: 3
    },
    standAlone: "c"
  },
  dayperiod: {
    type: "dayPeriods",
    minLength: 0
  },
  era: {
    type: "eras",
    minLength: 0
  }
};
var LITERAL = "literal";
function addLiteral(parts, value) {
  var lastPart = parts[parts.length - 1];
  if (lastPart && lastPart.type === LITERAL) {
    lastPart.pattern += value;
  } else {
    parts.push({
      type: LITERAL,
      pattern: value
    });
  }
}
function isHour12(pattern) {
  return pattern === "h" || pattern === "K";
}
function splitDateFormat(format2, locale) {
  if (locale === void 0)
    locale = DEFAULT_LOCALE;
  var info = localeInfo(locale);
  var pattern = datePattern(format2, info);
  var parts = [];
  var lastIndex = dateFormatRegExp.lastIndex = 0;
  var match = dateFormatRegExp.exec(pattern);
  while (match) {
    var value = match[0];
    if (lastIndex < match.index) {
      addLiteral(parts, pattern.substring(lastIndex, match.index));
    }
    if (value.startsWith('"') || value.startsWith("'")) {
      addLiteral(parts, value);
    } else {
      var specifier = value[0];
      var type = DATE_FIELD_MAP[specifier];
      var part = {
        type,
        pattern: value
      };
      if (type === "hour") {
        part.hour12 = isHour12(value);
      }
      var names = NAME_TYPES[type];
      if (names) {
        var minLength = isNumber(names.minLength) ? names.minLength : names.minLength[specifier];
        var patternLength = value.length;
        if (patternLength >= minLength) {
          part.names = {
            type: names.type,
            nameType: dateNameType(patternLength),
            standAlone: names.standAlone === specifier
          };
        }
      }
      parts.push(part);
    }
    lastIndex = dateFormatRegExp.lastIndex;
    match = dateFormatRegExp.exec(pattern);
  }
  if (lastIndex < pattern.length) {
    addLiteral(parts, pattern.substring(lastIndex));
  }
  return parts;
}

// node_modules/@progress/kendo-intl/dist/es/format.js
var formatRegExp3 = /\{(\d+)(:[^}]+)?\}/g;
function toString(value, format2, locale) {
  if (format2) {
    if (isDate(value)) {
      return formatDate(value, format2, locale);
    } else if (isNumber(value)) {
      return formatNumber(value, format2, locale);
    }
  }
  return value !== void 0 && value !== null ? value : EMPTY;
}
function format(format2, values2, locale) {
  return format2.replace(formatRegExp3, function(match, index, placeholderFormat) {
    var value = values2[parseInt(index, 10)];
    return toString(value, placeholderFormat ? placeholderFormat.substring(1) : EMPTY, locale);
  });
}

// node_modules/@progress/kendo-react-intl/dist/es/package-metadata.js
var packageMetadata = {
  name: "@progress/kendo-react-intl",
  productName: "KendoReact",
  productCodes: ["KENDOUIREACT", "KENDOUICOMPLETE"],
  publishDate: 1666770489,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-react-ui/my-license/?utm_medium=product&utm_source=kendoreact&utm_campaign=kendo-ui-react-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-react-intl/dist/es/Intl/IntlService.js
var IntlService = function() {
  function IntlService2(locale) {
    this.locale = locale;
    if (typeof index_esm_exports !== "undefined") {
      validatePackage(packageMetadata);
    } else {
      var message = "License activation failed for ".concat(packageMetadata.name, "\n");
      message += "The @progress/kendo-licensing script is not loaded.\n";
      message += "See ".concat(packageMetadata.licensingDocsUrl, " for more information.\n");
      console.warn(message);
    }
    if (locale === "" && true) {
      throw "Locale should not be empty string";
    }
  }
  IntlService2.prototype.format = function(format2) {
    var values2 = [];
    for (var _i = 1; _i < arguments.length; _i++) {
      values2[_i - 1] = arguments[_i];
    }
    if (values2.length === 1 && Array.isArray(values2[0])) {
      return format(format2, values2[0], this.locale);
    }
    return format(format2, values2, this.locale);
  };
  IntlService2.prototype.formatDate = function(value, format2) {
    return formatDate(value, format2, this.locale);
  };
  IntlService2.prototype.toString = function(value, format2) {
    return toString(value, format2, this.locale);
  };
  IntlService2.prototype.parseNumber = function(value, format2) {
    return parseNumber(value, this.locale, format2);
  };
  IntlService2.prototype.parseDate = function(value, format2) {
    return parseDate2(value, format2, this.locale);
  };
  IntlService2.prototype.formatNumber = function(value, format2) {
    return formatNumber(value, format2, this.locale);
  };
  IntlService2.prototype.dateFieldName = function(options) {
    return dateFieldName(options, this.locale);
  };
  IntlService2.prototype.dateFormatNames = function(options) {
    return dateFormatNames(this.locale, options);
  };
  IntlService2.prototype.splitDateFormat = function(format2) {
    return splitDateFormat(format2, this.locale);
  };
  IntlService2.prototype.numberSymbols = function() {
    return numberSymbols(this.locale);
  };
  IntlService2.prototype.firstDay = function() {
    return firstDay(this.locale);
  };
  return IntlService2;
}();

// node_modules/@progress/kendo-react-intl/dist/es/globalization/GlobalizationContext.js
var React24 = __toESM(require_react());

// node_modules/@progress/kendo-react-intl/dist/es/Localization/messages.js
var messages2 = /* @__PURE__ */ Object.create({});

// node_modules/@progress/kendo-react-intl/dist/es/Localization/LocalizationService.js
var LocalizationService = function() {
  function LocalizationService2(language) {
    this.language = language;
    if (language === "" && true) {
      throw "Language should not be an empty string";
    }
  }
  LocalizationService2.prototype.toLanguageString = function(key, defaultValue) {
    if (this.language && messages2[this.language] && messages2[this.language].hasOwnProperty(key)) {
      return messages2[this.language][key];
    } else {
      return defaultValue;
    }
  };
  return LocalizationService2;
}();

// node_modules/@progress/kendo-react-intl/dist/es/globalization/GlobalizationContext.js
var GlobalizationContext = React24.createContext({
  intl: new IntlService("en"),
  localization: new LocalizationService()
});

// node_modules/@progress/kendo-react-intl/dist/es/Intl/IntlProvider.js
var __extends = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign7 = function() {
  __assign7 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign7.apply(this, arguments);
};
var IntlProvider = function(_super) {
  __extends(IntlProvider2, _super);
  function IntlProvider2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  IntlProvider2.prototype.getIntlService = function() {
    return new IntlService(this.props.locale);
  };
  IntlProvider2.prototype.render = function() {
    var _this = this;
    return React25.createElement(GlobalizationContext.Consumer, null, function(glob) {
      return React25.createElement(GlobalizationContext.Provider, { value: __assign7(__assign7({}, glob), { intl: _this.getIntlService() }) }, _this.props.children);
    });
  };
  IntlProvider2.propTypes = {
    locale: PropTypes4.string
  };
  return IntlProvider2;
}(React25.Component);

// node_modules/@progress/kendo-react-intl/dist/es/Localization/LocalizationProvider.js
var React26 = __toESM(require_react());
var PropTypes5 = __toESM(require_prop_types());
var __extends2 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign8 = function() {
  __assign8 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign8.apply(this, arguments);
};
var LocalizationProvider = function(_super) {
  __extends2(LocalizationProvider2, _super);
  function LocalizationProvider2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  LocalizationProvider2.prototype.getLocalizationService = function() {
    return new LocalizationService(this.props.language);
  };
  LocalizationProvider2.prototype.render = function() {
    var _this = this;
    return React26.createElement(GlobalizationContext.Consumer, null, function(glob) {
      return React26.createElement(GlobalizationContext.Provider, { value: __assign8(__assign8({}, glob), { localization: _this.getLocalizationService() }) }, _this.props.children);
    });
  };
  LocalizationProvider2.propTypes = {
    language: PropTypes5.string
  };
  return LocalizationProvider2;
}(React26.Component);

// node_modules/@progress/kendo-react-intl/dist/es/intlUtils.js
function provideLocalizationService(component) {
  if (!component && true) {
    throw "Passed component - ".concat(component, " is invalid.");
  }
  var context2 = component.context;
  return context2 && context2.localization ? context2.localization : new LocalizationService();
}
function registerForLocalization(component) {
  component.contextType = GlobalizationContext;
}

// node_modules/@progress/kendo-react-intl/dist/es/hooks/useInternationalization.js
var React27 = __toESM(require_react());

// node_modules/@progress/kendo-react-intl/dist/es/hooks/useLocalization.js
var React28 = __toESM(require_react());
var useLocalization = function() {
  return React28.useContext(GlobalizationContext).localization;
};

// node_modules/@progress/kendo-react-labels/dist/es/package-metadata.js
var packageMetadata2 = {
  name: "@progress/kendo-react-labels",
  productName: "KendoReact",
  productCodes: ["KENDOUIREACT", "KENDOUICOMPLETE"],
  publishDate: 1666770663,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-react-ui/my-license/?utm_medium=product&utm_source=kendoreact&utm_campaign=kendo-ui-react-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-react-labels/dist/es/Label.js
var Label = function(props) {
  validatePackage2(packageMetadata2);
  var id = props.id, editorId = props.editorId, editorRef = props.editorRef, editorDisabled = props.editorDisabled, children3 = props.children, editorValid = props.editorValid, style = props.style, className = props.className, optional = props.optional;
  var localizationService = useLocalization();
  var localizedOptional = optional ? localizationService.toLanguageString(labelsOptional, messages[labelsOptional]) : "";
  var optionalElement = localizedOptional && React29.createElement("span", { className: "k-label-optional" }, localizedOptional);
  var onLabelClick = React29.useCallback(function(e) {
    if (editorRef && editorRef.current && !editorDisabled) {
      if (editorRef.current.focus) {
        e.preventDefault();
        editorRef.current.focus();
      }
      var editorActionElement = editorRef.current.actionElement;
      if (editorActionElement) {
        e.preventDefault();
        editorActionElement.click();
      }
    }
  }, [editorRef]);
  var labelClassName = classNames({
    "k-label": true,
    "k-label-empty": !children3,
    "k-text-error": editorValid === false,
    "k-text-disabled": editorDisabled === true
  }, className);
  return React29.createElement(
    "label",
    { id, htmlFor: editorId, onClick: onLabelClick, style, className: labelClassName },
    children3,
    optionalElement
  );
};
Label.propTypes = {
  id: PropTypes6.string,
  editorId: PropTypes6.string,
  editorRef: PropTypes6.oneOfType([
    PropTypes6.func,
    PropTypes6.shape({ current: PropTypes6.any })
  ]),
  editorValid: PropTypes6.bool,
  editorDisabled: PropTypes6.bool,
  style: PropTypes6.object,
  className: PropTypes6.string,
  optional: PropTypes6.bool
};
Label.displayName = "KendoReactLabel";

// node_modules/@progress/kendo-react-labels/dist/es/Error.js
var React30 = __toESM(require_react());
var PropTypes7 = __toESM(require_prop_types());
var Error2 = function(props) {
  validatePackage2(packageMetadata2);
  var errorClassName = classNames({
    "k-form-error": true,
    "k-text-start": props.direction === "start",
    "k-text-end": props.direction === "end"
  }, props.className);
  return React30.createElement("div", { id: props.id, role: "alert", style: props.style, className: errorClassName }, props.children);
};
Error2.propTypes = {
  id: PropTypes7.string,
  direction: PropTypes7.oneOf(["start", "end"]),
  children: PropTypes7.oneOfType([
    PropTypes7.element,
    PropTypes7.node
  ]),
  style: PropTypes7.object,
  className: PropTypes7.string
};
Error2.defaultProps = {
  direction: "start"
};
Error2.displayName = "KendoReactError";

// node_modules/@progress/kendo-react-labels/dist/es/Hint.js
var React31 = __toESM(require_react());
var PropTypes8 = __toESM(require_prop_types());
var Hint = function(props) {
  validatePackage2(packageMetadata2);
  var hintClassName = classNames({
    "k-form-hint": true,
    "k-text-start": props.direction === "start",
    "k-text-end": props.direction === "end",
    "k-text-disabled": props.editorDisabled === true
  }, props.className);
  return React31.createElement("div", { id: props.id, style: props.style, className: hintClassName }, props.children);
};
Hint.propTypes = {
  id: PropTypes8.string,
  direction: PropTypes8.oneOf(["start", "end"]),
  children: PropTypes8.oneOfType([
    PropTypes8.element,
    PropTypes8.node
  ]),
  style: PropTypes8.object,
  className: PropTypes8.string,
  editorDisabled: PropTypes8.bool
};
Hint.defaultProps = {
  direction: "start"
};
Hint.displayName = "KendoReactHint";

// node_modules/@progress/kendo-react-labels/dist/es/FloatingLabel.js
var React32 = __toESM(require_react());
var PropTypes9 = __toESM(require_prop_types());
var __extends3 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var FloatingLabel = function(_super) {
  __extends3(FloatingLabel2, _super);
  function FloatingLabel2(props) {
    var _this = _super.call(this, props) || this;
    _this.state = {
      focused: false
    };
    _this.handleFocus = function(_) {
      _this.setState({ focused: true });
    };
    _this.handleBlur = function(_) {
      _this.setState({ focused: false });
    };
    validatePackage2(packageMetadata2);
    return _this;
  }
  FloatingLabel2.prototype.render = function() {
    var _a3 = this.props, label = _a3.label, editorId = _a3.editorId, className = _a3.className, editorValue = _a3.editorValue, editorPlaceholder = _a3.editorPlaceholder, editorValid = _a3.editorValid, editorDisabled = _a3.editorDisabled, style = _a3.style, id = _a3.id, optional = _a3.optional;
    var localizationService = provideLocalizationService(this);
    var localizedOptional = optional ? localizationService.toLanguageString(labelsOptional, messages[labelsOptional]) : "";
    var optionalElement = localizedOptional && React32.createElement("span", { className: "k-label-optional" }, localizedOptional);
    var spanClassNames = classNames({
      "k-floating-label-container": true,
      "k-focus": this.state.focused,
      "k-empty": !editorPlaceholder && !editorValue && editorValue !== 0,
      "k-text-disabled": editorDisabled,
      "k-rtl": this.props.dir === "rtl"
    }, className);
    var labelClassNames = classNames({
      "k-label": true,
      "k-text-error": editorValid === false,
      "k-text-disabled": editorDisabled
    });
    return React32.createElement(
      "span",
      { id: this.props.id, className: spanClassNames, onFocus: this.handleFocus, onBlur: this.handleBlur, style, dir: this.props.dir },
      this.props.children,
      label ? editorId ? React32.createElement(
        "label",
        { id, htmlFor: editorId, className: labelClassNames },
        label,
        optionalElement
      ) : React32.createElement(
        "span",
        { id, className: labelClassNames },
        label,
        optionalElement
      ) : null
    );
  };
  FloatingLabel2.propTypes = {
    label: PropTypes9.string,
    editorId: PropTypes9.string,
    editorValue: PropTypes9.oneOfType([PropTypes9.string, PropTypes9.bool, PropTypes9.number]),
    editorPlaceholder: PropTypes9.string,
    editorValid: PropTypes9.bool,
    editorDisabled: PropTypes9.bool,
    id: PropTypes9.string,
    style: PropTypes9.object,
    className: PropTypes9.string,
    optional: PropTypes9.bool
  };
  return FloatingLabel2;
}(React32.Component);
registerForLocalization(FloatingLabel);

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/ListContainer.js
var React35 = __toESM(require_react());

// node_modules/@progress/kendo-react-popup/dist/es/Popup.js
var React34 = __toESM(require_react());

// node_modules/@progress/kendo-react-popup/dist/es/PopupWithoutContext.js
var React33 = __toESM(require_react());
var ReactDOM = __toESM(require_react_dom());
var PropTypes10 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-popup/dist/es/animation.js
var clearSlide = function(element5) {
  element5.style.transitionDuration = "";
  Array.from(element5.classList).forEach(function(c) {
    if (c.startsWith("k-slide-")) {
      element5.classList.remove(c);
    }
  });
};
var firefox = typeof window !== "undefined" && /Firefox/.test(window.navigator.userAgent);
var slide = function(element5, direction, duration, type, callback) {
  if (duration === 0) {
    return callback();
  }
  var slideClass = "k-slide-" + direction + "-" + type;
  var slideActiveClass = slideClass + "-active";
  var transitionend = function(e) {
    if (e.target === element5) {
      element5.removeEventListener("transitionend", transitionend);
      clearSlide(element5);
      if (type === "exit") {
        element5.style.display = "none";
      } else {
        element5.style.display = "";
      }
      callback();
    }
  };
  element5.addEventListener("transitionend", transitionend);
  var ownerDocument2 = element5.ownerDocument;
  if (!ownerDocument2) {
    return;
  }
  var defaultView = ownerDocument2.defaultView;
  if (!defaultView) {
    return;
  }
  var animate = function() {
    clearSlide(element5);
    element5.classList.add(slideClass);
    defaultView.requestAnimationFrame(function() {
      element5.style.transitionDuration = duration + "ms";
      element5.classList.add(slideActiveClass);
    });
  };
  if (firefox) {
    defaultView.requestAnimationFrame(animate);
  } else {
    animate();
  }
};

// node_modules/@progress/kendo-popup-common/dist/es/align-point.js
var align_point_default = {
  "bottom": "bottom",
  "center": "center",
  "middle": "middle",
  "left": "left",
  "right": "right",
  "top": "top"
};

// node_modules/@progress/kendo-popup-common/dist/es/align.js
var align = function(options) {
  var anchorRect = options.anchorRect;
  var anchorAlign = options.anchorAlign;
  var elementRect = options.elementRect;
  var elementAlign = options.elementAlign;
  var margin = options.margin;
  if (margin === void 0)
    margin = {};
  var anchorHorizontal = anchorAlign.horizontal;
  var anchorVertical = anchorAlign.vertical;
  var elementHorizontal = elementAlign.horizontal;
  var elementVertical = elementAlign.vertical;
  var horizontalMargin = margin.horizontal || 0;
  var verticalMargin = margin.vertical || 0;
  var top = anchorRect.top;
  var left = anchorRect.left;
  if (anchorVertical === align_point_default.bottom) {
    top += anchorRect.height;
  }
  if (anchorVertical === align_point_default.center || anchorVertical === align_point_default.middle) {
    top += Math.round(anchorRect.height / 2);
  }
  if (elementVertical === align_point_default.bottom) {
    top -= elementRect.height;
    verticalMargin *= -1;
  }
  if (elementVertical === align_point_default.center || elementVertical === align_point_default.middle) {
    top -= Math.round(elementRect.height / 2);
    verticalMargin *= -1;
  }
  if (anchorHorizontal === align_point_default.right) {
    left += anchorRect.width;
  }
  if (anchorHorizontal === align_point_default.center || anchorHorizontal === align_point_default.middle) {
    left += Math.round(anchorRect.width / 2);
  }
  if (elementHorizontal === align_point_default.right) {
    left -= elementRect.width;
    horizontalMargin *= -1;
  }
  if (elementHorizontal === align_point_default.center || elementHorizontal === align_point_default.middle) {
    left -= Math.round(elementRect.width / 2);
    horizontalMargin *= -1;
  }
  return {
    top: top + verticalMargin,
    left: left + horizontalMargin
  };
};
var align_default = align;

// node_modules/@progress/kendo-popup-common/dist/es/add-scroll.js
function addScroll(rect, scroll) {
  return {
    top: rect.top + scroll.y,
    left: rect.left + scroll.x,
    height: rect.height,
    width: rect.width
  };
}

// node_modules/@progress/kendo-popup-common/dist/es/owner-document.js
function ownerDocument(element5) {
  return element5.ownerDocument || element5.document || element5;
}

// node_modules/@progress/kendo-popup-common/dist/es/window.js
var getWindow2 = function(element5) {
  return ownerDocument(element5).defaultView;
};
var window_default = getWindow2;

// node_modules/@progress/kendo-popup-common/dist/es/document.js
var getDocument3 = function(element5) {
  return ownerDocument(element5).documentElement;
};
var document_default = getDocument3;

// node_modules/@progress/kendo-popup-common/dist/es/scrollbar-width.js
var cachedWidth = 0;
function scrollbarWidth() {
  if (!cachedWidth && typeof document !== "undefined") {
    var div = document.createElement("div");
    div.style.cssText = "overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block";
    div.innerHTML = "&nbsp;";
    document.body.appendChild(div);
    cachedWidth = div.offsetWidth - div.scrollWidth;
    document.body.removeChild(div);
  }
  return cachedWidth;
}

// node_modules/@progress/kendo-popup-common/dist/es/window-viewport.js
function windowViewport(element5) {
  var win = window_default(element5);
  var document2 = document_default(element5);
  var result = {
    height: win.innerHeight,
    width: win.innerWidth
  };
  if (document2.scrollHeight - document2.clientHeight > 0) {
    result.width -= scrollbarWidth();
  }
  return result;
}

// node_modules/@progress/kendo-popup-common/dist/es/bounding-offset.js
var boundingOffset = function(element5) {
  if (!element5.getBoundingClientRect) {
    var viewport = windowViewport(element5);
    return {
      bottom: viewport.height,
      left: 0,
      right: viewport.width,
      top: 0
    };
  }
  var ref = element5.getBoundingClientRect();
  var bottom = ref.bottom;
  var left = ref.left;
  var right = ref.right;
  var top = ref.top;
  return {
    bottom,
    left,
    right,
    top
  };
};
var bounding_offset_default = boundingOffset;

// node_modules/@progress/kendo-popup-common/dist/es/offset-parent.js
var offsetParent = function(element5) {
  var offsetParent2 = element5.offsetParent;
  while (offsetParent2 && offsetParent2.style.position === "static") {
    offsetParent2 = offsetParent2.offsetParent;
  }
  return offsetParent2 || document_default(element5);
};
var offset_parent_default = offsetParent;

// node_modules/@progress/kendo-popup-common/dist/es/offset.js
var rectOfHiddenElement = function(element5) {
  var ref = element5.style;
  var display = ref.display;
  var left = ref.left;
  var position4 = ref.position;
  element5.style.display = "";
  element5.style.left = "-10000px";
  element5.style.position = "absolute";
  var rect = element5.getBoundingClientRect();
  element5.style.display = display;
  element5.style.left = left;
  element5.style.position = position4;
  return rect;
};
var offset = function(element5) {
  var rect = element5.getBoundingClientRect();
  var left = rect.left;
  var top = rect.top;
  if (!rect.height && !rect.width) {
    rect = rectOfHiddenElement(element5);
  }
  return {
    top,
    left,
    height: rect.height,
    width: rect.width
  };
};
var offset_default = offset;

// node_modules/@progress/kendo-popup-common/dist/es/parents.js
function parents_default(element5, until) {
  var result = [];
  var next = element5.parentNode;
  while (next) {
    result.push(next);
    if (next === until) {
      break;
    }
    next = next.parentNode;
  }
  return result;
}

// node_modules/@progress/kendo-popup-common/dist/es/scroll-position.js
function scrollPosition(element5) {
  var documentElement = document_default(element5);
  var win = window_default(element5);
  return {
    x: win.pageXOffset || documentElement.scrollLeft || 0,
    y: win.pageYOffset || documentElement.scrollTop || 0
  };
}

// node_modules/@progress/kendo-popup-common/dist/es/element-scroll-position.js
function element_scroll_position_default(element5) {
  if (element5 === (element5.ownerDocument || {}).body) {
    return scrollPosition(element5);
  }
  return {
    x: element5.scrollLeft,
    y: element5.scrollTop
  };
}

// node_modules/@progress/kendo-popup-common/dist/es/parent-scroll-position.js
function parentScrollPosition(element5) {
  var parent = offset_parent_default(element5);
  return parent ? element_scroll_position_default(parent) : { x: 0, y: 0 };
}

// node_modules/@progress/kendo-popup-common/dist/es/position.js
var position = function(element5, parent) {
  var win = window_default(element5);
  var elementStyles = win.getComputedStyle(element5);
  var offset3 = offset_default(element5);
  var parentElement = parent || offset_parent_default(element5);
  var ownerDocument2 = element5.ownerDocument;
  var useRelative = parentElement !== ownerDocument2.body && parentElement !== ownerDocument2.documentElement;
  var parentOffset = { top: 0, left: 0 };
  if (elementStyles.position !== "fixed" && useRelative) {
    var parentStyles = win.getComputedStyle(parentElement);
    parentOffset = offset_default(parentElement);
    parentOffset.top += parseInt(parentStyles.borderTopWidth, 10);
    parentOffset.left += parseInt(parentStyles.borderLeftWidth, 10);
  }
  return {
    top: offset3.top - parentOffset.top,
    left: offset3.left - parentOffset.left,
    height: offset3.height,
    width: offset3.width
  };
};
var position_default = position;

// node_modules/@progress/kendo-popup-common/dist/es/offset-parent-scroll-position.js
function offset_parent_scroll_position_default(offsetParentElement, element5) {
  return offsetParentElement ? element_scroll_position_default(offsetParentElement) : parentScrollPosition(element5);
}

// node_modules/@progress/kendo-popup-common/dist/es/position-with-scroll.js
function position_with_scroll_default(element5, parent, scale) {
  if (scale === void 0)
    scale = 1;
  var offsetParentElement = parent ? offset_parent_default(parent) : null;
  var ref = position_default(element5, offsetParentElement);
  var top = ref.top;
  var left = ref.left;
  var height = ref.height;
  var width = ref.width;
  var ref$1 = offset_parent_scroll_position_default(offsetParentElement, element5);
  var x = ref$1.x;
  var y = ref$1.y;
  var ownerDocument2 = element5.ownerDocument;
  var positionScale = offsetParentElement === ownerDocument2.body || offsetParentElement === ownerDocument2.documentElement ? 1 : scale;
  return {
    top: top + y * positionScale,
    left: left + x * positionScale,
    height,
    width
  };
}

// node_modules/@progress/kendo-popup-common/dist/es/remove-scroll.js
function removeScroll(rect, scroll) {
  return {
    top: rect.top - scroll.y,
    left: rect.left - scroll.x,
    height: rect.height,
    width: rect.width
  };
}

// node_modules/@progress/kendo-popup-common/dist/es/collision.js
var collision_default = {
  "fit": "fit",
  "flip": "flip",
  "none": "none"
};

// node_modules/@progress/kendo-popup-common/dist/es/restrict-to-view.js
var fit = function(position4, size, viewPortSize) {
  var output = 0;
  if (position4 + size > viewPortSize) {
    output = viewPortSize - (position4 + size);
  }
  if (position4 < 0) {
    output = -position4;
  }
  return output;
};
var flip = function(ref) {
  var offset3 = ref.offset;
  var size = ref.size;
  var anchorSize = ref.anchorSize;
  var viewPortSize = ref.viewPortSize;
  var anchorAlignPoint = ref.anchorAlignPoint;
  var elementAlignPoint = ref.elementAlignPoint;
  var margin = ref.margin;
  var output = 0;
  var isPositionCentered = elementAlignPoint === align_point_default.center || elementAlignPoint === align_point_default.middle;
  var isOriginCentered = anchorAlignPoint === align_point_default.center || anchorAlignPoint === align_point_default.middle;
  var marginToAdd = 2 * margin;
  if (elementAlignPoint !== anchorAlignPoint && !isPositionCentered && !isOriginCentered) {
    var isBeforeAnchor = anchorAlignPoint === align_point_default.top || anchorAlignPoint === align_point_default.left;
    if (offset3 < 0 && isBeforeAnchor) {
      output = size + anchorSize + marginToAdd;
      if (offset3 + output + size > viewPortSize) {
        output = 0;
      }
    } else if (offset3 >= 0 && !isBeforeAnchor) {
      if (offset3 + size > viewPortSize) {
        output += -(anchorSize + size + marginToAdd);
      }
      if (offset3 + output < 0) {
        output = 0;
      }
    }
  }
  return output;
};
var restrictToView = function(options) {
  var anchorRect = options.anchorRect;
  var anchorAlign = options.anchorAlign;
  var elementRect = options.elementRect;
  var elementAlign = options.elementAlign;
  var collisions = options.collisions;
  var viewPort = options.viewPort;
  var margin = options.margin;
  if (margin === void 0)
    margin = {};
  var elementTop = elementRect.top;
  var elementLeft = elementRect.left;
  var elementHeight = elementRect.height;
  var elementWidth = elementRect.width;
  var viewPortHeight = viewPort.height;
  var viewPortWidth = viewPort.width;
  var horizontalMargin = margin.horizontal || 0;
  var verticalMargin = margin.vertical || 0;
  var left = 0;
  var top = 0;
  var isVerticalFit = collisions.vertical === collision_default.fit;
  var isHorizontalFit = collisions.horizontal === collision_default.fit;
  var isVerticalFlip = collisions.vertical === collision_default.flip;
  var isHorizontalFlip = collisions.horizontal === collision_default.flip;
  if (isVerticalFit) {
    top += fit(elementTop, elementHeight, viewPortHeight);
  }
  if (isHorizontalFit) {
    left += fit(elementLeft, elementWidth, viewPortWidth);
  }
  if (isVerticalFlip) {
    top += flip({
      margin: verticalMargin,
      offset: elementTop,
      size: elementHeight,
      anchorSize: anchorRect.height,
      viewPortSize: viewPortHeight,
      anchorAlignPoint: anchorAlign.vertical,
      elementAlignPoint: elementAlign.vertical
    });
  }
  if (isHorizontalFlip) {
    left += flip({
      margin: horizontalMargin,
      offset: elementLeft,
      size: elementWidth,
      anchorSize: anchorRect.width,
      viewPortSize: viewPortWidth,
      anchorAlignPoint: anchorAlign.horizontal,
      elementAlignPoint: elementAlign.horizontal
    });
  }
  var flippedVertical = isVerticalFlip && top !== 0;
  var flippedHorizontal = isHorizontalFlip && left !== 0;
  var fittedVertical = isVerticalFit && top !== 0;
  var fittedHorizontal = isHorizontalFit && left !== 0;
  return {
    flipped: flippedHorizontal || flippedVertical,
    fitted: fittedVertical || fittedHorizontal,
    flip: {
      horizontal: flippedHorizontal,
      vertical: flippedVertical
    },
    fit: {
      horizontal: fittedHorizontal,
      vertical: fittedVertical
    },
    offset: {
      left,
      top
    }
  };
};
var restrict_to_view_default = restrictToView;

// node_modules/@progress/kendo-popup-common/dist/es/siblings.js
function siblings_default(element5) {
  var result = [];
  var sibling = element5.parentNode.firstElementChild;
  while (sibling) {
    if (sibling !== element5) {
      result.push(sibling);
    }
    sibling = sibling.nextElementSibling;
  }
  return result;
}

// node_modules/@progress/kendo-popup-common/dist/es/sibling-container.js
function sibling_container_default(anchor, container) {
  var parentElements = parents_default(anchor);
  var containerElement = container;
  var siblingElements;
  var result;
  while (containerElement) {
    siblingElements = siblings_default(containerElement);
    result = parentElements.reduce(
      function(list, p2) {
        return list.concat(siblingElements.filter(function(s) {
          return s === p2;
        }));
      },
      []
    )[0];
    if (result) {
      break;
    }
    containerElement = containerElement.parentElement;
  }
  return result;
}

// node_modules/@progress/kendo-popup-common/dist/es/utils.js
var eitherRect = function(rect, offset3) {
  if (!rect) {
    return { height: 0, left: offset3.left, top: offset3.top, width: 0 };
  }
  return rect;
};
var scaleRect = function(rect, scale) {
  if (!rect || scale === 1) {
    return rect;
  }
  return {
    height: rect.height / scale,
    left: rect.left / scale,
    top: rect.top / scale,
    width: rect.width / scale
  };
};
var removeStackingOffset = function(rect, stackingOffset) {
  if (!stackingOffset) {
    return rect;
  }
  var result = {
    height: rect.height,
    left: rect.left - stackingOffset.left,
    top: rect.top - stackingOffset.top,
    width: rect.width
  };
  return result;
};
function memoize(fun) {
  var result;
  var called = false;
  return function() {
    var args = [], len = arguments.length;
    while (len--)
      args[len] = arguments[len];
    if (called) {
      return result;
    }
    result = fun.apply(void 0, args);
    called = true;
    return result;
  };
}
var hasRelativeStackingContext = memoize(function(elementSource) {
  if (!canUseDOM2()) {
    return false;
  }
  var currentDocument = elementSource ? elementSource.ownerDocument : document;
  if (!currentDocument || !currentDocument.body) {
    return false;
  }
  var top = 10;
  var parent = currentDocument.createElement("div");
  parent.style.transform = "matrix(10, 0, 0, 10, 0, 0)";
  parent.innerHTML = '<div style="position: fixed; top: ' + top + 'px;">child</div>';
  currentDocument.body.appendChild(parent);
  var isDifferent = parent.children[0].getBoundingClientRect().top !== top;
  currentDocument.body.removeChild(parent);
  return isDifferent;
});
var canUseDOM2 = function() {
  return Boolean(
    typeof window !== "undefined" && window.document && window.document.createElement
  );
};
var utils = {
  eitherRect,
  scaleRect,
  removeStackingOffset,
  hasRelativeStackingContext,
  canUseDOM: canUseDOM2
};
var utils_default = utils;

// node_modules/@progress/kendo-popup-common/dist/es/dom-utils.js
var STYLES = [
  "font-size",
  "font-family",
  "font-stretch",
  "font-style",
  "font-weight",
  "line-height"
];
var addOffset = function(current, addition) {
  return {
    left: current.left + addition.left,
    top: current.top + addition.top
  };
};
var getWindow3 = function() {
  return utils_default.canUseDOM() ? window : null;
};
var getFontStyles = function(el) {
  var window2 = getWindow3();
  if (!window2 || !el) {
    return [];
  }
  var computedStyles = window2.getComputedStyle(el);
  return STYLES.map(function(font) {
    return { key: font, value: computedStyles[font] };
  });
};
var hasOffsetParent = function(el) {
  if (!el) {
    return false;
  }
  return Boolean(el.offsetParent);
};
var offset2 = function(el) {
  if (!el) {
    return null;
  }
  return offset_default(el);
};
var offsetAtPoint = function(element5, currentLocation) {
  if (!element5) {
    return null;
  }
  var ref = element5.style;
  var left = ref.left;
  var top = ref.top;
  var transition = ref.transition;
  element5.style.transition = "none";
  element5.style.left = currentLocation.left + "px";
  element5.style.top = currentLocation.top + "px";
  var currentOffset = offset_default(element5);
  element5.style.left = left;
  element5.style.top = top;
  element5.offsetHeight;
  element5.style.transition = transition;
  return currentOffset;
};
var position2 = function(element5, popupElement, scale) {
  if (!element5 || !popupElement) {
    return null;
  }
  var currentScale = scale || 1;
  return position_with_scroll_default(element5, popupElement, currentScale);
};
var OVERFLOW_REGEXP = /auto|scroll/;
var overflowElementStyle = function(element5) {
  return "" + element5.style.overflow + element5.style.overflowX + element5.style.overflowY;
};
var overflowComputedStyle = function(element5) {
  var styles6 = window.getComputedStyle(element5);
  return "" + styles6.overflow + styles6.overflowX + styles6.overflowY;
};
var overflowStyle = function(element5) {
  return overflowElementStyle(element5) || overflowComputedStyle(element5);
};
var scrollableParents = function(element5) {
  var parentElements = [];
  if (!utils_default.canUseDOM()) {
    return parentElements;
  }
  var parent = element5.parentElement;
  while (parent) {
    if (OVERFLOW_REGEXP.test(overflowStyle(parent)) || parent.hasAttribute("data-scrollable")) {
      parentElements.push(parent);
    }
    parent = parent.parentElement;
  }
  parentElements.push(window);
  return parentElements;
};
var getRelativeContextElement = function(el) {
  if (!el || !utils_default.hasRelativeStackingContext()) {
    return null;
  }
  var parent = el.parentElement;
  while (parent) {
    if (window.getComputedStyle(parent).transform !== "none") {
      return parent;
    }
    parent = parent.parentElement;
  }
  return null;
};
var stackingElementOffset = function(el) {
  var relativeContextElement = getRelativeContextElement(el);
  if (!relativeContextElement) {
    return null;
  }
  return offset_default(relativeContextElement);
};
var stackingElementScroll = function(el) {
  var relativeContextElement = getRelativeContextElement(el);
  if (!relativeContextElement) {
    return { x: 0, y: 0 };
  }
  return {
    x: relativeContextElement.scrollLeft,
    y: relativeContextElement.scrollTop
  };
};
var stackingElementViewPort = function(el) {
  var relativeContextElement = getRelativeContextElement(el);
  if (!relativeContextElement) {
    return null;
  }
  return {
    height: relativeContextElement.scrollHeight,
    width: relativeContextElement.scrollWidth
  };
};
var useRelativePosition = function(el) {
  return Boolean(getRelativeContextElement(el));
};
var zoomLevel = function() {
  if (!utils_default.canUseDOM()) {
    return 1;
  }
  return parseFloat((document.documentElement.clientWidth / window.innerWidth).toFixed(2)) || 1;
};
var isZoomed = function() {
  return zoomLevel() > 1;
};
var zIndex = function(anchor, container) {
  if (!anchor || !utils_default.canUseDOM()) {
    return null;
  }
  var sibling = sibling_container_default(anchor, container);
  if (!sibling) {
    return null;
  }
  var result = [anchor].concat(parents_default(anchor, sibling)).reduce(
    function(index, p2) {
      var zIndexStyle = p2.style.zIndex || window.getComputedStyle(p2).zIndex;
      var current = parseInt(zIndexStyle, 10);
      return current > index ? current : index;
    },
    0
  );
  return result ? result + 1 : null;
};
var domUtils = {
  addOffset,
  addScroll,
  align: align_default,
  boundingOffset: bounding_offset_default,
  getFontStyles,
  getWindow: getWindow3,
  hasOffsetParent,
  offset: offset2,
  offsetAtPoint,
  position: position2,
  removeScroll,
  restrictToView: restrict_to_view_default,
  scrollPosition,
  scrollableParents,
  getRelativeContextElement,
  stackingElementOffset,
  stackingElementScroll,
  stackingElementViewPort,
  useRelativePosition,
  windowViewPort: windowViewport,
  zoomLevel,
  isZoomed,
  zIndex
};
var dom_utils_default = domUtils;

// node_modules/@progress/kendo-popup-common/dist/es/align-element.js
var absoluteRect = function(anchor, element5, offset3, scale) {
  var scrollPos = elementScrollPosition(anchor, element5);
  var rect = utils_default.eitherRect(dom_utils_default.offset(anchor), offset3);
  var stackScale = 2 * scale;
  var stackScroll = dom_utils_default.stackingElementScroll(element5);
  if (scale !== 1 && stackScroll) {
    stackScroll.x /= stackScale;
    stackScroll.y /= stackScale;
  }
  var stackOffset = dom_utils_default.stackingElementOffset(element5);
  if (scale !== 1 && stackOffset) {
    stackOffset.left /= stackScale;
    stackOffset.top /= stackScale;
  }
  return dom_utils_default.removeScroll(
    dom_utils_default.addScroll(
      utils_default.removeStackingOffset(
        utils_default.scaleRect(rect, scale),
        stackOffset
      ),
      stackScroll
    ),
    scrollPos
  );
};
var relativeRect = function(anchor, element5, offset3, scale) {
  var rect = utils_default.eitherRect(dom_utils_default.position(anchor, element5, scale), offset3);
  return utils_default.scaleRect(rect, scale);
};
var elementScrollPosition = function(anchor, element5) {
  return anchor ? { x: 0, y: 0 } : dom_utils_default.scrollPosition(element5);
};
var alignElement = function(settings) {
  var anchor = settings.anchor;
  var element5 = settings.element;
  var anchorAlign = settings.anchorAlign;
  var elementAlign = settings.elementAlign;
  var margin = settings.margin;
  var offset3 = settings.offset;
  var positionMode = settings.positionMode;
  var scale = settings.scale;
  var currentScale = scale || 1;
  var fixedMode = positionMode === "fixed" || !dom_utils_default.hasOffsetParent(element5);
  var anchorRect = fixedMode ? absoluteRect(anchor, element5, offset3, currentScale) : relativeRect(anchor, element5, offset3, currentScale);
  var elementRect = utils_default.scaleRect(dom_utils_default.offset(element5), currentScale);
  var result = dom_utils_default.align({
    anchorAlign,
    anchorRect,
    elementAlign,
    elementRect,
    margin
  });
  return result;
};
var align_element_default = alignElement;

// node_modules/@progress/kendo-popup-common/dist/es/position-element.js
var positionElement = function(settings) {
  var anchor = settings.anchor;
  var currentLocation = settings.currentLocation;
  var element5 = settings.element;
  var anchorAlign = settings.anchorAlign;
  var elementAlign = settings.elementAlign;
  var collisions = settings.collisions;
  var margin = settings.margin;
  var scale = settings.scale;
  var currentScale = scale || 1;
  var elementOffset = dom_utils_default.offsetAtPoint(element5, currentLocation);
  var elementRect = utils_default.scaleRect(elementOffset, currentScale);
  var anchorOffset = utils_default.scaleRect(dom_utils_default.offset(anchor), currentScale);
  var anchorRect = utils_default.eitherRect(anchorOffset, currentLocation);
  var viewPort = settings.viewPort || dom_utils_default.windowViewPort(element5);
  viewPort.width = viewPort.width / currentScale;
  viewPort.height = viewPort.height / currentScale;
  var result = dom_utils_default.restrictToView({
    anchorAlign,
    anchorRect,
    collisions,
    elementAlign,
    elementRect,
    margin,
    viewPort
  });
  var offset3 = dom_utils_default.addOffset(currentLocation, result.offset);
  return {
    flip: result.flip,
    flipped: result.flipped,
    offset: offset3
  };
};
var position_element_default = positionElement;

// node_modules/@progress/kendo-react-popup/dist/es/util.js
var FRAME_DURATION = 1e3 / 60;
var throttle = function(func16, wait, options) {
  if (options === void 0) {
    options = {};
  }
  var timeout2, context2, args, result;
  var previous = 0;
  options = options || {};
  var later = function() {
    previous = options.leading === false ? 0 : new Date().getTime();
    timeout2 = void 0;
    result = func16.apply(context2, args);
    if (!timeout2) {
      context2 = args = null;
    }
  };
  var throttled = function() {
    var now = new Date().getTime();
    if (!previous && options.leading === false) {
      previous = now;
    }
    var remaining = wait - (now - previous);
    context2 = void 0;
    args = arguments;
    if (remaining <= 0 || remaining > wait) {
      if (timeout2) {
        clearTimeout(timeout2);
        timeout2 = void 0;
      }
      previous = now;
      result = func16.apply(context2, args);
      if (!timeout2) {
        context2 = args = null;
      }
    } else if (!timeout2 && options.trailing !== false) {
      timeout2 = window.setTimeout(later, remaining);
    }
    return result;
  };
  return throttled;
};

// node_modules/@progress/kendo-react-popup/dist/es/package-metadata.js
var packageMetadata3 = {
  name: "@progress/kendo-react-popup",
  productName: "KendoReact",
  productCodes: ["KENDOUIREACT", "KENDOUICOMPLETE"],
  publishDate: 1666770541,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-react-ui/my-license/?utm_medium=product&utm_source=kendoreact&utm_campaign=kendo-ui-react-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-react-popup/dist/es/PopupWithoutContext.js
var __extends4 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign9 = function() {
  __assign9 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign9.apply(this, arguments);
};
var DEFAULT_POPUP_ZINDEX = 100;
var ZINDEX_POPUP_STEP = 1;
function isEquivalent(a, b) {
  if (a === b) {
    return true;
  }
  if (!!a !== !!b) {
    return false;
  }
  var aProps = Object.getOwnPropertyNames(a);
  var bProps = Object.getOwnPropertyNames(b);
  if (aProps.length !== bProps.length) {
    return false;
  }
  for (var i = 0; i < aProps.length; i++) {
    var propName = aProps[i];
    if (a[propName] !== b[propName]) {
      return false;
    }
  }
  return true;
}
var DEFAULT_OFFSET = {
  left: -1e3,
  top: 0
};
var Status;
(function(Status2) {
  Status2["hiding"] = "hiding";
  Status2["hidden"] = "hidden";
  Status2["showing"] = "showing";
  Status2["shown"] = "shown";
  Status2["reposition"] = "reposition";
})(Status || (Status = {}));
var ANIMATION_CONTAINER = "k-animation-container";
var ANIMATION_CONTAINER_SHOWN = "k-animation-container-shown";
var ANIMATION_CONTAINER_RELATIVE = "k-animation-container-relative";
var ANIMATION_CONTAINER_CHILD = "k-child-animation-container";
var K_POPUP = "k-popup";
var PopupWithoutContext = function(_super) {
  __extends4(PopupWithoutContext2, _super);
  function PopupWithoutContext2(props) {
    var _this = _super.call(this, props) || this;
    _this.context = 0;
    _this.state = { current: Status.hidden, previous: Status.hidden, props: {} };
    _this._popup = null;
    _this.show = function(popup) {
      _this.setPosition(popup);
      _this.animate(popup.firstChild, "enter", _this.onOpened);
      _this.setState({ current: Status.shown, previous: _this.state.current });
    };
    _this.setPosition = function(popup) {
      var _a3 = _this.props, anchorAlign = _a3.anchorAlign, popupAlign = _a3.popupAlign, collision = _a3.collision, offset3 = _a3.offset, anchor = _a3.anchor, margin = _a3.margin, scale = _a3.scale, positionMode = _a3.positionMode;
      var _b = popup.style, width = _b.width, height = _b.height;
      popup.style.width = popup.offsetWidth + "px";
      popup.style.height = popup.offsetHeight + "px";
      var alignedOffset = align_element_default({
        anchor,
        anchorAlign,
        element: popup,
        elementAlign: popupAlign,
        offset: offset3,
        margin,
        positionMode,
        scale
      });
      var position4 = position_element_default({
        anchor,
        anchorAlign,
        element: popup,
        elementAlign: popupAlign,
        collisions: collision,
        currentLocation: alignedOffset,
        margin: _this.props.margin
      });
      popup.style.top = position4.offset.top + "px";
      popup.style.left = position4.offset.left + "px";
      popup.style.width = width;
      popup.style.height = height;
      _this._collisions = {
        fit: position4.fit,
        fitted: position4.fitted,
        flip: position4.flip,
        flipped: position4.flipped
      };
      if (_this.props.onPosition) {
        var event_1 = {
          target: _this,
          flipped: position4.flipped,
          fitted: position4.fitted
        };
        _this.props.onPosition.call(void 0, event_1);
      }
    };
    _this.onOpened = function() {
      var element5 = _this._popup;
      if (!element5) {
        return;
      }
      if (_this.props.show) {
        element5.classList.add(ANIMATION_CONTAINER_SHOWN);
      }
      _this.attachRepositionHandlers(element5);
      if (_this.props.onOpen) {
        _this.props.onOpen.call(void 0, { target: _this });
      }
    };
    _this.animate = function(element5, type, callback) {
      if (!_this.props.popupAlign) {
        return;
      }
      var animationDirection;
      var _a3 = _this.props.popupAlign, horizontal = _a3.horizontal, vertical = _a3.vertical;
      if (horizontal === "left" && vertical === "center") {
        animationDirection = "right";
      } else if (horizontal === "right" && vertical === "center") {
        animationDirection = "left";
      } else if (vertical === "top") {
        animationDirection = "down";
      } else {
        animationDirection = "up";
      }
      var flipPositions = {
        down: "up",
        up: "down",
        left: "right",
        right: "left"
      };
      if (_this._collisions && _this._collisions.flipped) {
        animationDirection = flipPositions[animationDirection];
      }
      slide(element5, animationDirection, _this.animationDuration[type], type, callback);
    };
    _this.onClosing = function(popup) {
      if (!_this.props.show) {
        popup.classList.remove(ANIMATION_CONTAINER_SHOWN);
      }
      _this.detachRepositionHandlers();
    };
    _this.onClosed = function() {
      if (_this.state.current === Status.hiding && _this.state.previous === Status.shown) {
        _this.setState({ current: Status.hidden, previous: _this.state.current });
      }
      if (_this.props.onClose) {
        _this.props.onClose.call(void 0, { target: _this });
      }
    };
    _this.getCurrentZIndex = function() {
      return _this.context ? _this.context + ZINDEX_POPUP_STEP : DEFAULT_POPUP_ZINDEX;
    };
    validatePackage2(packageMetadata3);
    _this.reposition = throttle(_this.reposition.bind(_this), FRAME_DURATION);
    return _this;
  }
  Object.defineProperty(PopupWithoutContext2.prototype, "element", {
    get: function() {
      return this._popup;
    },
    enumerable: false,
    configurable: true
  });
  PopupWithoutContext2.getDerivedStateFromProps = function(props, state) {
    var show = props.show, anchor = props.anchor, anchorAlign = props.anchorAlign, appendTo = props.appendTo, collision = props.collision, popupAlign = props.popupAlign, className = props.className, popupClass = props.popupClass, style = props.style, offset3 = props.offset, contentKey = props.contentKey;
    var nextState = __assign9(__assign9({}, state), { props: {
      show,
      anchor,
      anchorAlign,
      appendTo,
      collision,
      popupAlign,
      className,
      popupClass,
      style,
      offset: offset3,
      contentKey
    } });
    if (props.show) {
      if (state.current === Status.hidden || state.current === Status.hiding) {
        return __assign9(__assign9({}, nextState), { current: Status.showing, previous: state.current });
      }
      if (state.current === Status.showing) {
        return __assign9(__assign9({}, nextState), { current: Status.shown, previous: state.current });
      }
      if (state.current === Status.shown && (!isEquivalent(offset3, state.props.offset) || !isEquivalent(anchorAlign, state.props.anchorAlign) || !isEquivalent(appendTo, state.props.appendTo) || !isEquivalent(collision, state.props.collision) || !isEquivalent(popupAlign, state.props.popupAlign) || !isEquivalent(style, state.props.style) || anchor !== state.props.anchor || popupClass !== state.props.popupClass || className !== state.props.className)) {
        return __assign9(__assign9({}, nextState), { current: Status.reposition, previous: state.current });
      }
      return nextState;
    }
    if (state.current === Status.hiding || state.current === Status.hidden) {
      return __assign9(__assign9({}, nextState), { current: Status.hidden, previous: state.current });
    }
    return __assign9(__assign9({}, nextState), { current: Status.hiding, previous: state.current });
  };
  PopupWithoutContext2.prototype.componentDidUpdate = function(prevProps) {
    if (this.state.current === Status.showing && this._popup) {
      this.show(this._popup);
    } else if (this.state.current === Status.hiding && this._popup) {
      this.onClosing(this._popup);
      this.animate(this._popup.firstChild, "exit", this.onClosed);
    } else if (this.state.current === Status.reposition && this.state.previous === Status.shown) {
      this.setState({ current: Status.shown, previous: this.state.current });
    } else if (this.state.current === Status.shown && prevProps.contentKey !== this.props.contentKey && this._popup) {
      this.setPosition(this._popup);
    }
  };
  PopupWithoutContext2.prototype.componentDidMount = function() {
    if (this.state.current === Status.showing && this._popup) {
      this.show(this._popup);
    }
  };
  PopupWithoutContext2.prototype.componentWillUnmount = function() {
    this.detachRepositionHandlers();
  };
  PopupWithoutContext2.prototype.render = function() {
    var _this = this;
    var _a3 = this.props, children3 = _a3.children, className = _a3.className, popupClass = _a3.popupClass, show = _a3.show, id = _a3.id, positionMode = _a3.positionMode;
    var calculatedAppendTo = this.props.appendTo ? this.props.appendTo : canUseDOM ? this.props.anchor && this.props.anchor.ownerDocument ? this.props.anchor.ownerDocument.body : document.body : void 0;
    if (this.state.current === Status.reposition && this.state.previous === Status.shown && this._popup) {
      this.setPosition(this._popup);
    }
    var style = Object.assign({}, { position: positionMode, top: 0, left: -1e4 }, this.props.style || {});
    var closing = this.state.current === Status.hiding;
    if ((show || closing) && calculatedAppendTo) {
      var currentZIndex = this.getCurrentZIndex();
      var popupElement = React33.createElement(
        ZIndexContext.Provider,
        { value: currentZIndex },
        React33.createElement(
          "div",
          { className: classNames(ANIMATION_CONTAINER, ANIMATION_CONTAINER_RELATIVE, className), id, ref: function(e) {
            return _this._popup = e;
          }, style: __assign9({ zIndex: currentZIndex }, style) },
          React33.createElement("div", { className: classNames(K_POPUP, popupClass, ANIMATION_CONTAINER_CHILD), style: { transitionDelay: "0ms" } }, children3)
        )
      );
      return this.props.appendTo !== null ? ReactDOM.createPortal(popupElement, calculatedAppendTo) : popupElement;
    }
    return null;
  };
  Object.defineProperty(PopupWithoutContext2.prototype, "animationDuration", {
    get: function() {
      var animate = this.props.animate;
      var enter = 0;
      var exit = 0;
      if (animate) {
        if (animate === true) {
          enter = exit = 300;
        } else {
          enter = animate.openDuration || 0;
          exit = animate.closeDuration || 0;
        }
      }
      return { enter, exit };
    },
    enumerable: false,
    configurable: true
  });
  PopupWithoutContext2.prototype.attachRepositionHandlers = function(element5) {
    var _this = this;
    this.detachRepositionHandlers();
    this._scrollableParents = dom_utils_default.scrollableParents(this.props.anchor || element5);
    if (this._scrollableParents) {
      this._scrollableParents.map(function(p2) {
        return p2.addEventListener("scroll", _this.reposition);
      });
    }
    window.addEventListener("resize", this.reposition);
  };
  PopupWithoutContext2.prototype.detachRepositionHandlers = function() {
    var _this = this;
    if (this._scrollableParents) {
      this._scrollableParents.map(function(p2) {
        return p2.removeEventListener("scroll", _this.reposition);
      });
      this._scrollableParents = void 0;
    }
    window.removeEventListener("resize", this.reposition);
  };
  PopupWithoutContext2.prototype.reposition = function() {
    this.setState({ current: Status.reposition, previous: this.state.current });
  };
  PopupWithoutContext2.propTypes = {
    anchor: function(props) {
      var anchor = props.anchor;
      if (anchor && typeof anchor.nodeType !== "number") {
        return new Error("Invalid prop `anchor` supplied to `Kendo React Popup`. Validation failed.");
      }
      return null;
    },
    appendTo: function(props) {
      var element5 = props.appendTo;
      if (element5 && typeof element5.nodeType !== "number") {
        return new Error("Invalid prop `appendTo` supplied to `Kendo React Popup`. Validation failed.");
      }
      return null;
    },
    className: PropTypes10.oneOfType([
      PropTypes10.string,
      PropTypes10.arrayOf(PropTypes10.string),
      PropTypes10.object
    ]),
    id: PropTypes10.string,
    popupClass: PropTypes10.oneOfType([
      PropTypes10.string,
      PropTypes10.arrayOf(PropTypes10.string),
      PropTypes10.object
    ]),
    collision: PropTypes10.shape({
      horizontal: PropTypes10.oneOf([
        collision_default.fit,
        collision_default.flip,
        collision_default.none
      ]),
      vertical: PropTypes10.oneOf([
        collision_default.fit,
        collision_default.flip,
        collision_default.none
      ])
    }),
    anchorAlign: PropTypes10.shape({
      horizontal: PropTypes10.oneOf([
        align_point_default.left,
        align_point_default.center,
        align_point_default.right
      ]),
      vertical: PropTypes10.oneOf([
        align_point_default.top,
        align_point_default.center,
        align_point_default.bottom
      ])
    }),
    popupAlign: PropTypes10.shape({
      horizontal: PropTypes10.oneOf([
        align_point_default.left,
        align_point_default.center,
        align_point_default.right
      ]),
      vertical: PropTypes10.oneOf([
        align_point_default.top,
        align_point_default.center,
        align_point_default.bottom
      ])
    }),
    offset: PropTypes10.shape({
      left: PropTypes10.number,
      top: PropTypes10.number
    }),
    children: PropTypes10.oneOfType([
      PropTypes10.element,
      PropTypes10.node
    ]),
    show: PropTypes10.bool,
    animate: PropTypes10.oneOfType([
      PropTypes10.bool,
      PropTypes10.shape({
        openDuration: PropTypes10.number,
        closeDuration: PropTypes10.number
      })
    ]),
    margin: PropTypes10.shape({
      horizontal: PropTypes10.number,
      vertical: PropTypes10.number
    }),
    positionMode: PropTypes10.oneOf([
      "fixed",
      "absolute"
    ]),
    scale: PropTypes10.number,
    style: PropTypes10.object,
    onClose: PropTypes10.func,
    onPosition: PropTypes10.func,
    onOpen: PropTypes10.func
  };
  PopupWithoutContext2.defaultProps = {
    collision: {
      horizontal: collision_default.fit,
      vertical: collision_default.flip
    },
    anchorAlign: {
      horizontal: align_point_default.left,
      vertical: align_point_default.bottom
    },
    popupAlign: {
      horizontal: align_point_default.left,
      vertical: align_point_default.top
    },
    offset: DEFAULT_OFFSET,
    animate: true,
    show: false,
    margin: {
      horizontal: 0,
      vertical: 0
    },
    positionMode: "absolute"
  };
  PopupWithoutContext2.contextType = ZIndexContext;
  PopupWithoutContext2.displayName = "PopupComponent";
  return PopupWithoutContext2;
}(React33.Component);

// node_modules/@progress/kendo-react-popup/dist/es/Popup.js
var __assign10 = function() {
  __assign10 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign10.apply(this, arguments);
};
var PopupPropsContext = React34.createContext(function(props) {
  return props;
});
var Popup = React34.forwardRef(function(props, ref) {
  var contextPropsCallback = React34.useContext(PopupPropsContext);
  var popupProps = contextPropsCallback.call(void 0, props);
  return React34.createElement(PopupWithoutContext, __assign10({ ref }, popupProps));
});
Popup.displayName = "Popup";

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/ListContainer.js
var __extends5 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign11 = function() {
  __assign11 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign11.apply(this, arguments);
};
var ListContainer = function(_super) {
  __extends5(ListContainer2, _super);
  function ListContainer2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  ListContainer2.prototype.render = function() {
    var _a3 = this.props, children3 = _a3.children, width = _a3.width, dir = _a3.dir, itemsCount = _a3.itemsCount, popupSettings = _a3.popupSettings;
    return React35.createElement(Popup, __assign11({ style: { width, direction: dir }, contentKey: itemsCount && itemsCount.join() }, popupSettings), children3);
  };
  return ListContainer2;
}(React35.Component);
var ListContainer_default = ListContainer;

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/ListFilter.js
var React36 = __toESM(require_react());
var __extends6 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var sizeMap = kendoThemeMaps.sizeMap;
var roundedMap = kendoThemeMaps.roundedMap;
var ListFilter = function(_super) {
  __extends6(ListFilter2, _super);
  function ListFilter2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.input = null;
    return _this;
  }
  ListFilter2.prototype.render = function() {
    var _a3;
    var _this = this;
    var _b = this.props, size = _b.size, rounded = _b.rounded, fillMode = _b.fillMode, inputRef = _b.inputRef;
    return React36.createElement(
      "div",
      { className: "k-list-filter" },
      React36.createElement(
        "span",
        { className: classNames("k-searchbox k-input", (_a3 = {}, _a3["k-input-".concat(sizeMap[size] || size)] = size, _a3["k-rounded-".concat(roundedMap[rounded] || rounded)] = rounded, _a3["k-input-".concat(fillMode)] = fillMode, _a3)) },
        React36.createElement("span", { className: "k-input-icon k-icon k-i-search" }),
        React36.createElement("input", { ref: inputRef ? inputRef : function(input) {
          return _this.input = input;
        }, value: this.props.value || "", className: "k-input-inner", onChange: this.props.onChange, onKeyDown: this.props.onKeyDown, tabIndex: this.props.tabIndex, onClick: function(e) {
          return e.stopPropagation();
        } })
      )
    );
  };
  return ListFilter2;
}(React36.Component);
var ListFilter_default = ListFilter;

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/ListDefaultItem.js
var React37 = __toESM(require_react());

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/utils.js
var isPresent = function(value) {
  return value !== null && value !== void 0;
};
var sameCharsOnly = function(word, character) {
  for (var idx = 0; idx < word.length; idx++) {
    if (word.charAt(idx) !== character) {
      return false;
    }
  }
  return true;
};
var shuffleData = function(data, splitIndex, defaultItem) {
  var result = data;
  if (defaultItem) {
    result = [defaultItem].concat(result);
  }
  return result.slice(splitIndex).concat(result.slice(0, splitIndex));
};
var matchText = function(text, word, ignoreCase) {
  if (!isPresent(text)) {
    return false;
  }
  var temp = String(text);
  if (ignoreCase) {
    temp = temp.toLowerCase();
  }
  return temp.indexOf(word) === 0;
};
var scrollToItem = function(scrollElem, list, itemIndex, translate, virtualScroll) {
  var viewportHeight = scrollElem.offsetHeight;
  var li = list.children.item(itemIndex);
  var itemOffsetTop = li.offsetTop + (virtualScroll ? translate - scrollElem.scrollTop : 0);
  var itemHeight = li.offsetHeight;
  if (virtualScroll) {
    var diff = 0;
    if (itemOffsetTop + itemHeight > viewportHeight) {
      diff = itemOffsetTop + itemHeight - viewportHeight;
    } else if (itemOffsetTop < 0) {
      diff = itemOffsetTop;
    }
    if (diff !== 0) {
      scrollElem.scrollTop += diff;
    } else if (scrollElem.scrollTop === 0 && translate !== 0) {
      scrollElem.scrollTop = translate;
    }
  } else {
    if (itemOffsetTop + itemHeight > viewportHeight + scrollElem.scrollTop) {
      scrollElem.scrollTop = itemOffsetTop + itemHeight - viewportHeight;
    } else if (itemOffsetTop < scrollElem.scrollTop) {
      scrollElem.scrollTop -= scrollElem.scrollTop - itemOffsetTop;
    }
  }
};
var itemIndexStartsWith = function(items, text, field) {
  var result = -1;
  if (text) {
    text = text.toLowerCase();
    for (var i = 0; i < items.length; i++) {
      var itemText = (getItemValue(items[i], field) || "") + "";
      if (itemText && itemText.toLowerCase().startsWith(text)) {
        result = i;
        break;
      }
    }
  }
  return result;
};
var getItemIndexByText = function(data, text, textField, matchCase) {
  if (matchCase === void 0) {
    matchCase = false;
  }
  var casing = function(value) {
    return matchCase ? value : value.toLowerCase();
  };
  return data.findIndex(function(item) {
    return textField ? casing(getItemValue(item, textField)) === casing(text) : casing(text) === casing(item.toString());
  });
};
var getItemValue = function(item, field) {
  if (field && isPresent(item)) {
    var path = field.split(".");
    var data_1 = item;
    path.forEach(function(p2) {
      data_1 = data_1 ? data_1[p2] : void 0;
    });
    return data_1;
  }
  return item;
};
var matchDataCollections = function(data1, data2, key) {
  if (data1 === void 0) {
    data1 = [];
  }
  if (data2 === void 0) {
    data2 = [];
  }
  if (data1 === data2) {
    return true;
  }
  if (data1.length !== data2.length) {
    return false;
  }
  for (var i = 0; i < data1.length; i++) {
    if (!areSame(data1[i], data2[i], key)) {
      return false;
    }
  }
  return true;
};
var removeDataItems = function(items, toRemove, key) {
  toRemove.forEach(function(item) {
    var itemIndex = items.findIndex(function(i) {
      return areSame(i, item, key);
    });
    if (itemIndex !== -1) {
      items.splice(itemIndex, 1);
    }
  });
};
var areSame = function(item1, item2, key) {
  return item1 === item2 || isPresent(item1) === isPresent(item2) && getItemValue(item1, key) === getItemValue(item2, key);
};
var getFocusedItem = function(data, value, textField) {
  if (value) {
    var selectedIndex = getItemIndexByText(data, value, textField, true);
    return selectedIndex !== -1 ? data[selectedIndex] : data[itemIndexStartsWith(data, value, textField)];
  }
  return data[0];
};
var suggestValue = function(value, data, textField) {
  if (data === void 0) {
    data = [];
  }
  var suggested = "";
  if (value) {
    var suggestedItem = data[itemIndexStartsWith(data, value, textField)];
    if (suggestedItem) {
      var suggestedText = getItemValue(suggestedItem, textField);
      if (value.toLowerCase() !== suggestedText.toLowerCase()) {
        suggested = suggestedText.substring(value.length);
      }
    }
  }
  return suggested;
};
var preventDefaultNonInputs = function(event) {
  if (event.target.nodeName !== "INPUT") {
    event.preventDefault();
  }
};
var matchTags = function(tag1, tag2, key) {
  if (!!tag1 !== !!tag2 || tag1.text !== tag2.text) {
    return false;
  }
  return tag1 === tag2 || matchDataCollections(tag1.data, tag2.data, key);
};

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/ListDefaultItem.js
var __extends7 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var preventDefault = function(e) {
  return e.preventDefault();
};
var ListDefaultItem = function(_super) {
  __extends7(ListDefaultItem2, _super);
  function ListDefaultItem2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  ListDefaultItem2.prototype.render = function() {
    var _a3 = this.props, selected = _a3.selected, defaultItem = _a3.defaultItem, textField = _a3.textField;
    return React37.createElement("div", { onClick: this.props.onClick, onMouseDown: preventDefault, style: { position: "unset" }, className: classNames("k-list-optionlabel", {
      "k-selected": selected
    }) }, getItemValue(defaultItem, textField) || "");
  };
  return ListDefaultItem2;
}(React37.Component);
var ListDefaultItem_default = ListDefaultItem;

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/List.js
var React39 = __toESM(require_react());

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/ListItem.js
var React38 = __toESM(require_react());
var __extends8 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var ListItem = function(_super) {
  __extends8(ListItem2, _super);
  function ListItem2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.handleClick = function(e) {
      return _this.props.onClick(_this.props.index, e);
    };
    return _this;
  }
  ListItem2.prototype.render = function() {
    var _a3 = this.props, selected = _a3.selected, group = _a3.group, dataItem = _a3.dataItem, virtual = _a3.virtual, renderer = _a3.render;
    var item = React38.createElement(
      "li",
      { id: this.props.id, role: "option", "aria-selected": selected, className: classNames("k-list-item", {
        "k-selected": selected,
        "k-focus": this.props.focused,
        "k-first": Boolean(group)
      }), onClick: this.handleClick, style: { position: virtual ? "relative" : "unset" } },
      React38.createElement("span", { className: "k-list-item-text" }, getItemValue(dataItem, this.props.textField).toString()),
      group !== void 0 ? React38.createElement("div", { className: "k-list-item-group-label" }, group) : null
    );
    return renderer !== void 0 ? renderer.call(void 0, item, this.props) : item;
  };
  return ListItem2;
}(React38.Component);
var ListItem_default = ListItem;

// node_modules/@progress/kendo-react-dropdowns/dist/es/messages/index.js
var _a2;
var nodata = "dropdowns.nodata";
var clear = "dropdowns.clear";
var messages3 = (_a2 = {}, _a2[clear] = "clear", _a2[nodata] = "NO DATA FOUND.", _a2);

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/List.js
var __extends9 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var List = function(_super) {
  __extends9(List2, _super);
  function List2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  List2.prototype.renderItems = function() {
    var _this = this;
    var _a3 = this.props, textField = _a3.textField, valueField = _a3.valueField, groupField = _a3.groupField, optionsGuid = _a3.optionsGuid, _b = _a3.skip, skip = _b === void 0 ? 0 : _b, virtual = _a3.virtual, focusedIndex = _a3.focusedIndex, _c = _a3.highlightSelected, highlightSelected = _c === void 0 ? true : _c, value = _a3.value, data = _a3.data, itemRender = _a3.itemRender;
    var isArray2 = Array.isArray(value);
    return data.map(function(item, index) {
      var realIndex = skip + index;
      var selected = highlightSelected && (!isArray2 && areSame(item, value, valueField) || isArray2 && value.findIndex(function(i) {
        return areSame(i, item, valueField);
      }) !== -1);
      var group = void 0;
      var current, previous;
      if (index > 0 && groupField !== void 0) {
        current = getItemValue(item, groupField);
        previous = getItemValue(data[index - 1], groupField);
        if (current && previous && current !== previous) {
          group = current;
        }
      }
      return React39.createElement(ListItem_default, { id: "option-".concat(optionsGuid, "-").concat(realIndex), virtual, dataItem: item, selected, focused: focusedIndex === index, index: realIndex, key: realIndex, onClick: _this.props.onClick, textField, group, render: itemRender });
    });
  };
  List2.prototype.renderNoValueElement = function(localizationService) {
    var noDataRender = this.props.noDataRender;
    var noDataElement = React39.createElement(
      "div",
      { className: "k-nodata" },
      React39.createElement("div", null, localizationService.toLanguageString(nodata, messages3[nodata]))
    );
    return noDataRender ? noDataRender.call(void 0, noDataElement) : noDataElement;
  };
  List2.prototype.render = function() {
    var localizationService = provideLocalizationService(this);
    var _a3 = this.props, id = _a3.id, show = _a3.show, wrapperCssClass = _a3.wrapperCssClass, wrapperStyle = _a3.wrapperStyle, listStyle = _a3.listStyle, listRef = _a3.listRef, wrapperRef = _a3.wrapperRef, _b = _a3.listClassName, listClassName = _b === void 0 ? "k-list-ul" : _b;
    var items = this.renderItems();
    return items.length ? React39.createElement(
      "div",
      { className: wrapperCssClass, style: wrapperStyle, ref: wrapperRef, onMouseDown: this.props.onMouseDown, onBlur: this.props.onBlur, onScroll: this.props.onScroll, unselectable: "on" },
      React39.createElement("ul", { id, role: "listbox", "aria-hidden": !show ? true : void 0, className: listClassName, ref: listRef, style: listStyle }, items),
      this.props.scroller && React39.createElement("div", { className: "k-height-container" }, this.props.scroller)
    ) : this.renderNoValueElement(localizationService);
  };
  return List2;
}(React39.Component);
var List_default = List;
registerForLocalization(List);

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/DropDownBase.js
var React40 = __toESM(require_react());
var PropTypes11 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/VirtualScroll.js
var maxHeightIE = 1533915;
var VirtualScroll = function() {
  function VirtualScroll2() {
    var _this = this;
    this.container = null;
    this.scrollElement = null;
    this.list = null;
    this.containerHeight = 0;
    this.skip = 0;
    this.total = 0;
    this.enabled = false;
    this.pageSize = 0;
    this.itemHeight = 0;
    this.PageChange = null;
    this.prevScrollPos = 0;
    this.listTranslate = 0;
    this.scrollSyncing = false;
    this.scrollerRef = function(element5) {
      var vs = _this;
      vs.container = element5;
      if (element5) {
        element5.setAttribute("unselectable", "on");
        window.setTimeout(vs.calcScrollElementHeight.bind(vs), 0);
      }
    };
    this.calcScrollElementHeight = function() {
      _this.scrollSyncing = true;
      var heightChanged = false;
      _this.itemHeight = _this.list ? _this.list.children[0].offsetHeight : _this.itemHeight;
      _this.containerHeight = Math.min(maxHeightIE, _this.itemHeight * _this.total);
      var newHeight = _this.containerHeight;
      if (_this.scrollElement) {
        heightChanged = _this.scrollElement.style.height !== newHeight + "px";
        if (heightChanged) {
          _this.scrollElement.style.height = newHeight + "px";
        }
      }
      _this.scrollSyncing = false;
      return heightChanged;
    };
    this.scrollHandler = this.scrollHandler.bind(this);
  }
  Object.defineProperty(VirtualScroll2.prototype, "translate", {
    get: function() {
      return this.listTranslate;
    },
    enumerable: false,
    configurable: true
  });
  VirtualScroll2.prototype.changePage = function(skip, e) {
    var newSkip = Math.min(Math.max(0, skip), this.total - this.pageSize);
    if (newSkip !== this.skip && this.PageChange) {
      this.PageChange({ skip: newSkip, take: this.pageSize }, e);
    }
  };
  VirtualScroll2.prototype.translateTo = function(dY) {
    this.listTranslate = dY;
    if (this.list) {
      this.list.style.transform = "translateY(" + dY + "px)";
    }
  };
  VirtualScroll2.prototype.reset = function() {
    if (this.container) {
      this.calcScrollElementHeight();
      this.container.scrollTop = 0;
      this.translateTo(0);
    }
  };
  VirtualScroll2.prototype.scrollToEnd = function() {
    if (this.container && this.list) {
      this.calcScrollElementHeight();
      this.container.scrollTop = this.container.scrollHeight - this.container.offsetHeight;
      this.translateTo(this.container.scrollHeight);
    }
  };
  VirtualScroll2.prototype.localScrollUp = function(e) {
    var height = this.itemHeight;
    var scrollTop = this.container.scrollTop;
    var targetTranslate = this.listTranslate;
    var items;
    var additionalOnTop = scrollTop - targetTranslate;
    if (additionalOnTop > height) {
      return;
    }
    for (items = 0; items < this.skip; items++) {
      if (targetTranslate + height + additionalOnTop <= scrollTop) {
        break;
      }
      targetTranslate -= height;
    }
    targetTranslate = this.validateTranslate(targetTranslate);
    if (this.skip - items <= 0 && targetTranslate >= scrollTop) {
      this.translateTo(0);
      this.changePage(0, e);
      this.container.scrollTop = 0;
      return;
    }
    if (targetTranslate !== this.listTranslate) {
      this.translateTo(targetTranslate);
      this.changePage(this.skip - items, e);
    }
  };
  VirtualScroll2.prototype.localScrollDown = function(e) {
    var height = this.itemHeight;
    var scrollTop = this.container.scrollTop;
    var targetTranslate = this.listTranslate;
    var itemsLenght = this.list.children.length;
    var items;
    for (items = 0; items < itemsLenght; items++) {
      if (targetTranslate + height >= scrollTop) {
        break;
      }
      targetTranslate += height;
    }
    targetTranslate = this.validateTranslate(targetTranslate);
    if (items >= itemsLenght && this.skip + items >= this.total) {
      this.translateTo(targetTranslate);
      this.changePage(this.total - 1, e);
    } else if (targetTranslate !== this.listTranslate) {
      this.translateTo(targetTranslate);
      this.changePage(this.skip + items, e);
    }
  };
  VirtualScroll2.prototype.scrollNonStrict = function(e) {
    var floatItemIndex = this.total * this.prevScrollPos / this.containerHeight;
    var itemIndex = Math.min(Math.floor(floatItemIndex), this.total - 1);
    var targetTranslate = this.containerHeight * floatItemIndex / this.total;
    targetTranslate = this.validateTranslate(targetTranslate);
    this.translateTo(targetTranslate);
    this.changePage(itemIndex, e);
  };
  VirtualScroll2.prototype.scrollHandler = function(e) {
    var scrollTop = this.container ? this.container.scrollTop : 0;
    var prev = this.prevScrollPos;
    this.prevScrollPos = scrollTop;
    if (!this.enabled || !this.list || !this.container || this.scrollSyncing) {
      return;
    }
    if (scrollTop - prev <= 0 && scrollTop > this.listTranslate - this.list.scrollHeight / 10) {
      this.localScrollUp(e);
    } else if (scrollTop - prev > 0 && scrollTop < this.listTranslate + this.list.scrollHeight * 2 / 3) {
      this.localScrollDown(e);
    } else {
      this.scrollNonStrict(e);
    }
  };
  VirtualScroll2.prototype.validateTranslate = function(translate) {
    translate = Math.max(0, translate);
    translate = Math.min(this.containerHeight, translate);
    return translate;
  };
  return VirtualScroll2;
}();
var VirtualScroll_default = VirtualScroll;

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/Navigation.js
var Navigation = function() {
  function Navigation2() {
  }
  Navigation2.prototype.navigate = function(args) {
    var keyCode = args.keyCode;
    if (keyCode === Keys.up || keyCode === Keys.left) {
      return this.next({ current: args.current, min: args.min, max: args.max, step: -1 });
    } else if (keyCode === Keys.down || keyCode === Keys.right) {
      return this.next({ current: args.current, min: args.min, max: args.max, step: 1 });
    } else if (keyCode === Keys.home) {
      return 0;
    } else if (keyCode === Keys.end) {
      return args.max;
    }
  };
  Navigation2.prototype.next = function(args) {
    if (!isPresent(args.current)) {
      return args.min;
    } else {
      return Math.min(args.max, Math.max(args.current + args.step, args.min));
    }
  };
  return Navigation2;
}();

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/DropDownBase.js
var __assign12 = function() {
  __assign12 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign12.apply(this, arguments);
};
var DropDownBase = function() {
  function DropDownBase2(component) {
    var _this = this;
    this.wrapper = null;
    this.list = null;
    this.vs = new VirtualScroll_default();
    this.navigation = new Navigation();
    this.handleItemClick = function(index, event) {
      var state = _this.initState();
      state.syntheticEvent = event;
      event.stopPropagation();
      _this.component.handleItemSelect(index, state);
      _this.togglePopup(state);
      _this.applyState(state);
    };
    this.handleFocus = function(event) {
      if (!_this.component.state.focused) {
        var state = _this.initState();
        state.data.focused = true;
        state.events.push({ type: "onFocus" });
        state.syntheticEvent = event;
        _this.applyState(state);
      }
    };
    this.filterChanged = function(text, state) {
      var _a3 = _this.component.props, textField = _a3.textField, filterable = _a3.filterable;
      if (filterable) {
        state.events.push({
          type: "onFilterChange",
          filter: {
            field: textField,
            operator: "contains",
            ignoreCase: true,
            value: text
          }
        });
      }
    };
    this.togglePopup = function(state) {
      var props = _this.component.props;
      var opened = props.opened !== void 0 ? props.opened : _this.component.state.opened;
      if (props.opened === void 0) {
        state.data.opened = !opened;
      }
      if (opened) {
        state.events.push({ type: "onClose" });
      } else {
        state.events.push({ type: "onOpen" });
        _this.calculatePopupWidth();
      }
    };
    this.pageChange = function(page, syntheticEvent) {
      var state = _this.initState();
      state.syntheticEvent = syntheticEvent;
      _this.triggerOnPageChange(state, page.skip, page.take);
      _this.applyState(state);
    };
    this.scrollToVirtualItem = function(virtual, selectedItemIndex) {
      var vs = _this.vs;
      vs.enabled = false;
      if (virtual.skip === 0) {
        vs.reset();
      } else if (virtual.skip + virtual.pageSize === virtual.total) {
        vs.scrollToEnd();
      } else {
        var scrollTop = vs.translate;
        if (scrollTop === 0) {
          vs.calcScrollElementHeight();
          scrollTop = vs.itemHeight * virtual.skip;
          vs.translateTo(scrollTop - vs.itemHeight);
        }
        if (vs.container) {
          vs.container.scrollTop = scrollTop;
        }
        _this.scrollToItem(selectedItemIndex, true);
      }
      window.setTimeout(function() {
        return vs.enabled = true;
      }, 10);
    };
    this.renderScrollElement = function() {
      var vs = _this.vs;
      return vs.enabled && React40.createElement("div", { ref: function(element5) {
        return vs.scrollElement = element5;
      }, key: "scrollElementKey" });
    };
    this.listBoxId = guid();
    this.guid = guid();
    this.component = component;
    this.vs.PageChange = this.pageChange;
  }
  DropDownBase2.prototype.didMount = function() {
    var props = this.component.props;
    var popupSettings = props.popupSettings || {};
    var style = props.style || {};
    var popupWidth = popupSettings.width;
    var shouldUpdate = props.opened === true;
    if (popupWidth === void 0) {
      this.calculatePopupWidth();
    }
    if (props.dir === void 0 && style.direction === void 0) {
      this.calculateDir();
      shouldUpdate = true;
    }
    if (shouldUpdate) {
      this.component.forceUpdate();
    }
  };
  DropDownBase2.prototype.calculateDir = function() {
    var element5 = this.component.element;
    if (element5 && element5.ownerDocument && element5.ownerDocument.defaultView) {
      this.dirCalculated = element5.ownerDocument.defaultView.getComputedStyle(element5).direction || void 0;
    }
  };
  DropDownBase2.prototype.calculatePopupWidth = function() {
    if (this.wrapper) {
      this.popupWidth = this.wrapper.offsetWidth + "px";
    }
  };
  DropDownBase2.prototype.scrollToItem = function(itemIndex, vsEnabled) {
    var list = this.list || this.vs.list;
    if (list && itemIndex >= 0) {
      var vs = this.vs;
      var scrollElement = vs.container || list.parentNode;
      var virtualScroll = vsEnabled !== void 0 ? vsEnabled : vs.enabled;
      scrollToItem(scrollElement, list, itemIndex, vs.translate, virtualScroll);
    }
  };
  DropDownBase2.prototype.initState = function() {
    var state = {
      data: {},
      events: [],
      syntheticEvent: void 0
    };
    return state;
  };
  DropDownBase2.prototype.applyState = function(state) {
    var _this = this;
    if (Object.keys(state.data).length > 0) {
      this.component.setState(state.data);
    }
    var eventArgs = {
      syntheticEvent: state.syntheticEvent,
      nativeEvent: state.syntheticEvent ? state.syntheticEvent.nativeEvent : void 0,
      target: this.component,
      value: this.component.value
    };
    state.events.forEach(function(eventData) {
      var type = eventData.type;
      delete eventData.type;
      var handler = type && _this.component.props[type];
      if (handler) {
        handler.call(void 0, __assign12(__assign12({}, eventArgs), eventData));
      }
    });
  };
  DropDownBase2.prototype.triggerOnPageChange = function(state, skip, take) {
    var virtual = this.component.props.virtual;
    if (virtual) {
      var newSkip = Math.min(Math.max(0, skip), Math.max(0, virtual.total - take));
      if (newSkip !== virtual.skip) {
        state.events.push({
          type: "onPageChange",
          page: { skip: newSkip, take }
        });
      }
    }
  };
  DropDownBase2.prototype.triggerPageChangeCornerItems = function(item, state) {
    var props = this.component.props;
    var _a3 = props.data, data = _a3 === void 0 ? [] : _a3, dataItemKey = props.dataItemKey, virtual = props.virtual;
    var opened = props.opened !== void 0 ? props.opened : this.component.state.opened;
    if (item && virtual && this.vs.enabled) {
      if (virtual.skip > 0 && areSame(item, data[0], dataItemKey)) {
        this.triggerOnPageChange(state, virtual.skip - 1, virtual.pageSize);
      } else if (!opened && virtual.skip + virtual.pageSize < virtual.total && areSame(item, data[data.length - 1], dataItemKey)) {
        this.triggerOnPageChange(state, virtual.skip + 1, virtual.pageSize);
      }
    }
  };
  DropDownBase2.prototype.getPopupSettings = function() {
    return Object.assign({}, DropDownBase2.defaultProps.popupSettings, this.component.props.popupSettings);
  };
  DropDownBase2.basicPropTypes = {
    opened: PropTypes11.bool,
    disabled: PropTypes11.bool,
    dir: PropTypes11.string,
    tabIndex: PropTypes11.number,
    accessKey: PropTypes11.string,
    data: PropTypes11.array,
    textField: PropTypes11.string,
    className: PropTypes11.string,
    label: PropTypes11.string,
    loading: PropTypes11.bool,
    popupSettings: PropTypes11.shape({
      animate: PropTypes11.oneOfType([PropTypes11.bool, PropTypes11.shape({
        openDuration: PropTypes11.number,
        closeDuration: PropTypes11.number
      })]),
      popupClass: PropTypes11.string,
      className: PropTypes11.string,
      appendTo: PropTypes11.any,
      width: PropTypes11.oneOfType([PropTypes11.string, PropTypes11.number]),
      height: PropTypes11.oneOfType([PropTypes11.string, PropTypes11.number])
    }),
    onOpen: PropTypes11.func,
    onClose: PropTypes11.func,
    onFocus: PropTypes11.func,
    onBlur: PropTypes11.func,
    onChange: PropTypes11.func,
    itemRender: PropTypes11.func,
    listNoDataRender: PropTypes11.func,
    focusedItemIndex: PropTypes11.func,
    header: PropTypes11.node,
    footer: PropTypes11.node
  };
  DropDownBase2.propTypes = __assign12(__assign12({}, DropDownBase2.basicPropTypes), { value: PropTypes11.any, defaultValue: PropTypes11.any, filterable: PropTypes11.bool, filter: PropTypes11.string, virtual: PropTypes11.shape({
    pageSize: PropTypes11.number.isRequired,
    skip: PropTypes11.number.isRequired,
    total: PropTypes11.number.isRequired
  }), onFilterChange: PropTypes11.func, onPageChange: PropTypes11.func });
  DropDownBase2.defaultProps = {
    popupSettings: {
      height: "200px"
    },
    required: false,
    validityStyles: true
  };
  return DropDownBase2;
}();
var DropDownBase_default = DropDownBase;

// node_modules/@progress/kendo-react-dropdowns/dist/es/package-metadata.js
var packageMetadata4 = {
  name: "@progress/kendo-react-dropdowns",
  productName: "KendoReact",
  productCodes: ["KENDOUIREACT", "KENDOUICOMPLETE"],
  publishDate: 1666770752,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-react-ui/my-license/?utm_medium=product&utm_source=kendoreact&utm_campaign=kendo-ui-react-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-react-buttons/dist/es/Button.js
var React41 = __toESM(require_react());
var PropTypes12 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-buttons/dist/es/package-metadata.js
var packageMetadata5 = {
  name: "@progress/kendo-react-buttons",
  productName: "KendoReact",
  productCodes: ["KENDOUIREACT", "KENDOUICOMPLETE"],
  publishDate: 1666770563,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-react-ui/my-license/?utm_medium=product&utm_source=kendoreact&utm_campaign=kendo-ui-react-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-react-buttons/dist/es/Button.js
var __extends10 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign13 = function() {
  __assign13 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign13.apply(this, arguments);
};
var __rest4 = function(s, e) {
  var t = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e.indexOf(p2) < 0)
      t[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t[p2[i]] = s[p2[i]];
    }
  return t;
};
function iconElement(_a3) {
  var imageUrl = _a3.imageUrl, icon = _a3.icon, iconClass = _a3.iconClass, imageAlt = _a3.imageAlt;
  if (imageUrl) {
    return React41.createElement("img", { role: "presentation", className: "k-button-icon", alt: imageAlt, src: imageUrl });
  } else if (icon) {
    var iconClasses = classNames("k-button-icon k-icon", "k-i-" + icon);
    return React41.createElement("span", { role: "presentation", className: iconClasses });
  } else if (iconClass) {
    return React41.createElement("span", { role: "presentation", className: classNames("k-button-icon", iconClass) });
  }
  return null;
}
var Button = function(_super) {
  __extends10(Button2, _super);
  function Button2(props) {
    var _this = _super.call(this, props) || this;
    _this._element = null;
    _this.handleClick = function(event) {
      _this.toggleIfApplicable();
      if (_this.props.onClick) {
        _this.props.onClick.call(void 0, event);
      }
    };
    validatePackage2(packageMetadata5);
    _this.state = { selected: _this.props.togglable === true && _this.props.selected === true };
    return _this;
  }
  Object.defineProperty(Button2.prototype, "element", {
    get: function() {
      return this._element;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Button2.prototype, "selected", {
    get: function() {
      return this._selectedTemp !== void 0 ? this._selectedTemp : this.state.selected;
    },
    enumerable: false,
    configurable: true
  });
  Button2.getDerivedStateFromProps = function(props, state) {
    if (props.togglable && props.selected !== void 0 && props.selected !== state.selected) {
      return { selected: props.selected };
    }
    return null;
  };
  Button2.prototype.render = function() {
    var _a3;
    var _this = this;
    var _b = this.props, children3 = _b.children, togglable = _b.togglable, icon = _b.icon, iconClass = _b.iconClass, imageUrl = _b.imageUrl, imageAlt = _b.imageAlt, className = _b.className, onClick = _b.onClick, _c = _b.size, size = _c === void 0 ? Button2.defaultProps.size : _c, _d = _b.shape, shape8 = _d === void 0 ? Button2.defaultProps.shape : _d, _e = _b.rounded, rounded = _e === void 0 ? Button2.defaultProps.rounded : _e, _f = _b.fillMode, fillMode = _f === void 0 ? Button2.defaultProps.fillMode : _f, _g = _b.themeColor, themeColor = _g === void 0 ? Button2.defaultProps.themeColor : _g, htmlAttributes = __rest4(_b, ["children", "togglable", "icon", "iconClass", "imageUrl", "imageAlt", "className", "onClick", "size", "shape", "rounded", "fillMode", "themeColor"]);
    var hasIcon = icon !== void 0 || iconClass !== void 0 || imageUrl !== void 0;
    var hasChildren2 = children3 !== void 0;
    var iconEl = iconElement({
      icon,
      iconClass,
      imageUrl,
      imageAlt
    });
    return React41.createElement(
      "button",
      __assign13({ ref: function(button) {
        return _this._element = button;
      }, "aria-pressed": togglable ? this.state.selected : void 0 }, htmlAttributes, { onClick: this.handleClick, className: classNames("k-button", (_a3 = {}, _a3["k-button-".concat(kendoThemeMaps.sizeMap[size] || size)] = size, _a3["k-button-".concat(shape8)] = shape8, _a3["k-button-".concat(fillMode)] = fillMode, _a3["k-button-".concat(fillMode, "-").concat(themeColor)] = Boolean(fillMode && themeColor), _a3["k-rounded-".concat(kendoThemeMaps.roundedMap[rounded] || rounded)] = rounded, _a3["k-icon-button"] = !hasChildren2 && hasIcon, _a3["k-disabled"] = this.props.disabled, _a3["k-selected"] = this.state.selected, _a3["k-rtl"] = this.props.dir === "rtl", _a3), this.props.className) }),
      iconEl,
      children3 && React41.createElement("span", { className: "k-button-text" }, children3)
    );
  };
  Button2.prototype.toggleIfApplicable = function() {
    var _this = this;
    if (this.props.togglable && this.props.selected === void 0) {
      var selected = !this.state.selected;
      this._selectedTemp = selected;
      this.setState({ selected }, function() {
        return _this._selectedTemp = void 0;
      });
    }
  };
  Button2.propTypes = {
    children: PropTypes12.node,
    selected: PropTypes12.bool,
    togglable: PropTypes12.bool,
    icon: PropTypes12.string,
    iconClass: PropTypes12.string,
    imageUrl: PropTypes12.string,
    imageAlt: PropTypes12.string,
    size: PropTypes12.oneOf([null, "small", "medium", "large"]),
    shape: PropTypes12.oneOf([null, "rectangle", "square"]),
    rounded: PropTypes12.oneOf([null, "small", "medium", "large", "full"]),
    fillMode: PropTypes12.oneOf([null, "flat", "link", "outline", "solid"]),
    themeColor: PropTypes12.oneOf([null, "base", "primary", "secondary", "tertiary", "info", "success", "warning", "error", "dark", "light", "inverse"])
  };
  Button2.defaultProps = {
    togglable: false,
    size: "medium",
    shape: null,
    rounded: "medium",
    fillMode: "solid",
    themeColor: "base"
  };
  return Button2;
}(React41.Component);

// node_modules/@progress/kendo-react-buttons/dist/es/ButtonGroup.js
var React42 = __toESM(require_react());
var PropTypes13 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-buttons/dist/es/util.js
var styles = {
  button: "k-button",
  "flat": "k-flat",
  "outline": "k-outline",
  "clear": "k-button-clear",
  "primary": "k-primary",
  "state-selected": "k-selected",
  "button-icon": "k-button-icon",
  "button-icontext": "k-button-icontext",
  "state-disabled": "k-disabled",
  "group-start": "k-group-start",
  "group-end": "k-group-end",
  "button-group": "k-button-group",
  "button-group-stretched": "k-button-group-stretched",
  "ltr": "k-ltr",
  "rtl": "k-rtl"
};
var noInnerButton = ":not(.k-dropdownlist button):not(.k-colorpicker button):not(.k-split-button .k-split-button-arrow)";
var toolbarButtons = [
  "button" + noInnerButton,
  ".k-button-group > button" + noInnerButton,
  ".k-dropdownlist",
  ".k-colorpicker"
];
var util_default = {
  styles
};

// node_modules/@progress/kendo-react-buttons/dist/es/ButtonGroup.js
var __extends11 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign14 = function() {
  __assign14 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign14.apply(this, arguments);
};
var styles2 = util_default.styles;
var ButtonGroup = function(_super) {
  __extends11(ButtonGroup2, _super);
  function ButtonGroup2(props) {
    var _this = _super.call(this, props) || this;
    _this._element = null;
    validatePackage2(packageMetadata5);
    return _this;
  }
  ButtonGroup2.prototype.render = function() {
    var _a3;
    var _this = this;
    var buttons = this.mapButtons(this.props.children);
    var groupClasses = classNames([styles2["button-group"]], (_a3 = {}, _a3["k-disabled"] = this.props.disabled, _a3[styles2["button-group-stretched"]] = !!this.props.width, _a3), this.props.className);
    var groupProps = {
      className: groupClasses,
      style: { "width": "".concat(this.props.width) },
      dir: this.props.dir,
      role: "group",
      "aria-disabled": this.props.disabled
    };
    return React42.createElement("div", __assign14({ ref: function(div) {
      _this._element = div;
    } }, groupProps, { className: groupClasses }), buttons);
  };
  ButtonGroup2.prototype.mapButtons = function(children3) {
    var _this = this;
    var count = React42.Children.count(children3);
    var rtl = this.props.dir !== void 0 ? this.props.dir === "rtl" : this._element && getComputedStyle(this._element).direction === "rtl" || false;
    return React42.Children.map(children3, function(child, index) {
      if (React42.isValidElement(child)) {
        return _this.renderButton(child, index, index === count - 1, rtl);
      }
      return child;
    });
  };
  ButtonGroup2.prototype.renderButton = function(child, index, isLast, isRtl) {
    var _a3;
    var className = classNames(child.props.className, (_a3 = {}, _a3[styles2["group-start"]] = isRtl ? isLast : index === 0, _a3[styles2["group-end"]] = isRtl ? index === 0 : isLast, _a3));
    var style = __assign14(__assign14({}, this.props.width ? { width: this.props.width } : {}), child.props.style || {});
    var disabled = this.props.disabled || child.props.disabled;
    var buttonProps = __assign14(__assign14(__assign14(__assign14({}, child.props), className ? { className } : {}), Object.keys(style).length ? { style } : {}), disabled !== void 0 ? { disabled } : {});
    return React42.Children.count(child.props.children) > 0 ? React42.cloneElement(child, buttonProps, child.props.children) : React42.cloneElement(child, buttonProps);
  };
  ButtonGroup2.propTypes = {
    children: PropTypes13.oneOfType([PropTypes13.arrayOf(PropTypes13.element), PropTypes13.element]),
    className: PropTypes13.string,
    disabled: PropTypes13.bool,
    width: PropTypes13.string,
    dir: PropTypes13.string
  };
  return ButtonGroup2;
}(React42.Component);

// node_modules/@progress/kendo-react-buttons/dist/es/ListButton/SplitButton.js
var React45 = __toESM(require_react());
var PropTypes15 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-buttons/dist/es/ListButton/ButtonItem.js
var React43 = __toESM(require_react());
var ButtonItem = function(props) {
  var _a3;
  var handleClick = React43.useCallback(function(event) {
    props.onClick(event, props.index);
  }, [props]);
  var As = props.dataItem.render || props.item || (props.item === void 0 ? props.render : null);
  var text = props.dataItem.text !== void 0 ? props.dataItem.text : props.textField ? props.dataItem[props.textField] : props.dataItem;
  var item = React43.createElement("li", { id: props.id, className: classNames("k-item", props.className, { "k-focus": props.focused }), tabIndex: -1, onClick: handleClick, onMouseDown: props.onDown, onPointerDown: props.onDown, role: "menuitem", "aria-disabled": props.dataItem.disabled || void 0 }, React43.createElement("span", { tabIndex: -1, className: classNames("k-link k-menu-link", {
    "k-selected": props.dataItem.selected,
    "k-disabled": props.dataItem.disabled
  }), key: "icon" }, As ? React43.createElement(As, { item: props.dataItem, itemIndex: props.index }) : React43.createElement(
    React43.Fragment,
    null,
    (props.dataItem.icon || props.dataItem.iconClass) && React43.createElement("span", { className: classNames("k-icon", (_a3 = {}, _a3["k-i-".concat(props.dataItem.icon)] = props.dataItem.icon, _a3["".concat(props.dataItem.iconClass)] = props.dataItem.iconClass, _a3)) }),
    props.dataItem.imageUrl && React43.createElement("img", { role: "presentation", alt: "", src: props.dataItem.imageUrl, className: "k-icon" }),
    text && React43.createElement("span", { className: "k-menu-link-text" }, text)
  )));
  return props.item !== void 0 && props.render !== void 0 ? props.render.call(void 0, item, props) : item;
};
ButtonItem.displayName = "KendoReactButtonItem";

// node_modules/@progress/kendo-react-buttons/dist/es/ListButton/SplitButtonItem.js
var React44 = __toESM(require_react());
var PropTypes14 = __toESM(require_prop_types());
var __extends12 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var SplitButtonItem = function(_super) {
  __extends12(SplitButtonItem2, _super);
  function SplitButtonItem2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  SplitButtonItem2.prototype.render = function() {
    return null;
  };
  SplitButtonItem2.propTypes = {
    text: PropTypes14.string,
    icon: PropTypes14.string,
    iconClass: PropTypes14.string,
    imageUrl: PropTypes14.string,
    disabled: PropTypes14.bool,
    render: PropTypes14.any
  };
  return SplitButtonItem2;
}(React44.Component);

// node_modules/@progress/kendo-react-buttons/dist/es/ListButton/utils/navigation.js
var navigate = function(focusedIndex, keyCode, altKey, total) {
  if (altKey) {
    return focusedIndex;
  }
  var index = Math.min(total - 1, Math.max(0, focusedIndex));
  switch (keyCode) {
    case Keys.enter:
    case Keys.space:
    case Keys.esc:
      return -1;
    case Keys.up:
    case Keys.left:
      return index - 1 < 0 ? total - 1 : index - 1;
    case Keys.down:
    case Keys.right:
      return index + 1 >= total ? 0 : index + 1;
    case Keys.home:
      return 0;
    case Keys.end:
      return total - 1;
    default:
      return focusedIndex;
  }
};

// node_modules/@progress/kendo-react-buttons/dist/es/ListButton/utils/popup.js
function getAnchorAlign(isDirectionRightToLeft) {
  var align2 = { horizontal: "left", vertical: "bottom" };
  if (isDirectionRightToLeft) {
    align2.horizontal = "right";
  }
  return align2;
}
function getPopupAlign(isDirectionRightToLeft) {
  var align2 = { horizontal: "left", vertical: "top" };
  if (isDirectionRightToLeft) {
    align2.horizontal = "right";
  }
  return align2;
}

// node_modules/@progress/kendo-react-buttons/dist/es/ListButton/SplitButton.js
var __extends13 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var SplitButton = function(_super) {
  __extends13(SplitButton2, _super);
  function SplitButton2(props) {
    var _this = _super.call(this, props) || this;
    _this.state = {
      focused: false,
      focusedIndex: -1,
      opened: false
    };
    _this.wrapper = null;
    _this.mainButton = null;
    _this.list = null;
    _this.guid = guid();
    _this.skipFocus = false;
    _this.buttonsData = [];
    _this.onKeyDown = function(event) {
      var focusedIndex = _this.state.focusedIndex;
      if (event.altKey) {
        if (!_this.opened && event.keyCode === Keys.down) {
          _this.dispatchPopupEvent(event, true);
          _this.setState({ focusedIndex: 0, opened: true });
        } else if (_this.opened && event.keyCode === Keys.up) {
          _this.dispatchPopupEvent(event, false);
          _this.setState({ focusedIndex: -1, opened: false });
        }
        return;
      }
      var newState = void 0;
      if (event.keyCode === Keys.enter || event.keyCode === Keys.space) {
        event.preventDefault();
        _this.dispatchClickEvent(event, focusedIndex);
        if (focusedIndex >= 0) {
          newState = {
            focusedIndex: _this.opened ? -1 : 0,
            opened: !_this.opened
          };
          _this.dispatchPopupEvent(event, newState.opened);
        }
      } else if (_this.opened && event.keyCode === Keys.esc) {
        newState = {
          focusedIndex: -1,
          opened: false
        };
        _this.dispatchPopupEvent(event, newState.opened);
      }
      if (_this.opened) {
        var newFocused = navigate(focusedIndex, event.keyCode, event.altKey, _this.buttonsData.length);
        if (newFocused !== focusedIndex) {
          newState = newState || {};
          newState.focusedIndex = newFocused;
        }
        var arrowKey = event.keyCode === Keys.up || event.keyCode === Keys.down || event.keyCode === Keys.left || event.keyCode === Keys.right;
        if (!event.altKey && (arrowKey || event.keyCode === Keys.home || event.keyCode === Keys.end)) {
          event.preventDefault();
        }
      }
      if (newState) {
        _this.setState(newState);
      }
    };
    _this.switchFocus = function(focusFn) {
      _this.skipFocus = true;
      focusFn();
      window.setTimeout(function() {
        return _this.skipFocus = false;
      }, 0);
    };
    _this.onFocus = function(event) {
      if (_this.skipFocus) {
        return;
      }
      dispatchEvent(_this.props.onFocus, event, _this, void 0);
      _this.setState({ focused: true });
    };
    _this.onItemClick = function(event, clickedItemIndex) {
      var opened = _this.opened;
      if (opened) {
        _this.setState({ focusedIndex: 0, opened: false });
      }
      _this.dispatchClickEvent(event, clickedItemIndex);
      if (opened) {
        _this.dispatchPopupEvent(event, false);
      }
    };
    _this.onBlur = function(event) {
      if (_this.skipFocus) {
        return;
      }
      _this.setState({
        focused: false,
        focusedIndex: -1,
        opened: false
      });
      dispatchEvent(_this.props.onBlur, event, _this, void 0);
      if (_this.opened) {
        _this.dispatchPopupEvent(event, false);
      }
    };
    _this.onPopupClose = function() {
      if (_this.state.focused) {
        _this.switchFocus(function() {
          if (_this.element) {
            _this.element.removeAttribute("tabindex");
            _this.element.focus({ preventScroll: true });
          }
        });
      }
    };
    _this.listRef = function(list) {
      _this.list = list;
      if (list && _this.state.focused) {
        _this.switchFocus(function() {
          list.focus({ preventScroll: true });
          if (_this.element) {
            _this.element.tabIndex = -1;
          }
        });
      }
    };
    _this.onSplitPartClick = function(event) {
      if (_this.buttonsData.length) {
        var toOpen = !_this.opened;
        _this.dispatchPopupEvent(event, toOpen);
        _this.setState({
          focusedIndex: toOpen ? 0 : -1,
          opened: toOpen,
          focused: true
        });
      }
    };
    _this.onDownSplitPart = function(event) {
      event.preventDefault();
      if (_this.element && document.activeElement !== _this.element && document.activeElement !== _this.list) {
        _this.element.focus();
      }
    };
    _this.onItemDown = function(event) {
      if (document.activeElement === _this.list) {
        event.preventDefault();
      }
    };
    _this.dispatchPopupEvent = function(dispatchedEvent, open) {
      dispatchEvent(open ? _this.props.onOpen : _this.props.onClose, dispatchedEvent, _this, void 0);
    };
    validatePackage2(packageMetadata5);
    return _this;
  }
  Object.defineProperty(SplitButton2.prototype, "opened", {
    get: function() {
      return this.props.opened === void 0 ? this.state.opened : this.props.opened;
    },
    enumerable: false,
    configurable: true
  });
  SplitButton2.prototype.render = function() {
    var _this = this;
    this.buttonsData = this.props.items || React45.Children.toArray(this.props.children).filter(function(child) {
      return child && child.type === SplitButtonItem;
    }).map(function(child) {
      return child.props;
    });
    var rtl = this.isRtl();
    var dir = rtl ? "rtl" : void 0;
    var _a3 = this.props, id = _a3.id, style = _a3.style, tabIndex = _a3.tabIndex, disabled = _a3.disabled;
    return React45.createElement(
      "div",
      { id, style, className: classNames("k-split-button", "k-button-group", {
        "k-focus": this.state.focused
      }, "k-rounded-".concat(kendoThemeMaps.roundedMap[this.props.rounded || "medium"]), this.props.className), onKeyDown: this.onKeyDown, onFocus: this.onFocus, onBlur: this.onBlur, dir, ref: function(el) {
        return _this.wrapper = el;
      } },
      React45.createElement(Button, { ref: function(el) {
        return _this.mainButton = el && el.element;
      }, type: "button", size: this.props.size, rounded: this.props.rounded, fillMode: this.props.fillMode, themeColor: this.props.themeColor, onClick: function(event) {
        return _this.onItemClick(event, -1);
      }, disabled: disabled || void 0, tabIndex, accessKey: this.props.accessKey, className: this.props.buttonClass, icon: this.props.icon, iconClass: this.props.iconClass, imageUrl: this.props.imageUrl, dir, "aria-disabled": disabled, "aria-haspopup": true, "aria-expanded": this.opened || void 0, "aria-label": this.props.ariaLabel, "aria-controls": this.opened ? this.guid : void 0, id: "button-" + this.guid, title: this.props.title }, this.props.text),
      React45.createElement(Button, { type: "button", size: this.props.size, rounded: this.props.rounded, fillMode: this.props.fillMode, themeColor: this.props.themeColor, icon: "caret-alt-down", className: "k-split-button-arrow", disabled: disabled || void 0, tabIndex: -1, onClick: this.onSplitPartClick, onMouseDown: this.onDownSplitPart, onPointerDown: this.onDownSplitPart, dir, "aria-label": "menu toggling button" }),
      this.renderPopup(rtl)
    );
  };
  SplitButton2.prototype.componentDidMount = function() {
    if (this.props.dir === void 0 && this.isRtl() || this.opened) {
      this.forceUpdate();
    }
  };
  Object.defineProperty(SplitButton2.prototype, "element", {
    get: function() {
      return this.mainButton;
    },
    enumerable: false,
    configurable: true
  });
  SplitButton2.prototype.dispatchClickEvent = function(dispatchedEvent, clickedItemIndex) {
    if (!this.isItemDisabled(clickedItemIndex)) {
      if (clickedItemIndex === -1) {
        dispatchEvent(this.props.onButtonClick, dispatchedEvent, this, void 0);
      } else {
        dispatchEvent(this.props.onItemClick, dispatchedEvent, this, {
          item: this.buttonsData[clickedItemIndex],
          itemIndex: clickedItemIndex
        });
      }
    }
  };
  SplitButton2.prototype.renderPopup = function(rtl) {
    var _a3;
    var _b = this.props.popupSettings, popupSettings = _b === void 0 ? {} : _b;
    var focusedIndex = this.state.focusedIndex;
    return React45.createElement(
      Popup,
      { anchor: this.wrapper, show: this.opened, animate: popupSettings.animate, popupClass: classNames("k-menu-popup", popupSettings.popupClass), anchorAlign: popupSettings.anchorAlign || getAnchorAlign(rtl), popupAlign: popupSettings.popupAlign || getPopupAlign(rtl), style: rtl ? { direction: "rtl" } : void 0, onClose: this.onPopupClose },
      React45.createElement("ul", { role: "menu", id: this.guid, "aria-labelledby": "button-" + this.guid, tabIndex: -1, ref: this.listRef, "aria-activedescendant": focusedIndex >= 0 ? "".concat(this.guid, "-").concat(focusedIndex) : void 0, className: classNames("k-group k-menu-group k-reset", (_a3 = {}, _a3["k-menu-group-".concat(kendoThemeMaps.sizeMap[this.props.size] || this.props.size)] = this.props.size, _a3)) }, this.renderChildItems())
    );
  };
  SplitButton2.prototype.renderChildItems = function() {
    var _this = this;
    var _a3 = this.props, item = _a3.item, itemRender = _a3.itemRender, textField = _a3.textField;
    return this.buttonsData.length > 0 ? this.buttonsData.map(function(dataItem, index) {
      return React45.createElement(ButtonItem, { className: "k-menu-item", dataItem, textField, focused: _this.state.focusedIndex === index, onClick: _this.onItemClick, onDown: _this.onItemDown, render: itemRender, item, key: index, index, id: "".concat(_this.guid, "-").concat(index) });
    }) : null;
  };
  SplitButton2.prototype.isItemDisabled = function(index) {
    return this.buttonsData[index] ? this.buttonsData[index].disabled : this.props.disabled;
  };
  SplitButton2.prototype.isRtl = function() {
    return this.props.dir !== void 0 ? this.props.dir === "rtl" : !!this.wrapper && getComputedStyle(this.wrapper).direction === "rtl";
  };
  SplitButton2.propTypes = {
    accessKey: PropTypes15.string,
    ariaLabel: PropTypes15.string,
    title: PropTypes15.string,
    onButtonClick: PropTypes15.func,
    onFocus: PropTypes15.func,
    onBlur: PropTypes15.func,
    onItemClick: PropTypes15.func,
    onOpen: PropTypes15.func,
    onClose: PropTypes15.func,
    text: PropTypes15.string,
    items: PropTypes15.arrayOf(PropTypes15.any),
    textField: PropTypes15.string,
    tabIndex: PropTypes15.number,
    disabled: PropTypes15.bool,
    icon: PropTypes15.string,
    iconClass: PropTypes15.string,
    imageUrl: PropTypes15.string,
    popupSettings: PropTypes15.object,
    itemRender: PropTypes15.any,
    item: PropTypes15.func,
    className: PropTypes15.string,
    buttonClass: PropTypes15.string,
    dir: PropTypes15.string
  };
  SplitButton2.defaultProps = {
    size: "medium",
    rounded: "medium",
    shape: null,
    fillMode: "solid",
    themeColor: "base"
  };
  return SplitButton2;
}(React45.Component);

// node_modules/@progress/kendo-react-buttons/dist/es/ListButton/DropDownButton.js
var React47 = __toESM(require_react());
var PropTypes17 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-buttons/dist/es/ListButton/DropDownButtonItem.js
var React46 = __toESM(require_react());
var PropTypes16 = __toESM(require_prop_types());
var __extends14 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var DropDownButtonItem = function(_super) {
  __extends14(DropDownButtonItem2, _super);
  function DropDownButtonItem2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  DropDownButtonItem2.prototype.render = function() {
    return null;
  };
  DropDownButtonItem2.propTypes = {
    text: PropTypes16.string,
    icon: PropTypes16.string,
    iconClass: PropTypes16.string,
    imageUrl: PropTypes16.string,
    selected: PropTypes16.bool,
    disabled: PropTypes16.bool,
    render: PropTypes16.any
  };
  return DropDownButtonItem2;
}(React46.Component);

// node_modules/@progress/kendo-react-buttons/dist/es/ListButton/DropDownButton.js
var __extends15 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign15 = function() {
  __assign15 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign15.apply(this, arguments);
};
var DropDownButton = function(_super) {
  __extends15(DropDownButton2, _super);
  function DropDownButton2(props) {
    var _this = _super.call(this, props) || this;
    _this.state = {
      opened: false,
      focused: false,
      focusedIndex: -1
    };
    _this.wrapper = null;
    _this.mainButton = null;
    _this.list = null;
    _this.skipFocus = false;
    _this.guid = guid();
    _this.buttonsData = [];
    _this.onKeyDown = function(event) {
      var focusedIndex = _this.state.focusedIndex;
      if (event.altKey) {
        if (!_this.opened && event.keyCode === Keys.down) {
          _this.dispatchPopupEvent(event, true);
          _this.setState({ focusedIndex: 0, opened: true });
        } else if (_this.opened && event.keyCode === Keys.up) {
          _this.dispatchPopupEvent(event, false);
          _this.setState({ focusedIndex: -1, opened: false });
        }
        return;
      }
      var newState = __assign15({}, _this.state);
      if (event.keyCode === Keys.enter || event.keyCode === Keys.space) {
        if (focusedIndex >= 0) {
          _this.dispatchClickEvent(event, focusedIndex);
        }
        event.preventDefault();
        newState.focusedIndex = _this.opened ? -1 : 0, newState.opened = !_this.opened;
        _this.dispatchPopupEvent(event, newState.opened);
      } else if (_this.opened && event.keyCode === Keys.esc) {
        newState.focusedIndex = -1;
        newState.opened = false;
        _this.dispatchPopupEvent(event, newState.opened);
      }
      if (_this.opened) {
        var newFocused = navigate(focusedIndex, event.keyCode, event.altKey, _this.buttonsData.length);
        newState.focusedIndex = newFocused;
        var arrowKey = event.keyCode === Keys.up || event.keyCode === Keys.down || event.keyCode === Keys.left || event.keyCode === Keys.right;
        if (!event.altKey && (arrowKey || event.keyCode === Keys.home || event.keyCode === Keys.end)) {
          event.preventDefault();
        }
      }
      _this.setState(newState);
    };
    _this.switchFocus = function(focusFn) {
      _this.skipFocus = true;
      focusFn();
      window.setTimeout(function() {
        return _this.skipFocus = false;
      }, 0);
    };
    _this.handleFocus = function(event) {
      if (_this.skipFocus) {
        return;
      }
      _this.setState({ focused: true, focusedIndex: _this.opened ? 0 : -1 });
      dispatchEvent(_this.props.onFocus, event, _this, void 0);
    };
    _this.handleBlur = function(event) {
      if (_this.skipFocus) {
        return;
      }
      _this.setState({ focused: false, opened: false, focusedIndex: -1 });
      dispatchEvent(_this.props.onBlur, event, _this, void 0);
      var fireCloseEvent = _this.opened;
      if (fireCloseEvent) {
        _this.dispatchPopupEvent(event, false);
      }
    };
    _this.onItemClick = function(event, clickedItemIndex) {
      _this.setState({ focusedIndex: -1, opened: false });
      _this.dispatchClickEvent(event, clickedItemIndex);
      _this.dispatchPopupEvent(event, false);
    };
    _this.onItemDown = function(event) {
      if (document.activeElement === _this.list) {
        event.preventDefault();
      }
    };
    _this.mouseDown = function(event) {
      event.preventDefault();
      if (_this.element && document.activeElement !== _this.element && document.activeElement !== _this.list) {
        _this.element.focus();
      }
    };
    _this.onPopupClose = function() {
      if (_this.state.focused) {
        _this.switchFocus(function() {
          if (_this.element) {
            _this.element.removeAttribute("tabindex");
            _this.element.focus({ preventScroll: true });
          }
        });
      }
    };
    _this.listRef = function(list) {
      _this.list = list;
      if (list && _this.state.focused) {
        _this.switchFocus(function() {
          list.focus({ preventScroll: true });
          if (_this.element) {
            _this.element.tabIndex = -1;
          }
        });
      }
    };
    _this.onClickMainButton = function(event) {
      if (!_this.buttonsData.length) {
        return;
      }
      var toOpen = !_this.opened;
      _this.setState({
        opened: toOpen,
        focused: true,
        focusedIndex: toOpen ? 0 : -1
      });
      _this.dispatchPopupEvent(event, toOpen);
    };
    _this.dispatchPopupEvent = function(dispatchedEvent, open) {
      dispatchEvent(open ? _this.props.onOpen : _this.props.onClose, dispatchedEvent, _this, void 0);
    };
    validatePackage2(packageMetadata5);
    return _this;
  }
  Object.defineProperty(DropDownButton2.prototype, "opened", {
    get: function() {
      return this.props.opened === void 0 ? this.state.opened : this.props.opened;
    },
    enumerable: false,
    configurable: true
  });
  DropDownButton2.prototype.render = function() {
    var _this = this;
    var rtl = this.isRtl();
    var dir = rtl ? "rtl" : void 0;
    var _a3 = this.props, id = _a3.id, style = _a3.style, tabIndex = _a3.tabIndex, disabled = _a3.disabled;
    this.buttonsData = this.props.items || React47.Children.toArray(this.props.children).filter(function(child) {
      return child && child.type === DropDownButtonItem;
    }).map(function(child) {
      return child.props;
    });
    return React47.createElement(
      "div",
      { id, style, className: classNames("k-dropdown-button", {
        "k-focus": this.state.focused
      }, this.props.className), onKeyDown: this.onKeyDown, onFocus: this.handleFocus, onBlur: this.handleBlur, dir, ref: function(el) {
        return _this.wrapper = el;
      } },
      React47.createElement(Button, { size: this.props.size, shape: this.props.shape, rounded: this.props.rounded, fillMode: this.props.fillMode, themeColor: this.props.themeColor, onClick: this.onClickMainButton, onMouseDown: this.mouseDown, disabled: disabled || void 0, tabIndex, accessKey: this.props.accessKey, icon: this.props.icon, iconClass: this.props.iconClass, className: this.props.buttonClass, imageUrl: this.props.imageUrl, dir, ref: function(btn) {
        return _this.mainButton = btn && btn.element;
      }, type: "button", "aria-haspopup": true, "aria-expanded": this.opened || void 0, "aria-label": this.props.ariaLabel, "aria-controls": this.opened ? this.guid : void 0, id: "button-" + this.guid, title: this.props.title }, this.props.text),
      this.renderPopup(rtl)
    );
  };
  DropDownButton2.prototype.componentDidMount = function() {
    if (this.props.dir === void 0 && this.isRtl() || this.opened) {
      this.forceUpdate();
    }
  };
  Object.defineProperty(DropDownButton2.prototype, "element", {
    get: function() {
      return this.mainButton;
    },
    enumerable: false,
    configurable: true
  });
  DropDownButton2.prototype.dispatchClickEvent = function(dispatchedEvent, index) {
    if (!this.isItemDisabled(index)) {
      dispatchEvent(this.props.onItemClick, dispatchedEvent, this, {
        item: this.buttonsData[index],
        itemIndex: index
      });
    }
  };
  DropDownButton2.prototype.renderPopup = function(rtl) {
    var _a3;
    var _b = this.props.popupSettings, popupSettings = _b === void 0 ? {} : _b;
    var focusedIndex = this.state.focusedIndex;
    return React47.createElement(
      Popup,
      { anchor: this.wrapper, show: this.opened, animate: popupSettings.animate, popupClass: classNames("k-menu-popup", popupSettings.popupClass), anchorAlign: popupSettings.anchorAlign || getAnchorAlign(rtl), popupAlign: popupSettings.popupAlign || getPopupAlign(rtl), style: rtl ? { direction: "rtl" } : void 0, onClose: this.onPopupClose },
      React47.createElement("ul", { role: "menu", id: this.guid, "aria-labelledby": "button-" + this.guid, tabIndex: -1, "aria-activedescendant": focusedIndex >= 0 ? "".concat(this.guid, "-").concat(focusedIndex) : void 0, ref: this.listRef, className: classNames("k-group k-menu-group k-reset", (_a3 = {}, _a3["k-menu-group-".concat(kendoThemeMaps.sizeMap[this.props.size] || this.props.size)] = this.props.size, _a3)) }, this.renderChildItems())
    );
  };
  DropDownButton2.prototype.renderChildItems = function() {
    var _this = this;
    var _a3 = this.props, item = _a3.item, itemRender = _a3.itemRender, textField = _a3.textField;
    return this.buttonsData.length > 0 ? this.buttonsData.map(function(dataItem, index) {
      return React47.createElement(ButtonItem, { className: "k-menu-item", dataItem, textField, focused: _this.state.focusedIndex === index, onClick: _this.onItemClick, onDown: _this.onItemDown, render: itemRender, item, index, key: index, id: "".concat(_this.guid, "-").concat(index) });
    }) : null;
  };
  DropDownButton2.prototype.isItemDisabled = function(index) {
    return this.buttonsData[index] ? this.buttonsData[index].disabled : this.props.disabled;
  };
  DropDownButton2.prototype.isRtl = function() {
    return this.props.dir !== void 0 ? this.props.dir === "rtl" : !!this.wrapper && getComputedStyle(this.wrapper).direction === "rtl";
  };
  DropDownButton2.propTypes = {
    accessKey: PropTypes17.string,
    ariaLabel: PropTypes17.string,
    title: PropTypes17.string,
    onFocus: PropTypes17.func,
    onBlur: PropTypes17.func,
    onItemClick: PropTypes17.func,
    onOpen: PropTypes17.func,
    onClose: PropTypes17.func,
    items: PropTypes17.arrayOf(PropTypes17.any),
    textField: PropTypes17.string,
    tabIndex: PropTypes17.number,
    disabled: PropTypes17.bool,
    icon: PropTypes17.string,
    iconClass: PropTypes17.string,
    imageUrl: PropTypes17.string,
    popupSettings: PropTypes17.object,
    itemRender: PropTypes17.func,
    item: PropTypes17.func,
    className: PropTypes17.string,
    buttonClass: PropTypes17.string,
    dir: PropTypes17.string
  };
  DropDownButton2.defaultProps = {
    size: "medium",
    rounded: "medium",
    shape: null,
    fillMode: "solid",
    themeColor: "base"
  };
  return DropDownButton2;
}(React47.Component);

// node_modules/@progress/kendo-react-buttons/dist/es/toolbar/Toolbar.js
var React48 = __toESM(require_react());
var PropTypes18 = __toESM(require_prop_types());
var __extends16 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign16 = function() {
  __assign16 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign16.apply(this, arguments);
};
var Toolbar = function(_super) {
  __extends16(Toolbar2, _super);
  function Toolbar2(props) {
    var _this = _super.call(this, props) || this;
    _this._element = null;
    _this.offsetHeight = 0;
    _this.offsetWidth = 0;
    _this.buttons = [];
    _this.focusedSelector = _this.selectors.map(function(s) {
      return s + ":focus";
    }).join(",");
    _this.setTabIndex = function(focusedIndex) {
      var _a3 = _this.props.tabIndex, tabIndex = _a3 === void 0 ? Toolbar2.defaultProps.tabIndex : _a3;
      _this.buttons.forEach(function(button, index) {
        button.tabIndex = index === focusedIndex ? tabIndex : -1;
      });
    };
    _this.onKeyDown = function(event) {
      var target = event.target;
      var arrowKey = event.keyCode === Keys.left || event.keyCode === Keys.right;
      if (!arrowKey || event.defaultPrevented || _this.buttons.findIndex(function(b) {
        return b === target;
      }) === -1) {
        return;
      }
      var focusedIndex = _this.focusedIndex;
      if (event.keyCode === Keys.left) {
        _this.focusButton(focusedIndex, focusedIndex - 1);
      } else {
        _this.focusButton(focusedIndex, focusedIndex + 1);
      }
    };
    _this.onWindowResize = function(event) {
      var element5 = _this.element;
      if (!element5) {
        return;
      }
      var offsetWidth = element5.offsetWidth;
      var offsetHeight = element5.offsetHeight;
      if (_this.offsetWidth !== offsetWidth || _this.offsetHeight !== offsetHeight) {
        _this.offsetWidth = offsetWidth;
        _this.offsetHeight = offsetHeight;
        var newSizes = { offsetWidth: _this.offsetWidth, offsetHeight: _this.offsetHeight };
        if (_this.props.onResize) {
          _this.props.onResize.call(void 0, __assign16(__assign16({ target: _this }, newSizes), { nativeEvent: event }));
        }
      }
    };
    validatePackage2(packageMetadata5);
    return _this;
  }
  Object.defineProperty(Toolbar2.prototype, "selectors", {
    get: function() {
      return this.props.buttons || toolbarButtons;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Toolbar2.prototype, "focusedIndex", {
    get: function() {
      var focused = this.element && this.element.querySelector(this.focusedSelector);
      return Math.max(0, this.buttons.findIndex(function(e) {
        return e === focused;
      }));
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Toolbar2.prototype, "element", {
    get: function() {
      return this._element;
    },
    enumerable: false,
    configurable: true
  });
  Toolbar2.prototype.componentDidMount = function() {
    window.addEventListener("resize", this.onWindowResize);
    var element5 = this.element;
    if (element5) {
      this.offsetWidth = element5.offsetWidth;
      this.offsetHeight = element5.offsetHeight;
      if (this.props.keyboardNavigation !== false) {
        this.buttons = Array.from(element5.querySelectorAll(this.selectors.join(",")));
        this.setTabIndex(0);
      }
    }
  };
  Toolbar2.prototype.componentDidUpdate = function() {
    var element5 = this.element;
    if (!element5 || this.props.keyboardNavigation === false) {
      return;
    }
    this.buttons = Array.from(element5.querySelectorAll(this.selectors.join(",")));
    this.setTabIndex(this.focusedIndex);
  };
  Toolbar2.prototype.componentWillUnmount = function() {
    window.removeEventListener("resize", this.onWindowResize);
    this.buttons.length = 0;
  };
  Toolbar2.prototype.render = function() {
    var _this = this;
    return React48.createElement("div", { id: this.props.id, className: classNames("k-widget k-toolbar", this.props.className), style: this.props.style, role: this.props.role !== void 0 ? this.props.role || void 0 : "toolbar", dir: this.props.dir, ref: function(element5) {
      return _this._element = element5;
    }, onKeyDown: this.props.keyboardNavigation !== false ? this.onKeyDown : void 0 }, this.props.children);
  };
  Toolbar2.prototype.focusButton = function(prevIndex, index) {
    var _a3 = this.props.tabIndex, tabIndex = _a3 === void 0 ? Toolbar2.defaultProps.tabIndex : _a3;
    var button = this.buttons[index];
    if (button) {
      button.tabIndex = tabIndex;
      button.focus();
      var prevButton = this.buttons[prevIndex];
      if (prevButton) {
        prevButton.tabIndex = -1;
      }
    }
  };
  Toolbar2.propTypes = {
    tabIndex: PropTypes18.number,
    dir: PropTypes18.string,
    keyboardNavigation: PropTypes18.bool,
    style: PropTypes18.object,
    className: PropTypes18.string,
    role: PropTypes18.string,
    onResize: PropTypes18.func,
    buttons: PropTypes18.arrayOf(PropTypes18.string)
  };
  Toolbar2.defaultProps = {
    tabIndex: 0
  };
  return Toolbar2;
}(React48.Component);

// node_modules/@progress/kendo-react-buttons/dist/es/toolbar/tools/ToolbarItem.js
var React49 = __toESM(require_react());
var PropTypes19 = __toESM(require_prop_types());
var __extends17 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var ToolbarItem = function(_super) {
  __extends17(ToolbarItem2, _super);
  function ToolbarItem2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this._element = null;
    return _this;
  }
  Object.defineProperty(ToolbarItem2.prototype, "element", {
    get: function() {
      return this._element;
    },
    enumerable: false,
    configurable: true
  });
  ToolbarItem2.prototype.render = function() {
    var _this = this;
    return React49.createElement("span", { id: this.props.id, className: this.props.className, style: this.props.style, ref: function(e) {
      return _this._element = e;
    } }, this.props.children);
  };
  ToolbarItem2.propTypes = {
    className: PropTypes19.string
  };
  return ToolbarItem2;
}(React49.PureComponent);

// node_modules/@progress/kendo-react-buttons/dist/es/toolbar/tools/ToolbarSeparator.js
var React50 = __toESM(require_react());
var __extends18 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var ToolbarSeparator = function(_super) {
  __extends18(ToolbarSeparator2, _super);
  function ToolbarSeparator2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  ToolbarSeparator2.prototype.render = function() {
    return React50.createElement(ToolbarItem, { className: "k-separator" });
  };
  return ToolbarSeparator2;
}(React50.PureComponent);

// node_modules/@progress/kendo-react-buttons/dist/es/toolbar/tools/ToolbarSpacer.js
var React51 = __toESM(require_react());
var PropTypes20 = __toESM(require_prop_types());
var ToolbarSpacer = React51.forwardRef(function(props, ref) {
  var element5 = React51.useRef(null);
  var spacer = React51.useRef(null);
  React51.useImperativeHandle(spacer, function() {
    return { element: element5.current };
  });
  React51.useImperativeHandle(ref, function() {
    return { element: element5.current };
  });
  var className = React51.useMemo(function() {
    return classNames("k-spacer", props.className);
  }, [props.className]);
  return React51.createElement("span", { ref: element5, className });
});
ToolbarSpacer.displayName = "KendoReactToolbarSpacer";
ToolbarSpacer.propTypes = {
  className: PropTypes20.string
};

// node_modules/@progress/kendo-react-buttons/dist/es/Chip/Chip.js
var React53 = __toESM(require_react());
var PropTypes22 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-buttons/dist/es/Chip/ChipList.js
var React52 = __toESM(require_react());
var PropTypes21 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-buttons/dist/es/Chip/selection-reducer.js
var __spreadArray2 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var SELECTION_TYPE;
(function(SELECTION_TYPE2) {
  SELECTION_TYPE2["single"] = "single";
  SELECTION_TYPE2["multiple"] = "multiple";
  SELECTION_TYPE2["none"] = "none";
})(SELECTION_TYPE || (SELECTION_TYPE = {}));
var SELECTION_ACTION;
(function(SELECTION_ACTION2) {
  SELECTION_ACTION2["toggle"] = "toggle";
  SELECTION_ACTION2["remove"] = "remove";
})(SELECTION_ACTION || (SELECTION_ACTION = {}));
var selectionReducer = function(state, action) {
  switch (action.selection) {
    case SELECTION_TYPE.single:
      switch (action.type) {
        case SELECTION_ACTION.toggle: {
          if (!Array.isArray(state) || state === null) {
            return action.payload === state ? null : action.payload;
          }
          throw new Error("State cannot be an array in single selection");
        }
        case SELECTION_ACTION.remove: {
          return action.payload === state ? null : state;
        }
        default:
          return state;
      }
    case SELECTION_TYPE.multiple:
      switch (action.type) {
        case SELECTION_ACTION.toggle: {
          if (Array.isArray(state)) {
            return state.some(function(i) {
              return i === action.payload;
            }) ? state.filter(function(i) {
              return i !== action.payload;
            }) : __spreadArray2(__spreadArray2([], state, true), [action.payload], false);
          }
          if (state === null) {
            return [action.payload];
          }
          throw new Error("State cannot be non-array in multiple selection");
        }
        case SELECTION_ACTION.remove: {
          if (Array.isArray(state)) {
            return state.some(function(i) {
              return i === action.payload;
            }) ? state.filter(function(i) {
              return i !== action.payload;
            }) : __spreadArray2(__spreadArray2([], state, true), [action.payload], false);
          }
          return state;
        }
        default:
          return state;
      }
    case SELECTION_TYPE.none:
      return null;
    default:
      return state;
  }
};

// node_modules/@progress/kendo-react-buttons/dist/es/Chip/focus-reducer.js
var FOCUS_ACTION;
(function(FOCUS_ACTION2) {
  FOCUS_ACTION2["next"] = "next";
  FOCUS_ACTION2["prev"] = "prev";
  FOCUS_ACTION2["current"] = "current";
  FOCUS_ACTION2["reset"] = "reset";
})(FOCUS_ACTION || (FOCUS_ACTION = {}));
var focusReducer = function(state, action) {
  var currentIndex = action.items.findIndex(function(i) {
    return i === state;
  });
  switch (action.type) {
    case FOCUS_ACTION.next:
      return currentIndex === action.items.length - 1 ? state : action.items[currentIndex + 1];
    case FOCUS_ACTION.prev:
      return currentIndex === 0 ? state : action.items[currentIndex - 1];
    case FOCUS_ACTION.current:
      return action.payload;
    case FOCUS_ACTION.reset:
      return null;
    default:
      return state;
  }
};

// node_modules/@progress/kendo-react-buttons/dist/es/Chip/data-reducer.js
var DATA_ACTION;
(function(DATA_ACTION2) {
  DATA_ACTION2["remove"] = "remove";
  DATA_ACTION2["add"] = "add";
  DATA_ACTION2["reorder"] = "reorder";
})(DATA_ACTION || (DATA_ACTION = {}));
var dataReducer = function(state, action) {
  switch (action.type) {
    case DATA_ACTION.add:
      break;
    case DATA_ACTION.remove:
      return state.filter(function(i) {
        return i[action.valueField] !== action.payload;
      });
    case DATA_ACTION.reorder:
      break;
    default:
      return state;
  }
};

// node_modules/@progress/kendo-react-buttons/dist/es/Chip/ChipList.js
var __assign17 = function() {
  __assign17 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign17.apply(this, arguments);
};
var ChipListSelectionContext = React52.createContext([null, function(_args) {
}]);
var ChipListFocusContext = React52.createContext([null, function(_args) {
}]);
var ChipListDataContext = React52.createContext([null, function(_args) {
}]);
var useSelection = function(defaultValue, args, callback) {
  var _a3 = React52.useState(defaultValue), state = _a3[0], setState = _a3[1];
  var handleDispatchSelection = function(action) {
    var newState = selectionReducer(args.state || state, __assign17(__assign17({}, action), args));
    if (callback) {
      callback(newState, action.event);
    }
    setState(newState);
  };
  return [state, handleDispatchSelection];
};
var useFocus = function(args) {
  var _a3 = React52.useState(null), state = _a3[0], setState = _a3[1];
  var handleDispatchFocus = function(action) {
    var newState = focusReducer(action.payload, __assign17(__assign17({}, action), args));
    setState(newState);
  };
  return [state, handleDispatchFocus];
};
var useData = function(defaultData2, args, callback) {
  var _a3 = React52.useState(defaultData2), state = _a3[0], setState = _a3[1];
  var handleDispatchData = function(action) {
    var newState = dataReducer(args.state || state, __assign17(__assign17({}, action), args));
    if (callback) {
      callback(newState, action.event);
    }
    setState(newState);
  };
  return [state, handleDispatchData];
};
var ChipList = React52.forwardRef(function(props, ref) {
  var _a3;
  validatePackage2(packageMetadata5);
  var target = React52.useRef(null);
  var chipListRef = React52.useRef(null);
  var dir = useDir(chipListRef, props.dir);
  var chip = props.chip, id = props.id, style = props.style, tabIndex = props.tabIndex, disabled = props.disabled, size = props.size, className = props.className, ariaDescribedBy = props.ariaDescribedBy, ariaLabelledBy = props.ariaLabelledBy, _b = props.selection, selection = _b === void 0 ? defaultProps3.selection : _b, _c = props.value, value = _c === void 0 ? defaultProps3.defaultValue : _c, _d = props.defaultData, defaultData2 = _d === void 0 ? defaultProps3.defaultData : _d, _e = props.valueField, valueField = _e === void 0 ? defaultProps3.valueField : _e, _f = props.textField, textField = _f === void 0 ? defaultProps3.textField : _f, onChange = props.onChange, onDataChange = props.onDataChange;
  var ChipComponent = React52.useMemo(function() {
    return chip || Chip;
  }, [chip, Chip]);
  React52.useImperativeHandle(target, function() {
    return {
      element: chipListRef.current,
      props
    };
  });
  React52.useImperativeHandle(ref, function() {
    return target.current;
  });
  var handleChange = React52.useCallback(function(newValue, event) {
    if (onChange && target.current) {
      onChange.call(void 0, {
        value: newValue,
        target: target.current,
        syntheticEvent: event
      });
    }
  }, [onChange]);
  var _g = useSelection(value, {
    selection,
    state: value
  }, handleChange), stateValue = _g[0], dispatchStateValue = _g[1];
  var handleDataChange = React52.useCallback(function(newData, event) {
    if (onDataChange && target.current) {
      onDataChange.call(void 0, {
        value: newData,
        target: target.current,
        syntheticEvent: event
      });
    }
  }, [onDataChange]);
  var _h = useData(props.data || defaultData2, {
    state: props.data,
    valueField
  }, handleDataChange), stateData = _h[0], dispatchData = _h[1];
  var itemsReducer = React52.useCallback(function(acc, current) {
    acc.push(current[valueField]);
    return acc;
  }, [valueField]);
  var data = React52.useMemo(function() {
    return props.data || stateData;
  }, [props.data, stateData]);
  var chipValue = React52.useMemo(function() {
    return value || stateValue;
  }, [value, stateValue]);
  var items = React52.useMemo(function() {
    return data.reduce(itemsReducer, []);
  }, [data, itemsReducer]);
  var valueGetter = React52.useCallback(function(item) {
    return getter(valueField)(item);
  }, [valueField]);
  var textGetter = React52.useCallback(function(item) {
    return getter(textField)(item);
  }, [textField]);
  var _j = useFocus({ items }), focus = _j[0], dispatchFocus = _j[1];
  var mouseProps = useMouse(props, target);
  return React52.createElement(
    ChipListSelectionContext.Provider,
    { value: [chipValue, dispatchStateValue] },
    React52.createElement(
      ChipListFocusContext.Provider,
      { value: [focus, dispatchFocus] },
      React52.createElement(
        ChipListDataContext.Provider,
        { value: [data, dispatchData] },
        React52.createElement("div", __assign17({ ref: chipListRef }, mouseProps, { role: "listbox", id, dir, style, tabIndex: getTabIndex(tabIndex, disabled, void 0), className: classNames("k-chip-list", (_a3 = {
          "k-rtl": dir === "rtl",
          "k-disabled": disabled
        }, _a3["k-chip-list-".concat(kendoThemeMaps.sizeMap[size] || size)] = size, _a3), className), "aria-labelledby": ariaLabelledBy, "aria-describedby": ariaDescribedBy }), data.map(function(item, index) {
          return React52.createElement(ChipComponent, { role: "option", dataItem: item, size, key: [valueGetter(item), index].join("-"), text: textGetter(item), value: valueGetter(item) });
        }))
      )
    )
  );
});
var propTypes = {
  id: PropTypes21.string,
  className: PropTypes21.string,
  tabIndex: PropTypes21.number,
  data: PropTypes21.any,
  defaultData: PropTypes21.arrayOf(PropTypes21.any),
  onDataChange: PropTypes21.func,
  value: PropTypes21.oneOfType([PropTypes21.any, PropTypes21.arrayOf(PropTypes21.any)]),
  defaultValue: PropTypes21.oneOfType([PropTypes21.any, PropTypes21.arrayOf(PropTypes21.any)]),
  onChange: PropTypes21.func,
  selection: PropTypes21.oneOf(["single", "none", "multiple"]),
  textField: PropTypes21.string,
  valueField: PropTypes21.string,
  disabled: PropTypes21.bool,
  dir: PropTypes21.oneOf(["ltr", "rtl"]),
  ariaLabelledBy: PropTypes21.string,
  ariaDescribedBy: PropTypes21.string,
  size: PropTypes21.oneOf([null, "small", "medium", "large"])
};
var defaultProps3 = {
  chip: Chip,
  size: "medium",
  disabled: false,
  defaultValue: null,
  defaultData: [],
  dir: "ltr",
  selection: "none",
  textField: "text",
  valueField: "value",
  removable: "removable"
};
ChipList.displayName = "KendoReactChipList";
ChipList.propTypes = propTypes;
ChipList.defaultProps = defaultProps3;

// node_modules/@progress/kendo-react-buttons/dist/es/Chip/Chip.js
var __assign18 = function() {
  __assign18 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign18.apply(this, arguments);
};
var Chip = React53.forwardRef(function(props, ref) {
  var _a3;
  validatePackage2(packageMetadata5);
  var target = React53.useRef(null);
  var chipRef = React53.useRef(null);
  var dir = useDir(chipRef, props.dir);
  React53.useImperativeHandle(target, function() {
    return {
      element: chipRef.current,
      props
    };
  });
  React53.useImperativeHandle(ref, function() {
    return target.current;
  });
  var _b = React53.useContext(ChipListSelectionContext), selection = _b[0], dispatchSelection = _b[1];
  var _c = React53.useContext(ChipListFocusContext), focus = _c[0], dispatchFocus = _c[1];
  var _d = React53.useContext(ChipListDataContext), dispatchData = _d[1];
  var selected = React53.useMemo(function() {
    return props.selected || (Array.isArray(selection) ? selection.some(function(i) {
      return i === props.value;
    }) : selection === props.value);
  }, [props.selected, props.value, selection]);
  var focused = React53.useMemo(function() {
    return focus === props.value;
  }, [props.value, focus]);
  React53.useEffect(function() {
    if (focused && chipRef.current) {
      chipRef.current.focus();
    }
  }, [focused]);
  var handleClick = React53.useCallback(function(event) {
    dispatchSelection({ type: SELECTION_ACTION.toggle, payload: props.value, event });
  }, [dispatchSelection, props.value]);
  var handleRemove = React53.useCallback(function(event) {
    if (!props.removable) {
      return;
    }
    dispatchData({ type: DATA_ACTION.remove, payload: props.value, event });
    dispatchFocus({ type: FOCUS_ACTION.reset, payload: props.value, event });
    dispatchSelection({ type: SELECTION_ACTION.remove, payload: props.value, event });
    if (props.onRemove) {
      props.onRemove.call(void 0, {
        target: target.current,
        syntheticEvent: event
      });
    }
  }, [props.onRemove, props.value, props.removable, dispatchData, dispatchFocus, dispatchSelection]);
  var handleKeyDown = React53.useCallback(function(event) {
    switch (event.keyCode) {
      case Keys.left:
        dispatchFocus({ type: FOCUS_ACTION.prev, payload: props.value, event });
        break;
      case Keys.right:
        dispatchFocus({ type: FOCUS_ACTION.next, payload: props.value, event });
        break;
      case Keys.enter:
        dispatchSelection({ type: SELECTION_ACTION.toggle, payload: props.value, event });
        break;
      case Keys.delete:
        handleRemove(event);
        break;
      default:
        break;
    }
    if (props.onKeyDown) {
      props.onKeyDown.call(void 0, {
        target: target.current,
        syntheticEvent: event
      });
    }
  }, [props.onKeyDown, props.value, dispatchFocus, dispatchSelection, handleRemove]);
  var handleFocus = React53.useCallback(function(event) {
    dispatchFocus({ payload: props.value, type: FOCUS_ACTION.current, event });
    if (props.onFocus) {
      props.onFocus.call(void 0, {
        target: target.current,
        syntheticEvent: event
      });
    }
  }, [props.onFocus, props.value, dispatchFocus]);
  var handleBlur = React53.useCallback(function(event) {
    if (props.onBlur) {
      props.onBlur.call(void 0, {
        target: target.current,
        syntheticEvent: event
      });
    }
  }, [props.onBlur]);
  var mouseProps = useMouse(props, target, { onClick: handleClick });
  return React53.createElement(
    "div",
    __assign18({}, mouseProps, { role: props.role, id: props.value, style: props.style, ref: chipRef, dir, tabIndex: getTabIndex(props.tabIndex, props.disabled, void 0), className: classNames("k-chip", (_a3 = {
      "k-rtl": dir === "rtl",
      "k-disabled": props.disabled,
      "k-selected": selected,
      "k-focus": focused
    }, _a3["k-chip-".concat(kendoThemeMaps.sizeMap[props.size] || props.size)] = props.size, _a3["k-rounded-".concat(kendoThemeMaps.roundedMap[props.rounded] || props.rounded)] = props.rounded, _a3["k-chip-".concat(props.fillMode)] = props.fillMode, _a3["k-chip-".concat(props.fillMode, "-").concat(props.themeColor)] = Boolean(props.fillMode && props.themeColor), _a3), props.className), "aria-checked": selected, "aria-disabled": props.disabled, "aria-describedby": props.ariaDescribedBy, onFocus: handleFocus, onBlur: handleBlur, onKeyDown: handleKeyDown }),
    selected && props.selectedIcon && React53.createElement("span", { className: classNames("k-chip-icon", "k-icon", props.selectedIcon) }),
    props.icon && React53.createElement("span", { className: classNames("k-chip-icon", "k-icon", props.icon) }),
    React53.createElement("span", { className: "k-chip-content" }, props.children !== void 0 ? props.children : props.text && React53.createElement("span", { "aria-label": props.text, className: "k-chip-label" }, props.text)),
    props.removable && React53.createElement(
      "span",
      { className: "k-chip-actions" },
      React53.createElement(
        "span",
        { className: classNames("k-chip-action", "k-chip-remove-action") },
        React53.createElement("span", { className: classNames("k-icon", props.removeIcon), onClick: handleRemove })
      )
    )
  );
});
var propTypes2 = {
  id: PropTypes22.string,
  text: PropTypes22.string,
  value: PropTypes22.any,
  dir: PropTypes22.oneOf(["ltr", "rtl"]),
  removable: PropTypes22.bool,
  removeIcon: PropTypes22.string,
  disabled: PropTypes22.bool,
  icon: PropTypes22.string,
  selectedIcon: PropTypes22.string,
  onRemove: PropTypes22.func,
  dataItem: PropTypes22.any,
  selected: PropTypes22.bool,
  ariaDescribedBy: PropTypes22.string,
  size: PropTypes22.oneOf([null, "small", "medium", "large"]),
  rounded: PropTypes22.oneOf([null, "small", "medium", "large", "full"]),
  fillMode: PropTypes22.oneOf([null, "outline", "solid"]),
  themeColor: PropTypes22.oneOf([null, "base", "info", "success", "warning", "error"])
};
var defaultProps4 = {
  disabled: false,
  removable: false,
  removeIcon: "k-i-x-circle",
  dir: "ltr",
  size: "medium",
  rounded: "medium",
  fillMode: "solid",
  themeColor: "base"
};
Chip.displayName = "KendoReactChip";
Chip.propTypes = propTypes2;
Chip.defaultProps = defaultProps4;

// node_modules/@progress/kendo-react-buttons/dist/es/FloatingActionButton/FloatingActionButton.js
var React55 = __toESM(require_react());
var PropTypes24 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-buttons/dist/es/FloatingActionButton/FloatingActionButtonItem.js
var React54 = __toESM(require_react());
var PropTypes23 = __toESM(require_prop_types());
var __assign19 = function() {
  __assign19 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign19.apply(this, arguments);
};
var __rest5 = function(s, e) {
  var t = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e.indexOf(p2) < 0)
      t[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t[p2[i]] = s[p2[i]];
    }
  return t;
};
var FloatingActionButtonItem = React54.forwardRef(function(props, ref) {
  var className = props.className, disabled = props.disabled, text = props.text, icon = props.icon, style = props.style, id = props.id, focused = props.focused, tabIndex = props.tabIndex, index = props.index, dataItem = props.dataItem, item = props.item, onDown = props.onDown, onClick = props.onClick, others = __rest5(props, ["className", "disabled", "text", "icon", "style", "id", "focused", "tabIndex", "index", "dataItem", "item", "onDown", "onClick"]);
  var elementRef = React54.useRef(null);
  var focusElement = React54.useCallback(function() {
    if (elementRef.current) {
      elementRef.current.focus();
    }
  }, []);
  var getImperativeHandle = React54.useCallback(function() {
    return {
      element: elementRef.current,
      focus: focusElement
    };
  }, [focusElement]);
  React54.useImperativeHandle(ref, getImperativeHandle);
  var handleClick = React54.useCallback(function(event) {
    if (onClick && index !== void 0 && !disabled) {
      onClick(event, index);
    }
  }, [onClick, index]);
  var itemClassNames = React54.useMemo(function() {
    return classNames("k-fab-item", {
      "k-focus": focused,
      "k-disabled": disabled
    }, className);
  }, [className, disabled, focused]);
  var ItemComp = item;
  return React54.createElement("li", __assign19({ ref: elementRef, id, className: itemClassNames, style, role: "menuitem", tabIndex: getTabIndex(tabIndex, disabled), "aria-disabled": disabled, "aria-label": "".concat(text || "", " floatingactionbutton item"), onClick: handleClick, onMouseDown: onDown, onPointerDown: onDown }, others), ItemComp ? React54.createElement(ItemComp, { itemIndex: index, item: dataItem }) : React54.createElement(
    React54.Fragment,
    null,
    text && React54.createElement("span", { className: "k-fab-item-text" }, text),
    icon && React54.createElement("span", { className: classNames("k-fab-item-icon k-icon k-i-".concat(icon)) })
  ));
});
FloatingActionButtonItem.propTypes = {
  className: PropTypes23.string,
  style: PropTypes23.object,
  children: PropTypes23.any,
  disabled: PropTypes23.bool,
  focused: PropTypes23.bool,
  index: PropTypes23.number,
  icon: PropTypes23.string,
  text: PropTypes23.string,
  tabIndex: PropTypes23.number,
  customProp: PropTypes23.any
};
FloatingActionButtonItem.displayName = "KendoFloatingActionButtonItem";

// node_modules/@progress/kendo-react-buttons/dist/es/FloatingActionButton/utils.js
var DEFAULT_OFFSET2 = "16px";
var toStringValues = function(val) {
  if (typeof val === "number") {
    return val + "px";
  }
  return val;
};
var getAnchorAlign2 = function(fabAlign, rtl) {
  var align2 = { horizontal: rtl ? "right" : "left", vertical: "bottom" };
  if (fabAlign.horizontal === "end") {
    align2.horizontal = rtl ? "left" : "right";
  }
  return align2;
};
var getPopupAlign2 = function(fabAlign, rtl) {
  var align2 = { horizontal: rtl ? "right" : "left", vertical: "top" };
  if (fabAlign.horizontal === "end") {
    align2.horizontal = rtl ? "left" : "right";
  }
  return align2;
};
var getTextDirectionClass = function(rtl, hAlign) {
  var al = hAlign === "end" ? "end" : "start";
  var directions = {
    rtl: { end: "k-text-left", start: "k-text-right" },
    ltr: { start: "k-text-left", end: "k-text-right" }
  };
  return directions[rtl][al];
};
var position3 = function(ref, align2, alignOffset, isRtl) {
  var horizontal = align2.horizontal;
  var vertical = align2.vertical;
  if (ref.current) {
    var xFab = alignOffset && alignOffset.x !== void 0 ? toStringValues(alignOffset.x) : DEFAULT_OFFSET2;
    var xCenterFab = alignOffset && alignOffset.x !== void 0 ? "calc(50% + ".concat(toStringValues(alignOffset.x), ")") : "50%";
    var yFab = alignOffset && alignOffset.y !== void 0 ? toStringValues(alignOffset.y) : DEFAULT_OFFSET2;
    var yCenterFab = alignOffset && alignOffset.y !== void 0 ? "calc(50% + ".concat(toStringValues(alignOffset.y), ")") : "50%";
    ref.current.style.setProperty(horizontalPosition(align2, isRtl), horizontal === "center" ? xCenterFab : xFab);
    ref.current.style.setProperty(verticalPosition(align2), vertical === "middle" ? yCenterFab : yFab);
    if (isRtl) {
      if ((vertical === "top" || vertical === "bottom") && horizontal === "start") {
        ref.current.style.setProperty("left", "unset");
      }
      if (vertical === "middle" && horizontal === "end") {
        ref.current.style.setProperty("right", "unset");
      }
      if (vertical === "middle" && horizontal === "start") {
        ref.current.style.setProperty("left", "unset");
      }
    }
  }
};
var horizontalPosition = function(align2, isRtl) {
  var horizontal = align2.horizontal;
  return {
    end: isRtl ? "left" : "right",
    center: "left",
    start: isRtl ? "right" : "left"
  }[horizontal || "end"];
};
var verticalPosition = function(align2) {
  return {
    top: "top",
    middle: "top",
    bottom: "bottom"
  }[align2.vertical || "bottom"];
};

// node_modules/@progress/kendo-react-buttons/dist/es/FloatingActionButton/FloatingActionButton.js
var __assign20 = function() {
  __assign20 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign20.apply(this, arguments);
};
var __rest6 = function(s, e) {
  var t = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e.indexOf(p2) < 0)
      t[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t[p2[i]] = s[p2[i]];
    }
  return t;
};
var ZINDEX_FAB_STEP = 2;
var DEFAULT_FAB_ZINDEX = 100;
var FloatingActionButton = React55.forwardRef(function(props, ref) {
  validatePackage2(packageMetadata5);
  var _a3 = props.align, align2 = _a3 === void 0 ? defaultProps5.align : _a3, alignOffset = props.alignOffset, className = props.className, disabled = props.disabled, icon = props.icon, iconClass = props.iconClass, id = props.id, items = props.items, item = props.item, text = props.text, _b = props.positionMode, positionMode = _b === void 0 ? defaultProps5.positionMode : _b, _c = props.shape, shape8 = _c === void 0 ? defaultProps5.shape : _c, _d = props.size, size = _d === void 0 ? defaultProps5.size : _d, style = props.style, _e = props.rounded, rounded = _e === void 0 ? defaultProps5.rounded : _e, _f = props.themeColor, themeColor = _f === void 0 ? defaultProps5.themeColor : _f, overlayStyle = props.overlayStyle, tabIndex = props.tabIndex, accessKey = props.accessKey, _g = props.popupSettings, popupSettings = _g === void 0 ? {} : _g, modal = props.modal, onClick = props.onClick, onItemClick = props.onItemClick, onFocus = props.onFocus, onBlur = props.onBlur, onKeyDown = props.onKeyDown, onOpen = props.onOpen, onClose = props.onClose, others = __rest6(props, ["align", "alignOffset", "className", "disabled", "icon", "iconClass", "id", "items", "item", "text", "positionMode", "shape", "size", "style", "rounded", "themeColor", "overlayStyle", "tabIndex", "accessKey", "popupSettings", "modal", "onClick", "onItemClick", "onFocus", "onBlur", "onKeyDown", "onOpen", "onClose"]);
  var zIndexContext = useZIndexContext();
  var currentZIndex = zIndexContext ? zIndexContext + ZINDEX_FAB_STEP : DEFAULT_FAB_ZINDEX;
  var target = React55.useRef(null);
  var elementRef = React55.useRef(null);
  var listRef = React55.useRef(null);
  var popupRef = React55.useRef(null);
  var focusElement = React55.useCallback(function() {
    if (elementRef.current) {
      elementRef.current.focus();
    }
  }, []);
  var getImperativeHandle = React55.useCallback(function() {
    return {
      element: elementRef.current,
      focus: focusElement
    };
  }, [focusElement]);
  React55.useImperativeHandle(target, getImperativeHandle);
  React55.useImperativeHandle(ref, function() {
    return target.current;
  });
  var _h = React55.useState(false), open = _h[0], setOpen = _h[1];
  var _j = React55.useState(false), focused = _j[0], setFocused = _j[1];
  var _k = React55.useState(-1), focusedIndex = _k[0], setFocusedIndex = _k[1];
  var buttonId = React55.useMemo(function() {
    return guid();
  }, []);
  var dir = useDir(elementRef, props.dir);
  var isRtl = dir === "rtl";
  var listId = React55.useMemo(function() {
    return guid();
  }, []);
  React55.useEffect(function() {
    position3(elementRef, align2, alignOffset, isRtl);
  }, [elementRef, align2, alignOffset, isRtl]);
  React55.useEffect(function() {
    if (focused && elementRef && elementRef.current) {
      elementRef.current.focus();
    }
  }, [focused, elementRef]);
  var dispatchPopupEvent = React55.useCallback(function(dispatchedEvent, isOpen) {
    if (!items) {
      return;
    }
    dispatchEvent(isOpen ? onOpen : onClose, dispatchedEvent, getImperativeHandle(), void 0);
  }, [onOpen, onClose, items]);
  var handleClick = React55.useCallback(function(event) {
    if (!event.target || disabled) {
      return;
    }
    if (!items && onClick) {
      dispatchEvent(onClick, event, getImperativeHandle(), void 0);
    } else {
      setOpen(!open);
      setFocused(true);
      setFocusedIndex(!open ? 0 : -1);
      dispatchPopupEvent(event, !open);
    }
  }, [
    setOpen,
    setFocused,
    setFocusedIndex,
    onClick,
    dispatchPopupEvent,
    open,
    items,
    disabled
  ]);
  var handleFocus = React55.useCallback(function(event) {
    setFocused(true);
    setFocusedIndex(open ? 0 : -1);
    if (onFocus) {
      dispatchEvent(onFocus, event, getImperativeHandle(), void 0);
    }
  }, [onFocus, setFocused, setFocusedIndex]);
  var handleBlur = React55.useCallback(function(event) {
    setFocused(false);
    setOpen(false);
    setFocusedIndex(-1);
    dispatchEvent(onBlur, event, getImperativeHandle(), void 0);
    var fireCloseEvent = open;
    if (fireCloseEvent) {
      dispatchPopupEvent(event, false);
    }
  }, [onBlur, setFocused, setOpen, setFocusedIndex, dispatchPopupEvent]);
  var handleMouseDown = React55.useCallback(function(event) {
    event.preventDefault();
  }, []);
  var dispatchItemClickEvent = React55.useCallback(function(dispatchedEvent, index) {
    if (!items) {
      return;
    }
    if (!items[index].disabled) {
      dispatchEvent(onItemClick, dispatchedEvent, getImperativeHandle(), {
        itemProps: items[index],
        itemIndex: index
      });
    }
  }, [onItemClick]);
  var handleItemClick = React55.useCallback(function(event, clickedItemIndex) {
    if (!event.target || !items) {
      return;
    }
    setFocusedIndex(clickedItemIndex);
    setOpen(false);
    dispatchItemClickEvent(event, clickedItemIndex);
    dispatchPopupEvent(event, false);
  }, [setFocusedIndex, setOpen, dispatchItemClickEvent, dispatchPopupEvent]);
  var handleItemDown = React55.useCallback(function(event) {
    if (document.activeElement === elementRef.current) {
      event.preventDefault();
    }
  }, [elementRef, document.activeElement]);
  var handleKeyDown = React55.useCallback(function(event) {
    var currIndex = focusedIndex;
    var maxNavIndex = items ? items.length - 1 : -1;
    var isAtBottom = align2.vertical === "bottom";
    switch (event.keyCode) {
      case Keys.enter:
      case Keys.space:
        if (currIndex >= 0) {
          dispatchItemClickEvent(event, currIndex);
        }
        event.preventDefault();
        setOpen(!open);
        setFocusedIndex(!open ? 0 : -1);
        break;
      case Keys.esc:
        event.preventDefault();
        setOpen(false);
        setFocusedIndex(-1);
        break;
      case Keys.home:
        event.preventDefault();
        setFocusedIndex(0);
        break;
      case Keys.end:
        event.preventDefault();
        setFocusedIndex(maxNavIndex);
        break;
      case Keys.down:
      case Keys.right:
        event.preventDefault();
        if (currIndex < maxNavIndex && !isAtBottom) {
          setFocusedIndex(currIndex + 1);
        }
        if (currIndex > 0 && isAtBottom) {
          setFocusedIndex(currIndex - 1);
        }
        break;
      case Keys.up:
      case Keys.left:
        event.preventDefault();
        if (currIndex > 0 && !isAtBottom) {
          setFocusedIndex(currIndex - 1);
        }
        if (currIndex < maxNavIndex && isAtBottom) {
          setFocusedIndex(currIndex + 1);
        }
        break;
      default:
        break;
    }
    dispatchEvent(onKeyDown, event, getImperativeHandle(), void 0);
  }, [onKeyDown, focusedIndex, setFocusedIndex, isRtl, setOpen]);
  var buttonClassNames = React55.useMemo(function() {
    var _a4;
    return classNames("k-fab k-fab-solid", (_a4 = {}, _a4["k-fab-".concat(shape8)] = shape8, _a4["k-fab-sm"] = size === "small", _a4["k-fab-md"] = size === "medium", _a4["k-fab-lg"] = size === "large", _a4["k-disabled"] = disabled, _a4["k-pos-absolute"] = positionMode === "absolute", _a4["k-pos-fixed"] = positionMode === "fixed", _a4["k-focus"] = focused, _a4["k-rounded-".concat(kendoThemeMaps.roundedMap[rounded] || rounded)] = rounded, _a4["k-fab-solid-".concat(themeColor)] = themeColor, _a4), "k-".concat(align2.vertical, "-").concat(align2.horizontal), className);
  }, [themeColor, size, rounded, shape8, disabled, positionMode, align2, focused, className]);
  var fabItems = items && items.map(function(element5, index) {
    return React55.createElement(FloatingActionButtonItem, __assign20({}, element5, { key: index, index, id: "".concat(listId, "-").concat(index), disabled: disabled || element5.disabled, focused: focusedIndex === index, dataItem: element5, item, className: classNames(element5.className, getTextDirectionClass(dir || "ltr", align2.horizontal)), onClick: handleItemClick, onDown: handleItemDown }));
  });
  var isIconFab = icon && !text;
  var fabWidth = elementRef.current ? elementRef.current.offsetWidth : 0;
  var iconWidth = 32;
  var spacing = fabWidth / 2 - iconWidth / 2;
  return React55.createElement(
    ZIndexContext.Provider,
    { value: currentZIndex },
    React55.createElement(
      React55.Fragment,
      null,
      React55.createElement(
        "button",
        __assign20({ ref: elementRef, id: id || buttonId, role: items ? "menubutton" : "button", type: "button", "aria-disabled": disabled, "aria-expanded": items ? open : void 0, "aria-haspopup": items ? true : false, "aria-label": "".concat(text || "", " floatingactionbutton"), "aria-owns": items ? listId : void 0, "aria-activedescendant": focusedIndex >= 0 && items ? "".concat(listId, "-").concat(focusedIndex) : void 0, tabIndex: getTabIndex(tabIndex, disabled), accessKey, dir, disabled, className: buttonClassNames, style, onClick: handleClick, onMouseDown: handleMouseDown, onFocus: handleFocus, onBlur: handleBlur, onKeyDown: handleKeyDown }, others),
        icon ? React55.createElement("span", { role: "presentation", className: classNames("k-fab-icon k-icon k-i-".concat(icon)) }) : iconClass ? React55.createElement("span", { role: "presentation", className: iconClass }) : null,
        text && React55.createElement("span", { className: "k-fab-text" }, text)
      ),
      modal && open && React55.createElement("div", { className: "k-overlay", style: __assign20({ zIndex: currentZIndex }, overlayStyle) }),
      React55.createElement(
        Popup,
        { ref: popupRef, anchor: elementRef.current, show: open, animate: popupSettings.animate, popupClass: classNames("k-popup-transparent k-fab-popup", popupSettings.popupClass), anchorAlign: popupSettings.anchorAlign || getAnchorAlign2(align2, isRtl), popupAlign: popupSettings.popupAlign || getPopupAlign2(align2, isRtl), style: { boxShadow: "none" } },
        React55.createElement("ul", { ref: listRef, role: "menu", "aria-labelledby": id, id: listId, className: classNames("k-fab-items", {
          "k-fab-items-bottom": align2.vertical !== "bottom",
          "k-fab-items-top": align2.vertical === "bottom"
        }), style: {
          paddingLeft: isIconFab ? spacing : void 0,
          paddingRight: isIconFab ? spacing : void 0
        } }, fabItems)
      )
    )
  );
});
FloatingActionButton.propTypes = {
  className: PropTypes24.string,
  style: PropTypes24.object,
  id: PropTypes24.string,
  dir: PropTypes24.string,
  tabIndex: PropTypes24.number,
  accessKey: PropTypes24.string,
  disabled: PropTypes24.bool,
  icon: PropTypes24.string,
  iconClass: PropTypes24.string,
  text: PropTypes24.string,
  alignOffset: PropTypes24.shape({
    x: PropTypes24.oneOfType([PropTypes24.number, PropTypes24.string]),
    y: PropTypes24.oneOfType([PropTypes24.number, PropTypes24.string])
  }),
  align: PropTypes24.shape({
    vertical: PropTypes24.oneOf(["top", "middle", "bottom"]),
    horizontal: PropTypes24.oneOf(["start", "center", "end"])
  }),
  positionMode: PropTypes24.oneOf(["absolute", "fixed"]),
  shape: PropTypes24.oneOf([null, "rectangle", "square"]),
  size: PropTypes24.oneOf([null, "small", "medium", "large"]),
  rounded: PropTypes24.oneOf([null, "small", "medium", "large", "full"]),
  themeColor: PropTypes24.oneOf([
    null,
    "primary",
    "secondary",
    "tertiary",
    "info",
    "success",
    "warning",
    "error",
    "dark",
    "light",
    "inverse"
  ]),
  modal: PropTypes24.bool,
  overlayStyle: PropTypes24.object
};
var defaultProps5 = {
  align: { vertical: "bottom", horizontal: "end" },
  shape: null,
  size: "medium",
  rounded: "full",
  themeColor: "primary",
  positionMode: "fixed"
};
FloatingActionButton.displayName = "KendoFloatingActionButton";

// node_modules/@progress/kendo-react-dropdowns/dist/es/DropDownList/DropDownList.js
var __extends19 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign21 = function() {
  __assign21 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign21.apply(this, arguments);
};
var VALIDATION_MESSAGE = "Please select a value from the list!";
var sizeMap2 = kendoThemeMaps.sizeMap;
var roundedMap2 = kendoThemeMaps.roundedMap;
var DropDownListWithoutContext = function(_super) {
  __extends19(DropDownListWithoutContext2, _super);
  function DropDownListWithoutContext2(props) {
    var _this = _super.call(this, props) || this;
    _this.state = {};
    _this._element = null;
    _this.base = new DropDownBase_default(_this);
    _this.searchState = { word: "", last: "" };
    _this._select = null;
    _this._skipFocusEvent = false;
    _this._filterInput = null;
    _this._navigated = false;
    _this.focus = function() {
      if (_this.base.wrapper) {
        _this.base.wrapper.focus();
      }
    };
    _this.handleItemSelect = function(index, state) {
      var _a3 = _this.props, _b = _a3.data, data = _b === void 0 ? [] : _b, virtual = _a3.virtual, dataItemKey = _a3.dataItemKey, defaultItem = _a3.defaultItem;
      var skip = virtual ? virtual.skip : 0;
      var item = index === -1 && defaultItem !== void 0 ? defaultItem : data[index - skip];
      var newSelected = !areSame(item, _this.value, dataItemKey);
      _this.triggerOnChange(item, state);
      if (newSelected) {
        _this.base.triggerPageChangeCornerItems(item, state);
      }
    };
    _this.componentRef = function(element5) {
      _this._element = element5;
      _this.base.wrapper = element5;
    };
    _this.dummySelect = function(value) {
      return React56.createElement(
        "select",
        { name: _this.props.name, ref: function(el) {
          _this._select = el;
        }, tabIndex: -1, "aria-hidden": true, title: _this.props.label, style: { opacity: 0, width: 1, border: 0, zIndex: -1, position: "absolute", left: "50%" } },
        React56.createElement("option", { value: _this.props.valueMap ? _this.props.valueMap.call(void 0, value) : value })
      );
    };
    _this.renderListContainer = function() {
      var _a3;
      var _b = _this.props, header = _b.header, footer = _b.footer, dir = _b.dir, _c = _b.data, data = _c === void 0 ? [] : _c, size = _b.size;
      var base = _this.base;
      var popupSettings = base.getPopupSettings();
      var opened = _this.props.opened !== void 0 ? _this.props.opened : _this.state.opened;
      var popupWidth = popupSettings.width !== void 0 ? popupSettings.width : base.popupWidth;
      var listContainerProps = {
        dir: dir !== void 0 ? dir : base.dirCalculated,
        width: popupWidth,
        popupSettings: {
          popupClass: classNames(popupSettings.popupClass, "k-list-container"),
          className: popupSettings.className,
          animate: popupSettings.animate,
          anchor: _this.element,
          show: opened,
          onOpen: _this.onPopupOpened,
          onClose: _this.onPopupClosed,
          appendTo: popupSettings.appendTo
        },
        itemsCount: [data.length]
      };
      return React56.createElement(
        ListContainer_default,
        __assign21({}, listContainerProps),
        _this.renderListFilter(),
        header && React56.createElement("div", { className: "k-list-header" }, header),
        React56.createElement(
          "div",
          { className: classNames("k-list", (_a3 = {}, _a3["k-list-".concat(sizeMap2[size] || size)] = size, _a3["k-virtual-list"] = _this.base.vs.enabled, _a3)) },
          _this.renderDefaultItem(),
          _this.renderList()
        ),
        footer && React56.createElement("div", { className: "k-list-footer" }, footer)
      );
    };
    _this.renderList = function() {
      var _a3 = _this.props, _b = _a3.data, data = _b === void 0 ? [] : _b, textField = _a3.textField, dataItemKey = _a3.dataItemKey, _c = _a3.virtual, virtual = _c === void 0 ? { skip: 0 } : _c, listNoDataRender = _a3.listNoDataRender, itemRender = _a3.itemRender;
      var vs = _this.base.vs;
      var skip = virtual.skip;
      var opened = _this.props.opened !== void 0 ? _this.props.opened : _this.state.opened;
      var popupSettings = _this.base.getPopupSettings();
      var translate = "translateY(".concat(vs.translate, "px)");
      return React56.createElement(List_default, { id: _this.base.listBoxId, show: opened, data: data.slice(), focusedIndex: _this.focusedIndex(), value: _this.value, textField, valueField: dataItemKey, optionsGuid: _this.base.guid, listRef: function(list) {
        return vs.list = _this.base.list = list;
      }, wrapperStyle: { maxHeight: popupSettings.height }, wrapperCssClass: "k-list-content", listStyle: vs.enabled ? { transform: translate } : void 0, key: "listkey", skip, onClick: _this.handleItemClick, itemRender, noDataRender: listNoDataRender, onScroll: function(e) {
        vs.scrollHandler(e);
      }, wrapperRef: vs.scrollerRef, scroller: _this.base.renderScrollElement() });
    };
    _this.renderListFilter = function() {
      var filterText = _this.props.filter !== void 0 ? _this.props.filter : _this.state.text;
      return _this.props.filterable && React56.createElement(ListFilter_default, { value: filterText, ref: function(filter) {
        return _this._filterInput = filter && filter.input;
      }, onChange: _this.handleListFilterChange, onKeyDown: _this.handleKeyDown, size: _this.props.size, rounded: _this.props.rounded, fillMode: _this.props.fillMode });
    };
    _this.renderDefaultItem = function() {
      var _a3 = _this.props, textField = _a3.textField, defaultItem = _a3.defaultItem, dataItemKey = _a3.dataItemKey;
      return defaultItem !== void 0 && React56.createElement(ListDefaultItem_default, { defaultItem, textField, selected: areSame(_this.value, defaultItem, dataItemKey), key: "defaultitemkey", onClick: _this.handleDefaultItemClick });
    };
    _this.search = function(event) {
      clearTimeout(_this._typingTimeout);
      if (!_this.props.filterable) {
        _this._typingTimeout = window.setTimeout(function() {
          return _this.searchState.word = "";
        }, _this.props.delay);
        _this.selectNext(event);
      }
    };
    _this.selectNext = function(event) {
      var _a3 = _this.props, _b = _a3.data, data = _b === void 0 ? [] : _b, dataItemKey = _a3.dataItemKey;
      var mappedData = data.map(function(item, idx) {
        return { item, itemIndex: idx };
      });
      var word = _this.searchState.word;
      var last = _this.searchState.last;
      var isInLoop = sameCharsOnly(word, last);
      var dataLength = mappedData.length;
      var startIndex = Math.max(0, data.findIndex(function(i) {
        return areSame(i, _this.value, dataItemKey);
      }));
      var defaultItem;
      if (_this.props.defaultItem) {
        defaultItem = { item: _this.props.defaultItem, itemIndex: -1 };
        dataLength += 1;
        startIndex += 1;
      }
      startIndex += isInLoop ? 1 : 0;
      mappedData = shuffleData(mappedData, startIndex, defaultItem);
      var text, loopMatch, nextMatch, index = 0;
      var _c = _this.props, textField = _c.textField, ignoreCase = _c.ignoreCase;
      for (; index < dataLength; index++) {
        text = getItemValue(mappedData[index].item, textField);
        loopMatch = isInLoop && matchText(text, last, ignoreCase);
        nextMatch = matchText(text, word, ignoreCase);
        if (loopMatch || nextMatch) {
          index = mappedData[index].itemIndex;
          break;
        }
      }
      if (index !== dataLength) {
        var state = _this.base.initState();
        state.syntheticEvent = event;
        _this.handleItemSelect(index, state);
        _this.applyState(state);
        _this._valueDuringOnChange = void 0;
      }
    };
    _this.handleKeyDown = function(event) {
      var _a3 = _this.props, _b = _a3.data, data = _b === void 0 ? [] : _b, filterable = _a3.filterable, disabled = _a3.disabled, _c = _a3.leftRightKeysNavigation, leftRightKeysNavigation = _c === void 0 ? true : _c, _d = _a3.virtual, virtual = _d === void 0 ? { skip: 0, total: 0, pageSize: 0 } : _d;
      var opened = _this.props.opened !== void 0 ? _this.props.opened : _this.state.opened;
      var keyCode = event.keyCode;
      var homeOrEndKeys = keyCode === Keys.home || keyCode === Keys.end;
      var upOrDownKeys = keyCode === Keys.up || keyCode === Keys.down;
      var shouldOpen = !opened && (event.altKey && keyCode === Keys.down || keyCode === Keys.enter || keyCode === Keys.space);
      var shouldClose = opened && (event.altKey && keyCode === Keys.up || keyCode === Keys.esc);
      var leftOrRightKeys = leftRightKeysNavigation && (keyCode === Keys.left || keyCode === Keys.right);
      var shouldNavigate = upOrDownKeys || !filterable && (leftOrRightKeys || homeOrEndKeys);
      var state = _this.base.initState();
      state.syntheticEvent = event;
      if (disabled) {
        return;
      } else if (homeOrEndKeys && _this.base.vs.enabled) {
        if (keyCode === Keys.home) {
          if (virtual.skip !== 0) {
            _this.base.triggerOnPageChange(state, 0, virtual.pageSize);
            _this._navigated = true;
          } else {
            _this.triggerOnChange(data[0], state);
          }
        } else {
          if (virtual.skip < virtual.total - virtual.pageSize) {
            _this.base.triggerOnPageChange(state, virtual.total - virtual.pageSize, virtual.pageSize);
            _this._navigated = true;
          } else {
            _this.triggerOnChange(data[data.length - 1], state);
          }
        }
      } else if (opened && keyCode === Keys.enter) {
        var focusedIndex = _this.focusedIndex();
        if (focusedIndex !== void 0) {
          _this.handleItemSelect(focusedIndex, state);
        }
        _this.base.togglePopup(state);
        event.preventDefault();
      } else if (shouldOpen || shouldClose) {
        _this.base.togglePopup(state);
        event.preventDefault();
      } else if (shouldNavigate) {
        _this.onNavigate(state, keyCode);
        event.preventDefault();
      }
      _this.applyState(state);
    };
    _this.handleItemClick = function(index, event) {
      _this.base.handleItemClick(index, event);
      _this._valueDuringOnChange = void 0;
    };
    _this.handleFocus = function(event) {
      if (_this._skipFocusEvent) {
        return;
      }
      _this.base.handleFocus(event);
    };
    _this.handleBlur = function(event) {
      if (_this._skipFocusEvent || !_this.state.focused) {
        return;
      }
      var opened = _this.props.opened !== void 0 ? _this.props.opened : _this.state.opened;
      var state = _this.base.initState();
      state.syntheticEvent = event;
      state.data.focused = false;
      state.events.push({ type: "onBlur" });
      if (opened) {
        _this.base.togglePopup(state);
      }
      _this.applyState(state);
    };
    _this.handleDefaultItemClick = function(event) {
      var state = _this.base.initState();
      state.syntheticEvent = event;
      _this.base.togglePopup(state);
      _this.triggerOnChange(_this.props.defaultItem, state);
      _this.applyState(state);
    };
    _this.handleWrapperClick = function(event) {
      if (event.isPropagationStopped()) {
        return;
      }
      var state = _this.base.initState();
      state.syntheticEvent = event;
      if (!_this.state.focused) {
        state.data.focused = true;
      }
      _this.base.togglePopup(state);
      _this.applyState(state);
    };
    _this.handleKeyPress = function(event) {
      if (_this.props.filterable || event.which === 0 || event.keyCode === Keys.enter) {
        return;
      }
      var character = String.fromCharCode(event.charCode || event.keyCode);
      if (_this.props.ignoreCase) {
        character = character.toLowerCase();
      }
      if (character === " ") {
        event.preventDefault();
      }
      _this.searchState = {
        word: _this.searchState.word + character,
        last: _this.searchState.last + character
      };
      _this.search(event);
    };
    _this.handleListFilterChange = function(event) {
      var state = _this.base.initState();
      state.syntheticEvent = event;
      if (_this.props.filter === void 0) {
        state.data.text = event.target.value;
      }
      _this.base.filterChanged(event.target.value, state);
      _this.applyState(state);
    };
    _this.onPopupOpened = function() {
      if (_this._filterInput) {
        _this.focusElement(_this._filterInput);
      }
    };
    _this.onPopupClosed = function() {
      if (_this.state.focused) {
        window.setTimeout(function() {
          if (_this.state.focused && _this.base.wrapper) {
            _this.focusElement(_this.base.wrapper);
          }
        });
      }
    };
    _this.setValidity = function() {
      if (_this._select && _this._select.setCustomValidity) {
        _this._select.setCustomValidity(_this.validity.valid ? "" : _this.props.validationMessage || VALIDATION_MESSAGE);
      }
    };
    validatePackage2(packageMetadata4);
    return _this;
  }
  Object.defineProperty(DropDownListWithoutContext2.prototype, "element", {
    get: function() {
      return this._element;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(DropDownListWithoutContext2.prototype, "value", {
    get: function() {
      var value;
      if (this._valueDuringOnChange !== void 0) {
        value = this._valueDuringOnChange;
      } else if (this.props.value !== void 0) {
        value = this.props.value;
      } else if (this.state.value !== void 0) {
        value = this.state.value;
      } else if (this.props.defaultValue !== void 0) {
        value = this.props.defaultValue;
      }
      if (!isPresent(value) && this.props.defaultItem !== void 0) {
        value = this.props.defaultItem;
      }
      return value;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(DropDownListWithoutContext2.prototype, "index", {
    get: function() {
      var _a3 = this.props, _b = _a3.data, data = _b === void 0 ? [] : _b, dataItemKey = _a3.dataItemKey;
      var value = this.value;
      return data.findIndex(function(i) {
        return areSame(i, value, dataItemKey);
      });
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(DropDownListWithoutContext2.prototype, "name", {
    get: function() {
      return this.props.name;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(DropDownListWithoutContext2.prototype, "validity", {
    get: function() {
      var customError = this.props.validationMessage !== void 0;
      var isValid = !this.required || this.value !== null && this.value !== "" && this.value !== void 0;
      var valid = this.props.valid !== void 0 ? this.props.valid : isValid;
      return {
        customError,
        valid,
        valueMissing: this.value === null
      };
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(DropDownListWithoutContext2.prototype, "validityStyles", {
    get: function() {
      return this.props.validityStyles !== void 0 ? this.props.validityStyles : DropDownListWithoutContext2.defaultProps.validityStyles;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(DropDownListWithoutContext2.prototype, "required", {
    get: function() {
      return this.props.required !== void 0 ? this.props.required : DropDownListWithoutContext2.defaultProps.required;
    },
    enumerable: false,
    configurable: true
  });
  DropDownListWithoutContext2.prototype.componentDidUpdate = function(prevProps, prevState) {
    var _a3 = this.props, _b = _a3.data, data = _b === void 0 ? [] : _b, dataItemKey = _a3.dataItemKey, virtual = _a3.virtual;
    var prevTotal = prevProps.virtual ? prevProps.virtual.total : 0;
    var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
    var prevOpened = prevProps.opened !== void 0 ? prevProps.opened : prevState.opened;
    var opening = !prevOpened && opened;
    var closing = prevOpened && !opened;
    if (!this.base.getPopupSettings().animate) {
      if (opening) {
        this.onPopupOpened();
      } else if (closing) {
      }
    }
    if (virtual && virtual.total !== prevTotal) {
      this.base.vs.calcScrollElementHeight();
      this.base.vs.reset();
    } else {
      var selectedItem_1 = this.value;
      var prevSelectedItem = prevProps.value !== void 0 ? prevProps.value : prevState.value;
      var selectedItemIndex = data.findIndex(function(i) {
        return areSame(i, selectedItem_1, dataItemKey);
      });
      var selectedItemChanged = !areSame(prevSelectedItem, selectedItem_1, dataItemKey);
      if (opening && virtual) {
        this.base.scrollToVirtualItem(virtual, selectedItemIndex);
      } else if (opening && !virtual) {
        this.base.scrollToItem(selectedItemIndex);
      } else if (opened && prevOpened && selectedItem_1 && selectedItemChanged && !this._navigated) {
        this.base.scrollToItem(selectedItemIndex);
      } else if (opened && prevOpened && this._navigated) {
        if (this._navigated && virtual && virtual.skip === 0) {
          this.base.vs.reset();
        } else if (this._navigated && virtual && virtual.skip === virtual.total - virtual.pageSize) {
          this.base.vs.scrollToEnd();
        }
      }
    }
    this._navigated = false;
    this.setValidity();
  };
  DropDownListWithoutContext2.prototype.componentDidMount = function() {
    this.base.didMount();
    this.setValidity();
  };
  DropDownListWithoutContext2.prototype.render = function() {
    var _a3;
    var _this = this;
    var _b = this.props, style = _b.style, className = _b.className, label = _b.label, dir = _b.dir, virtual = _b.virtual, size = _b.size, rounded = _b.rounded, fillMode = _b.fillMode;
    var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
    var value = this.value;
    var text = getItemValue(value, this.props.textField);
    var isValid = !this.validityStyles || this.validity.valid;
    var base = this.base;
    var vs = base.vs;
    vs.enabled = virtual !== void 0;
    if (virtual !== void 0) {
      base.vs.skip = virtual.skip;
      base.vs.total = virtual.total;
      base.vs.pageSize = virtual.pageSize;
    }
    var _c = this.props, dataItemKey = _c.dataItemKey, _d = _c.data, data = _d === void 0 ? [] : _d, disabled = _c.disabled, tabIndex = _c.tabIndex, loading = _c.loading, iconClassName = _c.iconClassName, valueRender = _c.valueRender;
    var focused = this.state.focused;
    var selectedIndex = data.findIndex(function(i) {
      return areSame(i, value, dataItemKey);
    });
    var valueDefaultRendering = React56.createElement(
      "span",
      { className: "k-input-inner" },
      React56.createElement("span", { className: "k-input-value-text" }, text)
    );
    var valueElement = valueRender !== void 0 ? valueRender.call(void 0, valueDefaultRendering, value) : valueDefaultRendering;
    var dropdownlist = React56.createElement(
      "span",
      { ref: this.componentRef, className: classNames("k-dropdownlist k-picker", className, (_a3 = {}, _a3["k-picker-".concat(sizeMap2[size] || size)] = size, _a3["k-rounded-".concat(roundedMap2[rounded] || rounded)] = rounded, _a3["k-picker-".concat(fillMode)] = fillMode, _a3["k-focus"] = focused, _a3["k-disabled"] = disabled, _a3["k-invalid"] = !isValid, _a3["k-loading"] = loading, _a3["k-required"] = this.required, _a3)), style: !label ? style : __assign21(__assign21({}, style), { width: void 0 }), dir, onMouseDown: opened ? preventDefaultNonInputs : void 0, onFocus: this.handleFocus, onBlur: this.handleBlur, tabIndex: getTabIndex(tabIndex, disabled), accessKey: this.props.accessKey, onKeyDown: this.handleKeyDown, onKeyPress: this.handleKeyPress, onClick: disabled ? void 0 : this.handleWrapperClick, role: "combobox", "aria-required": this.required, "aria-disabled": disabled || void 0, "aria-haspopup": "listbox", "aria-expanded": opened || false, "aria-owns": this.base.listBoxId, "aria-activedescendant": opened ? "option-" + this.base.guid + "-" + (selectedIndex + (virtual ? virtual.skip : 0)) : void 0, "aria-label": this.props.ariaLabel || this.props.label, "aria-labelledby": this.props.ariaLabelledBy, "aria-describedby": this.props.ariaDescribedBy, id: this.props.id, title: this.props.title },
      valueElement,
      loading && React56.createElement("span", { className: "k-icon k-i-loading k-input-loading-icon", key: "loading" }),
      React56.createElement(Button, { tabIndex: -1, type: "button", "aria-hidden": true, size, fillMode, iconClass: iconClassName, className: "k-input-button", themeColor: "base", icon: !iconClassName ? "caret-alt-down" : void 0, onMouseDown: function(e) {
        return _this.state.focused && e.preventDefault();
      } }),
      this.dummySelect(value),
      this.renderListContainer()
    );
    return label ? React56.createElement(FloatingLabel, { label, editorValue: text, editorValid: isValid, editorDisabled: this.props.disabled, style: { width: style ? style.width : void 0 }, children: dropdownlist }) : dropdownlist;
  };
  DropDownListWithoutContext2.prototype.onNavigate = function(state, keyCode) {
    var _a3 = this.props, _b = _a3.data, data = _b === void 0 ? [] : _b, defaultItem = _a3.defaultItem, dataItemKey = _a3.dataItemKey, _c = _a3.virtual, virtual = _c === void 0 ? { skip: 0, total: 0, pageSize: 0 } : _c;
    var vs = this.base.vs;
    var value = this.value;
    var index = data.findIndex(function(i) {
      return areSame(i, value, dataItemKey);
    });
    var newIndex = this.base.navigation.navigate({
      current: virtual.skip + index,
      max: (vs.enabled ? virtual.total : data.length) - 1,
      min: defaultItem !== void 0 ? -1 : 0,
      keyCode
    });
    if (newIndex !== void 0) {
      this.handleItemSelect(newIndex, state);
    }
    this.applyState(state);
  };
  DropDownListWithoutContext2.prototype.focusedIndex = function() {
    var filterText = isPresent(this.props.filter) ? this.props.filter : this.state.text;
    var _a3 = this.props, _b = _a3.data, data = _b === void 0 ? [] : _b, _c = _a3.virtual, virtual = _c === void 0 ? { skip: 0 } : _c, dataItemKey = _a3.dataItemKey, textField = _a3.textField, focusedItemIndex = _a3.focusedItemIndex;
    var value = this.value;
    var selectedIndex = data.findIndex(function(i) {
      return areSame(i, value, dataItemKey);
    });
    var hasSelected = !(selectedIndex < 0 && !this.props.defaultItem);
    if (!hasSelected && filterText && virtual.skip === 0) {
      return focusedItemIndex ? focusedItemIndex(data, filterText, textField) : data.indexOf(getFocusedItem(data, filterText, textField));
    } else {
      return !hasSelected && virtual.skip === 0 ? 0 : void 0;
    }
  };
  DropDownListWithoutContext2.prototype.focusElement = function(element5) {
    var _this = this;
    this._skipFocusEvent = true;
    element5.focus();
    window.setTimeout(function() {
      return _this._skipFocusEvent = false;
    }, 30);
  };
  DropDownListWithoutContext2.prototype.triggerOnChange = function(item, state) {
    if (areSame(this.value, item, this.props.dataItemKey)) {
      return;
    }
    if (this.props.value === void 0) {
      state.data.value = item;
    }
    this._valueDuringOnChange = item;
    state.events.push({ type: "onChange" });
  };
  DropDownListWithoutContext2.prototype.applyState = function(state) {
    this.base.applyState(state);
    this._valueDuringOnChange = void 0;
  };
  DropDownListWithoutContext2.displayName = "DropDownList";
  DropDownListWithoutContext2.propTypes = __assign21({ delay: PropTypes25.number, ignoreCase: PropTypes25.bool, iconClassName: PropTypes25.string, defaultItem: PropTypes25.any, valueRender: PropTypes25.func, valueMap: PropTypes25.func, validationMessage: PropTypes25.string, required: PropTypes25.bool, id: PropTypes25.string, ariaLabelledBy: PropTypes25.string, ariaDescribedBy: PropTypes25.string, ariaLabel: PropTypes25.string, leftRightKeysNavigation: PropTypes25.bool, title: PropTypes25.string }, DropDownBase_default.propTypes);
  DropDownListWithoutContext2.defaultProps = __assign21(__assign21({ delay: 500, tabIndex: 0, ignoreCase: true }, DropDownBase_default.defaultProps), { required: false, size: "medium", rounded: "medium", fillMode: "solid" });
  return DropDownListWithoutContext2;
}(React56.Component);
var DropDownListPropsContext = createPropsContext();
var DropDownList = withPropsContext(DropDownListPropsContext, DropDownListWithoutContext);
DropDownList.displayName = "KendoReactDropDownList";

// node_modules/@progress/kendo-react-dropdowns/dist/es/ComboBox/ComboBox.js
var React59 = __toESM(require_react());
var PropTypes26 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/SearchBar.js
var React57 = __toESM(require_react());
var __extends20 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var SearchBar = function(_super) {
  __extends20(SearchBar2, _super);
  function SearchBar2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this._input = null;
    return _this;
  }
  Object.defineProperty(SearchBar2.prototype, "input", {
    get: function() {
      return this._input;
    },
    enumerable: false,
    configurable: true
  });
  SearchBar2.prototype.componentDidUpdate = function(prevProps) {
    var prevValue = prevProps.value;
    var prevSuggestedText = prevProps.suggestedText;
    var _a3 = this.props, value = _a3.value, suggestedText = _a3.suggestedText, focused = _a3.focused;
    var input = this.input;
    var valueChanged = prevValue !== value || suggestedText !== prevSuggestedText;
    var deleting = valueChanged && prevValue.startsWith(value) && !(prevSuggestedText && suggestedText && prevSuggestedText.endsWith(suggestedText));
    if (focused && input && document.activeElement !== input) {
      input.focus();
    }
    if (suggestedText && valueChanged && !deleting && input) {
      input.setSelectionRange(value.length - suggestedText.length, value.length);
    }
  };
  SearchBar2.prototype.render = function() {
    var _this = this;
    var _a3 = this.props, _b = _a3.expanded, expanded = _b === void 0 ? false : _b, disabled = _a3.disabled, _c = _a3.role, role = _c === void 0 ? "listbox" : _c, render = _a3.render;
    var searchbar = React57.createElement("input", { autoComplete: "off", id: this.props.id, type: "text", key: "searchbar", size: this.props.size, placeholder: this.props.placeholder, className: "k-input-inner", tabIndex: this.props.tabIndex, accessKey: this.props.accessKey, role, name: this.props.name, value: this.props.value, onChange: this.props.onChange, ref: function(input) {
      return _this._input = input;
    }, onKeyDown: this.props.onKeyDown, onFocus: this.props.onFocus, onBlur: this.props.onBlur, "aria-disabled": disabled || void 0, disabled: disabled || void 0, readOnly: this.props.readOnly || void 0, "aria-haspopup": "listbox", "aria-expanded": expanded, "aria-owns": this.props.owns, "aria-activedescendant": expanded ? this.props.activedescendant : void 0, "aria-describedby": this.props.ariaDescribedBy, "aria-labelledby": this.props.ariaLabelledBy });
    return render ? render.call(void 0, searchbar) : searchbar;
  };
  return SearchBar2;
}(React57.Component);
var SearchBar_default = SearchBar;

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/ClearButton.js
var React58 = __toESM(require_react());
var __extends21 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var ClearButton = function(_super) {
  __extends21(ClearButton2, _super);
  function ClearButton2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.onMouseDown = function(e) {
      return e.preventDefault();
    };
    return _this;
  }
  ClearButton2.prototype.render = function() {
    var title = provideLocalizationService(this).toLanguageString(clear, messages3[clear]);
    return React58.createElement(
      "span",
      { className: "k-clear-value", role: "button", onClick: this.props.onClick, onMouseDown: this.onMouseDown, tabIndex: -1, title, key: "clearbutton" },
      React58.createElement("span", { className: "k-icon k-i-x" })
    );
  };
  return ClearButton2;
}(React58.Component);
var ClearButton_default = ClearButton;
registerForLocalization(ClearButton);

// node_modules/@progress/kendo-react-dropdowns/dist/es/ComboBox/ComboBox.js
var __extends22 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign22 = function() {
  __assign22 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign22.apply(this, arguments);
};
var VALIDATION_MESSAGE2 = "Please enter a valid value!";
var sizeMap3 = kendoThemeMaps.sizeMap;
var roundedMap3 = kendoThemeMaps.roundedMap;
var ComboBoxWithoutContext = function(_super) {
  __extends22(ComboBoxWithoutContext2, _super);
  function ComboBoxWithoutContext2(props) {
    var _this = _super.call(this, props) || this;
    _this.state = {};
    _this.base = new DropDownBase_default(_this);
    _this._element = null;
    _this._inputId = guid();
    _this._suggested = "";
    _this._input = null;
    _this.itemHeight = 0;
    _this.focus = function() {
      if (_this._input) {
        _this._input.focus();
      }
    };
    _this.handleItemSelect = function(index, state) {
      var _a3 = _this.props, _b = _a3.data, data = _b === void 0 ? [] : _b, virtual = _a3.virtual, dataItemKey = _a3.dataItemKey;
      var skip = virtual ? virtual.skip : 0;
      var item = data[index - skip];
      var newSelected = !areSame(item, _this.value, dataItemKey);
      _this.triggerOnChange(item, state);
      if (_this.state.text !== void 0) {
        state.data.text = void 0;
      }
      if (newSelected) {
        _this.base.triggerPageChangeCornerItems(item, state);
      }
    };
    _this.componentRef = function(element5) {
      _this._element = element5;
      _this.base.wrapper = element5;
    };
    _this.toggleBtnClick = function(event) {
      var state = _this.base.initState();
      state.syntheticEvent = event;
      _this.base.togglePopup(state);
      _this.applyState(state);
    };
    _this.onScroll = function(event) {
      var _a3 = _this.base, vs = _a3.vs, list = _a3.list;
      vs.scrollHandler(event);
      var _b = _this.props, _c = _b.data, data = _c === void 0 ? [] : _c, groupField = _b.groupField;
      if (!groupField || !data.length) {
        return;
      }
      var itemHeight = _this.itemHeight = _this.itemHeight || (vs.enabled ? vs.itemHeight : list ? list.children[0].offsetHeight : 0);
      var target = event.target;
      var scrollTop = target.scrollTop - vs.skip * itemHeight;
      var group = data[0][groupField];
      for (var i = 1; i < data.length; i++) {
        if (itemHeight * i > scrollTop) {
          break;
        }
        if (data[i] && data[i][groupField]) {
          group = data[i][groupField];
        }
      }
      if (group !== _this.state.group) {
        _this.setState({
          group
        });
        if (_this.props.onGroupScroll) {
          _this.props.onGroupScroll.call(void 0, { group });
        }
      }
    };
    _this.handleItemClick = function(index, event) {
      _this.base.handleItemClick(index, event);
      _this._valueDuringOnChange = void 0;
    };
    _this.handleBlur = function(event) {
      if (_this.state.focused) {
        var state = _this.base.initState();
        state.data.focused = false;
        state.events.push({ type: "onBlur" });
        state.syntheticEvent = event;
        _this.applyValueOnRejectSuggestions(event.currentTarget.value, state);
      }
    };
    _this.onInputKeyDown = function(event) {
      var keyCode = event.keyCode;
      var opened = _this.props.opened !== void 0 ? _this.props.opened : _this.state.opened;
      var state = _this.base.initState();
      state.syntheticEvent = event;
      if (!event.altKey && (keyCode === Keys.up || keyCode === Keys.down)) {
        event.preventDefault();
        _this.onNavigate(state, keyCode);
        _this.applyState(state);
        return;
      }
      var togglePopup = function() {
        event.preventDefault();
        _this.base.togglePopup(state);
        _this.applyState(state);
      };
      if (opened) {
        if (event.altKey && keyCode === Keys.up) {
          togglePopup();
        } else if (keyCode === Keys.enter) {
          event.preventDefault();
          _this.applyValueOnEnter(event.currentTarget.value, state);
        } else if (keyCode === Keys.esc) {
          _this.applyValueOnRejectSuggestions(event.currentTarget.value, state);
        }
      } else if (event.altKey && keyCode === Keys.down) {
        togglePopup();
      }
    };
    _this.inputOnChange = function(event) {
      var state = _this.base.initState();
      state.syntheticEvent = event;
      var opened = _this.props.opened !== void 0 ? _this.props.opened : _this.state.opened;
      var input = event.currentTarget;
      var value = input.value;
      if (_this.props.suggest) {
        var selectionAtEnd = input.selectionEnd === value.length;
        var prevText = _this.props.filter !== void 0 ? _this.props.filter : _this.state.text;
        if (!isPresent(prevText)) {
          prevText = getItemValue(_this.value, _this.props.textField) || "";
        }
        var deletedSuggestion = prevText && prevText === value;
        var deleting = prevText && prevText.length > value.length;
        if (deletedSuggestion || deleting || !selectionAtEnd) {
          _this._suggested = "";
        } else {
          _this.suggestValue(value);
        }
      }
      if (_this.props.filter === void 0) {
        state.data.text = value;
      }
      if (_this.state.focusedItem !== void 0) {
        state.data.focusedItem = void 0;
      }
      if (!opened) {
        _this.base.togglePopup(state);
      }
      _this.base.filterChanged(value, state);
      _this.applyState(state);
    };
    _this.clearButtonClick = function(event) {
      var state = _this.base.initState();
      state.syntheticEvent = event;
      event.stopPropagation();
      _this._suggested = "";
      _this.base.filterChanged("", state);
      if (_this.props.filter === void 0 && _this.state.text !== void 0) {
        state.data.text = void 0;
      }
      _this.triggerOnChange(null, state);
      var opened = _this.props.opened !== void 0 ? _this.props.opened : _this.state.opened;
      if (opened) {
        _this.base.togglePopup(state);
      }
      _this.applyState(state);
    };
    _this.setValidity = function() {
      if (_this._input && _this._input.setCustomValidity) {
        _this._input.setCustomValidity(_this.validity.valid ? "" : _this.props.validationMessage || VALIDATION_MESSAGE2);
      }
    };
    validatePackage2(packageMetadata4);
    return _this;
  }
  Object.defineProperty(ComboBoxWithoutContext2.prototype, "element", {
    get: function() {
      return this._element;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(ComboBoxWithoutContext2.prototype, "value", {
    get: function() {
      if (this._valueDuringOnChange !== void 0) {
        return this._valueDuringOnChange;
      } else if (this.props.value !== void 0) {
        return this.props.value;
      } else if (this.state.value !== void 0) {
        return this.state.value;
      } else if (this.props.defaultValue !== void 0) {
        return this.props.defaultValue;
      }
      return void 0;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(ComboBoxWithoutContext2.prototype, "index", {
    get: function() {
      var _a3 = this.props, _b = _a3.data, data = _b === void 0 ? [] : _b, dataItemKey = _a3.dataItemKey;
      var value = this.value;
      return data.findIndex(function(i) {
        return areSame(i, value, dataItemKey);
      });
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(ComboBoxWithoutContext2.prototype, "name", {
    get: function() {
      return this.props.name;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(ComboBoxWithoutContext2.prototype, "validity", {
    get: function() {
      var customError = this.props.validationMessage !== void 0;
      var isValid = !this.required || this.value !== null && this.value !== "" && this.value !== void 0;
      var valid = this.props.valid !== void 0 ? this.props.valid : isValid;
      return {
        customError,
        valid,
        valueMissing: this.value === null
      };
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(ComboBoxWithoutContext2.prototype, "validityStyles", {
    get: function() {
      return this.props.validityStyles !== void 0 ? this.props.validityStyles : ComboBoxWithoutContext2.defaultProps.validityStyles;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(ComboBoxWithoutContext2.prototype, "required", {
    get: function() {
      return this.props.required !== void 0 ? this.props.required : ComboBoxWithoutContext2.defaultProps.required;
    },
    enumerable: false,
    configurable: true
  });
  ComboBoxWithoutContext2.prototype.componentDidUpdate = function(prevProps, prevState) {
    var _a3 = this.props, _b = _a3.data, data = _b === void 0 ? [] : _b, dataItemKey = _a3.dataItemKey, virtual = _a3.virtual;
    var prevTotal = prevProps.virtual ? prevProps.virtual.total : 0;
    var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
    var prevOpened = prevProps.opened !== void 0 ? prevProps.opened : prevState.opened;
    var opening = !prevOpened && opened;
    var selectedItem = this.value;
    this._valueOnDidUpdate = selectedItem;
    if (virtual && virtual.total !== prevTotal) {
      this.base.vs.calcScrollElementHeight();
      this.base.vs.reset();
    } else {
      var prevSelectedItem = prevProps.value !== void 0 ? prevProps.value : prevState.value;
      var selectedItemIndex = data.findIndex(function(i) {
        return areSame(i, selectedItem, dataItemKey);
      });
      var selectedItemChanged = !areSame(prevSelectedItem, selectedItem, dataItemKey);
      if (opening && virtual) {
        this.base.scrollToVirtualItem(virtual, selectedItemIndex);
      } else if (opening && !virtual) {
        this.base.scrollToItem(selectedItemIndex);
      } else if (opened && prevOpened && selectedItem && selectedItemChanged) {
        this.base.scrollToItem(selectedItemIndex);
      }
    }
    if (opening && this._input) {
      this._input.focus();
    }
    this.setValidity();
  };
  ComboBoxWithoutContext2.prototype.componentDidMount = function() {
    this.base.didMount();
    this.setValidity();
  };
  ComboBoxWithoutContext2.prototype.render = function() {
    var _a3;
    var _b = this.props, dir = _b.dir, disabled = _b.disabled, _c = _b.clearButton, clearButton = _c === void 0 ? ComboBoxWithoutContext2.defaultProps.clearButton : _c, label = _b.label, textField = _b.textField, className = _b.className, style = _b.style, loading = _b.loading, iconClassName = _b.iconClassName, virtual = _b.virtual, size = _b.size, rounded = _b.rounded, fillMode = _b.fillMode;
    var isValid = !this.validityStyles || this.validity.valid;
    var text = this.props.filter !== void 0 ? this.props.filter : this.state.text;
    var selectedItemText = getItemValue(this.value, textField);
    var inputText = isPresent(text) ? text : selectedItemText;
    var renderClearButton = clearButton && (!!inputText || isPresent(this.value));
    var base = this.base;
    var vs = base.vs;
    var id = this.props.id || this._inputId;
    vs.enabled = virtual !== void 0;
    if (virtual !== void 0) {
      vs.skip = virtual.skip;
      vs.total = virtual.total;
      vs.pageSize = virtual.pageSize;
    }
    var combobox = React59.createElement(
      "span",
      { className: classNames("k-combobox k-input", (_a3 = {}, _a3["k-input-".concat(sizeMap3[size] || size)] = size, _a3["k-rounded-".concat(roundedMap3[rounded] || rounded)] = rounded, _a3["k-input-".concat(fillMode)] = fillMode, _a3["k-invalid"] = !isValid, _a3["k-loading"] = loading, _a3["k-required"] = this.required, _a3["k-disabled"] = disabled, _a3), className), ref: this.componentRef, style: !label ? style : __assign22(__assign22({}, style), { width: void 0 }), dir },
      this.renderSearchBar(inputText || "", id),
      renderClearButton && !loading && React59.createElement(ClearButton_default, { onClick: this.clearButtonClick, key: "clearbutton" }),
      loading && React59.createElement("span", { className: "k-icon k-i-loading k-input-loading-icon", key: "loading" }),
      React59.createElement(Button, { tabIndex: -1, type: "button", icon: !iconClassName ? "caret-alt-down" : void 0, iconClass: iconClassName, size, fillMode, rounded: null, themeColor: "base", className: "k-input-button", onClick: this.toggleBtnClick, onMouseDown: function(e) {
        return e.preventDefault();
      } }),
      this.renderListContainer()
    );
    return label ? React59.createElement(FloatingLabel, { label, editorId: id, editorValue: inputText, editorValid: isValid, editorDisabled: disabled, style: { width: style ? style.width : void 0 }, children: combobox }) : combobox;
  };
  ComboBoxWithoutContext2.prototype.onNavigate = function(state, keyCode) {
    var _a3 = this.props, _b = _a3.data, data = _b === void 0 ? [] : _b, _c = _a3.virtual, virtual = _c === void 0 ? { skip: 0 } : _c;
    var text = this.props.filter ? this.props.filter : this.state.text;
    var focusedIndex = this.getFocusedIndex();
    var vs = this.base.vs;
    var value = this.value;
    this._suggested = "";
    if (focusedIndex !== -1 && !isPresent(value)) {
      this.handleItemSelect(focusedIndex, state);
    } else if (text === "") {
      this.handleItemSelect(0, state);
    } else {
      var currentIndex = virtual.skip + focusedIndex;
      var newIndex = this.base.navigation.navigate({
        keyCode,
        current: currentIndex,
        max: (vs.enabled ? vs.total : data.length) - 1,
        min: 0
      });
      if (newIndex !== void 0) {
        this.handleItemSelect(newIndex, state);
      }
    }
  };
  ComboBoxWithoutContext2.prototype.applyValueOnEnter = function(value, state) {
    var _a3;
    var _b = this.props, _c = _b.data, data = _c === void 0 ? [] : _c, textField = _b.textField, allowCustom = _b.allowCustom;
    var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
    var currentValueText = getItemValue(this.value, textField);
    var valueIndex = currentValueText === value ? this.index : getItemIndexByText(data, value, textField);
    var itemSelected = valueIndex !== -1;
    var newSelected = void 0;
    this._suggested = "";
    if (itemSelected) {
      newSelected = data[valueIndex];
    } else {
      if (allowCustom) {
        newSelected = textField !== void 0 ? (_a3 = {}, _a3[textField] = value, _a3) : value;
      } else {
        return this.selectFocusedItem(value, state);
      }
    }
    this.triggerOnChange(newSelected, state);
    if (opened) {
      this.base.togglePopup(state);
    }
    if (this.props.filter === void 0 && this.state.text !== void 0) {
      state.data.text = void 0;
    }
    this.applyState(state);
  };
  ComboBoxWithoutContext2.prototype.applyValueOnRejectSuggestions = function(text, state) {
    var _a3;
    var _b = this.props, _c = _b.data, data = _c === void 0 ? [] : _c, textField = _b.textField, allowCustom = _b.allowCustom;
    var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
    var valueItemText = getItemValue(this.value, textField);
    this._suggested = "";
    if (text === valueItemText || text === "" && !isPresent(valueItemText)) {
      if (opened) {
        this.base.togglePopup(state);
      }
      return this.applyState(state);
    }
    var valueIndex = getItemIndexByText(data, text, textField, true);
    var itemSelected = valueIndex !== -1;
    var newSelected = null;
    if (itemSelected) {
      newSelected = data[valueIndex];
    } else if (allowCustom) {
      newSelected = text ? textField ? (_a3 = {}, _a3[textField] = text, _a3) : text : null;
    }
    this.triggerOnChange(newSelected, state);
    if (this.state.text !== void 0) {
      state.data.text = void 0;
      this.base.filterChanged("", state);
    }
    if (opened) {
      this.base.togglePopup(state);
    }
    this.applyState(state);
  };
  ComboBoxWithoutContext2.prototype.selectFocusedItem = function(text, state) {
    var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
    var _a3 = this.props, _b = _a3.data, data = _b === void 0 ? [] : _b, textField = _a3.textField, _c = _a3.virtual, virtual = _c === void 0 ? { skip: 0 } : _c, _d = _a3.focusedItemIndex, focusedItemIndex = _d === void 0 ? itemIndexStartsWith : _d;
    var skip = virtual.skip;
    var focusedIndex = text === "" && skip === 0 ? 0 : focusedItemIndex(data, text, textField);
    if (focusedIndex !== -1) {
      this.handleItemSelect(focusedIndex + skip, state);
    } else {
      this.triggerOnChange(null, state);
      if (this.state.text !== void 0) {
        state.data.text = void 0;
      }
    }
    if (opened) {
      this.base.togglePopup(state);
    }
    return this.applyState(state);
  };
  ComboBoxWithoutContext2.prototype.renderListContainer = function() {
    var _a3;
    var base = this.base;
    var _b = this.props, dir = _b.dir, header = _b.header, footer = _b.footer, _c = _b.data, data = _c === void 0 ? [] : _c, groupField = _b.groupField, size = _b.size, list = _b.list, virtual = _b.virtual;
    var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
    var popupSettings = base.getPopupSettings();
    var popupWidth = popupSettings.width !== void 0 ? popupSettings.width : base.popupWidth;
    var group = this.state.group;
    if (group === void 0 && groupField !== void 0) {
      group = getItemValue(data[0], groupField);
    }
    return React59.createElement(
      ListContainer_default,
      { width: popupWidth, popupSettings: {
        animate: popupSettings.animate,
        anchor: this.element,
        show: opened,
        popupClass: classNames(popupSettings.popupClass, "k-list-container"),
        className: popupSettings.className,
        appendTo: popupSettings.appendTo
      }, dir: dir !== void 0 ? dir : this.base.dirCalculated, itemsCount: [data.length] },
      React59.createElement(
        "div",
        { className: classNames((_a3 = {}, _a3["k-list"] = !list, _a3["k-list-".concat(sizeMap3[size] || size)] = !list && size, _a3["k-virtual-list"] = virtual, _a3["k-data-table"] = list, _a3["k-table-".concat(sizeMap3[size] || size)] = list && size, _a3)) },
        header && React59.createElement("div", { className: "k-table-header" }, header),
        !list && group && React59.createElement("div", { className: "k-list-group-sticky-header" }, group),
        this.renderList(),
        footer && React59.createElement("div", { className: "k-list-footer" }, footer)
      )
    );
  };
  ComboBoxWithoutContext2.prototype.renderList = function() {
    var _a3;
    var _this = this;
    var base = this.base;
    var _b = this.props, textField = _b.textField, dataItemKey = _b.dataItemKey, listNoDataRender = _b.listNoDataRender, itemRender = _b.itemRender, _c = _b.data, data = _c === void 0 ? [] : _c, _d = _b.virtual, virtual = _d === void 0 ? { skip: 0 } : _d;
    var popupSettings = base.getPopupSettings();
    var vs = base.vs;
    var skip = virtual.skip;
    var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
    var translate = "translateY(".concat(vs.translate, "px)");
    var focusedIndex = opened ? this.getFocusedIndex() : void 0;
    var text = this.props.filter !== void 0 ? this.props.filter : this.state.text;
    var selectedItemText = getItemValue(this.value, textField);
    var value = isPresent(text) && text !== selectedItemText ? null : this.value;
    var ListComponent = this.props.list || List_default;
    return React59.createElement(ListComponent, { id: base.listBoxId, virtual: Boolean(virtual), show: opened, data, focusedIndex, value, textField, valueField: dataItemKey, groupField: this.props.groupField, optionsGuid: base.guid, listRef: function(list) {
      vs.list = _this.base.list = list;
      _this.itemHeight = 0;
    }, wrapperStyle: { maxHeight: popupSettings.height }, wrapperCssClass: classNames("k-list-content", (_a3 = {}, _a3["k-list-scroller"] = !virtual, _a3)), listStyle: vs.enabled ? { transform: translate } : void 0, key: "listkey", skip, onClick: this.handleItemClick, itemRender, noDataRender: listNoDataRender, onMouseDown: function(e) {
      return e.preventDefault();
    }, onScroll: this.onScroll, wrapperRef: vs.scrollerRef, scroller: this.base.renderScrollElement() });
  };
  ComboBoxWithoutContext2.prototype.renderSearchBar = function(text, id) {
    var _this = this;
    var _a3 = this.props, placeholder = _a3.placeholder, tabIndex = _a3.tabIndex, disabled = _a3.disabled, _b = _a3.data, data = _b === void 0 ? [] : _b, dataItemKey = _a3.dataItemKey, _c = _a3.virtual, virtual = _c === void 0 ? { skip: 0 } : _c;
    var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
    var value = this.value;
    var selectedIndex = Math.max(0, data.findIndex(function(i) {
      return areSame(i, value, dataItemKey);
    }));
    if (this._suggested && !areSame(this._valueOnDidUpdate, value, dataItemKey)) {
      this._suggested = "";
    }
    return React59.createElement(SearchBar_default, { id, placeholder, tabIndex: tabIndex || void 0, accessKey: this.props.accessKey, value: text + this._suggested, suggestedText: this._suggested, ref: function(el) {
      return _this._input = el && el.input;
    }, onKeyDown: this.onInputKeyDown, onChange: this.inputOnChange, onFocus: this.base.handleFocus, onBlur: this.handleBlur, disabled, expanded: opened, owns: this.base.listBoxId, activedescendant: "option-".concat(this.base.guid, "-").concat(selectedIndex + virtual.skip), role: "combobox", ariaLabelledBy: this.props.ariaLabelledBy, ariaDescribedBy: this.props.ariaDescribedBy, render: this.props.valueRender });
  };
  ComboBoxWithoutContext2.prototype.triggerOnChange = function(item, state) {
    var value = this.value;
    if (!isPresent(value) && !isPresent(item) || areSame(value, item, this.props.dataItemKey)) {
      return;
    }
    if (this.props.value === void 0) {
      state.data.value = item;
    }
    this._valueDuringOnChange = item;
    state.events.push({ type: "onChange" });
  };
  ComboBoxWithoutContext2.prototype.getFocusedIndex = function() {
    var value = this.value;
    var _a3 = this.props, _b = _a3.data, data = _b === void 0 ? [] : _b, textField = _a3.textField, dataItemKey = _a3.dataItemKey, _c = _a3.virtual, virtual = _c === void 0 ? { skip: 0 } : _c, _d = _a3.focusedItemIndex, focusedItemIndex = _d === void 0 ? itemIndexStartsWith : _d;
    var text = this.props.filter ? this.props.filter : this.state.text;
    if (isPresent(value) && text === void 0) {
      return data.findIndex(function(i) {
        return areSame(i, value, dataItemKey);
      });
    } else if (text) {
      return focusedItemIndex(data, text, textField);
    } else {
      return virtual.skip === 0 ? 0 : -1;
    }
  };
  ComboBoxWithoutContext2.prototype.suggestValue = function(value) {
    var _a3 = this.props, data = _a3.data, textField = _a3.textField;
    this._suggested = suggestValue(value, data, textField);
  };
  ComboBoxWithoutContext2.prototype.applyState = function(state) {
    this.base.applyState(state);
    this._valueDuringOnChange = void 0;
  };
  ComboBoxWithoutContext2.displayName = "ComboBox";
  ComboBoxWithoutContext2.propTypes = __assign22(__assign22({}, DropDownBase_default.propTypes), { size: PropTypes26.oneOf([null, "small", "medium", "large"]), rounded: PropTypes26.oneOf([null, "small", "medium", "large", "full"]), fillMode: PropTypes26.oneOf([null, "solid", "flat", "outline"]), dataItemKey: PropTypes26.string, groupField: PropTypes26.string, suggest: PropTypes26.bool, placeholder: PropTypes26.string, allowCustom: PropTypes26.bool, clearButton: PropTypes26.bool, iconClassName: PropTypes26.string, validationMessage: PropTypes26.string, required: PropTypes26.bool, id: PropTypes26.string, ariaLabelledBy: PropTypes26.string, ariaDescribedBy: PropTypes26.string, list: PropTypes26.any, valueRender: PropTypes26.func });
  ComboBoxWithoutContext2.defaultProps = __assign22(__assign22({}, DropDownBase_default.defaultProps), { size: "medium", rounded: "medium", fillMode: "solid", allowCustom: false, clearButton: true, required: false });
  return ComboBoxWithoutContext2;
}(React59.Component);
var ComboBoxPropsContext = createPropsContext();
var ComboBox = withPropsContext(ComboBoxPropsContext, ComboBoxWithoutContext);
ComboBox.displayName = "KendoReactComboBox";

// node_modules/@progress/kendo-react-dropdowns/dist/es/AutoComplete/AutoComplete.js
var React60 = __toESM(require_react());
var PropTypes27 = __toESM(require_prop_types());
var __extends23 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign23 = function() {
  __assign23 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign23.apply(this, arguments);
};
var VALIDATION_MESSAGE3 = "Please enter a valid value!";
var sizeMap4 = kendoThemeMaps.sizeMap;
var roundedMap4 = kendoThemeMaps.roundedMap;
var AutoCompleteWithoutContext = function(_super) {
  __extends23(AutoCompleteWithoutContext2, _super);
  function AutoCompleteWithoutContext2(props) {
    var _this = _super.call(this, props) || this;
    _this.state = {};
    _this.base = new DropDownBase_default(_this);
    _this._element = null;
    _this._inputId = guid();
    _this._suggested = "";
    _this._input = null;
    _this.focus = function() {
      if (_this._input) {
        _this._input.focus();
      }
    };
    _this.handleItemSelect = function(index, state) {
      var _a3 = _this.props.data, data = _a3 === void 0 ? [] : _a3;
      var newText = getItemValue(data[index], _this.props.textField);
      _this.triggerOnChange(newText, state);
    };
    _this.itemFocus = function(index, state) {
      var _a3 = _this.props, _b = _a3.data, data = _b === void 0 ? [] : _b, textField = _a3.textField;
      var focusedItem = data[index];
      if (!areSame(_this.state.focusedItem, focusedItem, textField)) {
        state.data.focusedItem = focusedItem;
      }
    };
    _this.togglePopup = function(state) {
      _this.base.togglePopup(state);
    };
    _this.setValidity = function() {
      if (_this._input && _this._input.setCustomValidity) {
        _this._input.setCustomValidity(_this.validity.valid ? "" : _this.props.validationMessage || VALIDATION_MESSAGE3);
      }
    };
    _this.handleItemClick = function(index, event) {
      _this.base.handleItemClick(index, event);
      _this._valueDuringOnChange = void 0;
    };
    _this.onChangeHandler = function(event) {
      var base = _this.base;
      var state = base.initState();
      var input = event.currentTarget;
      var value = input.value;
      var selectionAtEnd = input.selectionEnd === value.length;
      state.syntheticEvent = event;
      var prevSuggestion = _this._suggested;
      var prevValue = _this.value;
      var prevUserInput = prevValue && prevValue.substring(0, prevValue.length - prevSuggestion.length);
      var deletedSuggestion = prevUserInput && prevUserInput === value;
      var deleting = prevUserInput && prevUserInput.length > value.length;
      var suggest = _this.props.suggest;
      var opened = _this.props.opened !== void 0 ? _this.props.opened : _this.state.opened;
      if (suggest !== void 0 && suggest !== false) {
        if (deletedSuggestion || deleting || !selectionAtEnd) {
          _this._suggested = "";
        } else {
          _this.suggestValue(value);
        }
        var newValue = value + _this._suggested;
        var suggestion = { userInput: value, value: _this._suggested };
        _this.triggerOnChange(newValue, state, { suggestion });
      } else {
        _this._suggested = "";
        _this.triggerOnChange(value, state);
      }
      if (!opened && value || opened && !value) {
        _this.togglePopup(state);
      }
      state.data.focusedItem = void 0;
      _this.applyState(state);
    };
    _this.clearButtonClick = function(event) {
      var base = _this.base;
      var state = base.initState();
      var opened = _this.props.opened !== void 0 ? _this.props.opened : _this.state.opened;
      state.syntheticEvent = event;
      var newValue = "";
      _this._suggested = "";
      _this.triggerOnChange(newValue, state);
      if (_this.state.focusedItem !== void 0) {
        state.data.focusedItem = void 0;
      }
      if (opened) {
        _this.togglePopup(state);
      }
      _this.applyState(state);
    };
    _this.onInputKeyDown = function(event) {
      var keyCode = event.keyCode;
      var opened = _this.props.opened !== void 0 ? _this.props.opened : _this.state.opened;
      var state = _this.base.initState();
      state.syntheticEvent = event;
      var preventDefault4 = function() {
        if (opened) {
          event.preventDefault();
        }
      };
      if (keyCode === Keys.enter || keyCode === Keys.esc) {
        preventDefault4();
        _this.applyInputValue(event.currentTarget.value, state, event.keyCode);
      } else if (keyCode === Keys.up || keyCode === Keys.down) {
        preventDefault4();
        _this.onNavigate(state, keyCode);
      }
    };
    _this.handleBlur = function(event) {
      if (_this.state.focused) {
        var state = _this.base.initState();
        state.data.focused = false;
        state.events.push({ type: "onBlur" });
        state.syntheticEvent = event;
        _this.applyInputValue(event.currentTarget.value, state);
      }
    };
    validatePackage2(packageMetadata4);
    return _this;
  }
  Object.defineProperty(AutoCompleteWithoutContext2.prototype, "element", {
    get: function() {
      return this._element;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AutoCompleteWithoutContext2.prototype, "value", {
    get: function() {
      if (this._valueDuringOnChange !== void 0) {
        return this._valueDuringOnChange;
      } else if (this.props.value !== void 0) {
        return this.props.value;
      } else if (this.state.value !== void 0) {
        return this.state.value;
      } else if (this.props.defaultValue !== void 0) {
        return this.props.defaultValue;
      }
      return "";
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AutoCompleteWithoutContext2.prototype, "name", {
    get: function() {
      return this.props.name;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AutoCompleteWithoutContext2.prototype, "validity", {
    get: function() {
      var customError = this.props.validationMessage !== void 0;
      var isValid = !this.required || this.value !== "";
      var valid = this.props.valid !== void 0 ? this.props.valid : isValid;
      return {
        customError,
        valid,
        valueMissing: this.value === null
      };
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AutoCompleteWithoutContext2.prototype, "validityStyles", {
    get: function() {
      return this.props.validityStyles !== void 0 ? this.props.validityStyles : AutoCompleteWithoutContext2.defaultProps.validityStyles;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(AutoCompleteWithoutContext2.prototype, "required", {
    get: function() {
      return this.props.required !== void 0 ? this.props.required : AutoCompleteWithoutContext2.defaultProps.required;
    },
    enumerable: false,
    configurable: true
  });
  AutoCompleteWithoutContext2.prototype.componentDidUpdate = function(prevProps, prevState) {
    var _a3 = this.props.data, data = _a3 === void 0 ? [] : _a3;
    var _b = prevProps.data, prevData = _b === void 0 ? [] : _b;
    var focusedIndex = this.focusedIndex();
    var focusedItem = data[focusedIndex];
    var dataChanged = prevData !== data;
    var focusedItemChanged = focusedItem !== void 0 && prevState.focusedItem !== focusedItem;
    var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
    var prevOpened = prevProps.opened !== void 0 ? prevProps.opened : prevState.opened;
    var opening = !prevOpened && opened;
    if (opened && (focusedItemChanged || dataChanged) || opening) {
      this.base.scrollToItem(focusedIndex);
    }
    this.setValidity();
  };
  AutoCompleteWithoutContext2.prototype.componentDidMount = function() {
    this.base.didMount();
    this.setValidity();
  };
  AutoCompleteWithoutContext2.prototype.render = function() {
    var _a3;
    var _this = this;
    var _b = this.props, dir = _b.dir, disabled = _b.disabled, label = _b.label, className = _b.className, style = _b.style, loading = _b.loading, suggest = _b.suggest, size = _b.size, rounded = _b.rounded, fillMode = _b.fillMode;
    var isValid = !this.validityStyles || this.validity.valid;
    var base = this.base;
    var value = this.value;
    var renderClearButton = this.props.clearButton !== false && !loading && !!value;
    var id = this.props.id || this._inputId;
    if (typeof suggest === "string") {
      this._suggested = suggest;
    }
    var autoComplete = React60.createElement(
      "span",
      { className: classNames("k-autocomplete k-input", className, (_a3 = {}, _a3["k-input-".concat(sizeMap4[size] || size)] = size, _a3["k-rounded-".concat(roundedMap4[rounded] || rounded)] = rounded, _a3["k-input-".concat(fillMode)] = fillMode, _a3["k-invalid"] = !isValid, _a3["k-loading"] = loading, _a3["k-required"] = this.required, _a3["k-disabled"] = disabled, _a3)), ref: function(element5) {
        _this._element = element5;
        base.wrapper = element5;
      }, style: !label ? style : __assign23(__assign23({}, style), { width: void 0 }), dir },
      this.renderSearchBar(value || "", id),
      loading && React60.createElement("span", { className: "k-icon k-i-loading k-input-loading-icon" }),
      renderClearButton && !loading && React60.createElement(ClearButton_default, { onClick: this.clearButtonClick, key: "clearbutton" }),
      this.renderListContainer()
    );
    return label ? React60.createElement(FloatingLabel, { label, editorId: id, editorValue: value, editorValid: isValid, editorDisabled: disabled, style: { width: style ? style.width : void 0 }, children: autoComplete }) : autoComplete;
  };
  AutoCompleteWithoutContext2.prototype.onNavigate = function(state, keyCode) {
    var _this = this;
    var typedText = this.value;
    var _a3 = this.props, _b = _a3.data, data = _b === void 0 ? [] : _b, textField = _a3.textField, focusedItemIndex = _a3.focusedItemIndex;
    var focusedIndex = this.state.focusedItem !== void 0 ? data.findIndex(function(i) {
      return areSame(i, _this.state.focusedItem, textField);
    }) : focusedItemIndex ? focusedItemIndex(data, typedText, textField) : data.indexOf(getFocusedItem(data, typedText, textField));
    var newFocused = this.base.navigation.navigate({
      keyCode,
      current: focusedIndex,
      max: data.length - 1,
      min: 0
    });
    if (newFocused !== void 0) {
      this.itemFocus(newFocused, state);
    }
    this.applyState(state);
  };
  AutoCompleteWithoutContext2.prototype.applyInputValue = function(value, state, eventKey) {
    var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
    var _a3 = this.props, _b = _a3.data, data = _b === void 0 ? [] : _b, textField = _a3.textField;
    this._suggested = "";
    if (opened && eventKey === Keys.enter) {
      var newValue = getItemValue(data[this.focusedIndex(value)], textField);
      this.triggerOnChange(newValue, state);
    }
    if (opened) {
      this.togglePopup(state);
    }
    this.applyState(state);
  };
  AutoCompleteWithoutContext2.prototype.renderSearchBar = function(value, id) {
    var _this = this;
    var base = this.base;
    var _a3 = this.props, placeholder = _a3.placeholder, tabIndex = _a3.tabIndex, disabled = _a3.disabled, readonly = _a3.readonly;
    var focused = this.state.focused;
    var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
    return React60.createElement(SearchBar_default, { id, placeholder, tabIndex: tabIndex || void 0, accessKey: this.props.accessKey, value, suggestedText: this._suggested, focused, name: this.props.name, ref: function(searchbar) {
      return _this._input = searchbar && searchbar.input;
    }, onKeyDown: this.onInputKeyDown, onChange: this.onChangeHandler, onFocus: base.handleFocus, onBlur: this.handleBlur, disabled, readOnly: readonly, expanded: opened, owns: base.listBoxId, activedescendant: "option-" + base.guid + "-" + this.focusedIndex(), role: "combobox", ariaLabelledBy: this.props.ariaLabelledBy, ariaDescribedBy: this.props.ariaDescribedBy, render: this.props.valueRender });
  };
  AutoCompleteWithoutContext2.prototype.renderListContainer = function() {
    var _a3;
    var base = this.base;
    var _b = this.props, dir = _b.dir, header = _b.header, footer = _b.footer, _c = _b.data, data = _c === void 0 ? [] : _c, size = _b.size;
    var popupSettings = base.getPopupSettings();
    var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
    var popupWidth = popupSettings.width !== void 0 ? popupSettings.width : base.popupWidth;
    return React60.createElement(
      ListContainer_default,
      { width: popupWidth, popupSettings: {
        animate: popupSettings.animate,
        anchor: this.element,
        show: opened,
        popupClass: classNames(popupSettings.popupClass, "k-list-container"),
        className: popupSettings.className,
        appendTo: popupSettings.appendTo
      }, dir: dir !== void 0 ? dir : this.base.dirCalculated, itemsCount: [data.length] },
      header && React60.createElement("div", { className: "k-list-header" }, header),
      React60.createElement("div", { className: classNames("k-list", (_a3 = {}, _a3["k-list-".concat(sizeMap4[size] || size)] = size, _a3)) }, this.renderList()),
      footer && React60.createElement("div", { className: "k-list-footer" }, footer)
    );
  };
  AutoCompleteWithoutContext2.prototype.renderList = function() {
    var base = this.base;
    var popupSettings = base.getPopupSettings();
    var _a3 = this.props, textField = _a3.textField, _b = _a3.data, data = _b === void 0 ? [] : _b, listNoDataRender = _a3.listNoDataRender, itemRender = _a3.itemRender;
    var value = this.value;
    var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
    return React60.createElement(List_default, { id: base.listBoxId, show: opened, data: data.slice(), focusedIndex: this.focusedIndex(), value, textField, valueField: textField, highlightSelected: false, optionsGuid: base.guid, listRef: function(list) {
      return base.list = list;
    }, wrapperStyle: { maxHeight: popupSettings.height }, wrapperCssClass: "k-list-content", onClick: this.handleItemClick, itemRender, noDataRender: listNoDataRender, onMouseDown: function(e) {
      return e.preventDefault();
    } });
  };
  AutoCompleteWithoutContext2.prototype.triggerOnChange = function(newValue, state, eventArgs) {
    if (this.value === newValue && !eventArgs) {
      return;
    }
    state.data.value = newValue;
    this._valueDuringOnChange = newValue;
    state.events.push(__assign23({ type: "onChange" }, eventArgs || {}));
  };
  AutoCompleteWithoutContext2.prototype.applyState = function(state) {
    this.base.applyState(state);
    this._valueDuringOnChange = void 0;
  };
  AutoCompleteWithoutContext2.prototype.suggestValue = function(value) {
    this._suggested = "";
    if (value) {
      var _a3 = this.props, _b = _a3.data, data = _b === void 0 ? [] : _b, textField = _a3.textField;
      var suggestedItem = data[itemIndexStartsWith(data, value, textField)];
      if (suggestedItem) {
        var suggestedText = getItemValue(suggestedItem, textField);
        if (value.toLowerCase() !== suggestedText.toLowerCase()) {
          this._suggested = suggestedText.substring(value.length);
        }
      }
    }
  };
  AutoCompleteWithoutContext2.prototype.focusedIndex = function(value) {
    var _this = this;
    var _a3 = this.props, _b = _a3.data, data = _b === void 0 ? [] : _b, textField = _a3.textField, focusedItemIndex = _a3.focusedItemIndex;
    var inputValue = value !== void 0 ? value : this.value;
    return this.state.focusedItem !== void 0 ? data.findIndex(function(i) {
      return areSame(i, _this.state.focusedItem, textField);
    }) : focusedItemIndex ? focusedItemIndex(data, inputValue, textField) : Math.max(0, data.indexOf(getFocusedItem(data, inputValue, textField)));
  };
  AutoCompleteWithoutContext2.displayName = "AutoComplete";
  AutoCompleteWithoutContext2.propTypes = __assign23(__assign23({}, DropDownBase_default.basicPropTypes), { size: PropTypes27.oneOf([null, "small", "medium", "large"]), rounded: PropTypes27.oneOf([null, "small", "medium", "large", "full"]), fillMode: PropTypes27.oneOf([null, "solid", "flat", "outline"]), suggest: PropTypes27.oneOfType([PropTypes27.bool, PropTypes27.string]), placeholder: PropTypes27.string, value: PropTypes27.string, defaultValue: PropTypes27.string, validationMessage: PropTypes27.string, required: PropTypes27.bool, readonly: PropTypes27.bool, clearButton: PropTypes27.bool, valueRender: PropTypes27.func, id: PropTypes27.string, ariaLabelledBy: PropTypes27.string, ariaDescribedBy: PropTypes27.string });
  AutoCompleteWithoutContext2.defaultProps = __assign23(__assign23({}, DropDownBase_default.defaultProps), { size: "medium", rounded: "medium", fillMode: "solid" });
  return AutoCompleteWithoutContext2;
}(React60.Component);
var AutoCompletePropsContext = createPropsContext();
var AutoComplete = withPropsContext(AutoCompletePropsContext, AutoCompleteWithoutContext);
AutoComplete.displayName = "KendoReactAutoComplete";

// node_modules/@progress/kendo-react-dropdowns/dist/es/MultiSelect/MultiSelect.js
var React62 = __toESM(require_react());
var PropTypes28 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-dropdowns/dist/es/MultiSelect/TagList.js
var React61 = __toESM(require_react());
var __extends24 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var preventDefault2 = function(event) {
  return event.syntheticEvent.preventDefault();
};
var stopPropagation = function(event) {
  return event.syntheticEvent.stopPropagation();
};
var TagList = function(_super) {
  __extends24(TagList2, _super);
  function TagList2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  TagList2.prototype.render = function() {
    var _a3 = this.props, data = _a3.data, guid2 = _a3.guid, focused = _a3.focused, tagRender = _a3.tagRender, TagComponent = _a3.tag, onTagDelete = _a3.onTagDelete, size = _a3.size;
    return React61.createElement(
      React61.Fragment,
      null,
      data.map(function(tagData, index) {
        var tag = TagComponent ? React61.createElement(TagComponent, { key: tagData.text + index, tagData, guid: guid2, focusedTag: focused, onTagDelete }) : React61.createElement(Chip, { id: "tag-".concat(guid2, "-").concat(tagData.text.replace(/\s+/g, "-")), "aria-selected": true, role: "option", "aria-setsize": data.length, key: tagData.text + index, text: tagData.text, removable: true, onRemove: function(e) {
          return onTagDelete.call(void 0, tagData.data, e.syntheticEvent);
        }, onMouseDown: preventDefault2, onClick: stopPropagation, className: tagData === focused ? "k-focus" : void 0, size });
        return tagRender ? tagRender(tagData, tag) : tag;
      }),
      this.props.children
    );
  };
  return TagList2;
}(React61.Component);
var TagList_default = TagList;

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/settings.js
var ActiveDescendant;
(function(ActiveDescendant2) {
  ActiveDescendant2[ActiveDescendant2["PopupList"] = 0] = "PopupList";
  ActiveDescendant2[ActiveDescendant2["TagsList"] = 1] = "TagsList";
})(ActiveDescendant || (ActiveDescendant = {}));

// node_modules/@progress/kendo-react-dropdowns/dist/es/MultiSelect/MultiSelect.js
var __extends25 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign24 = function() {
  __assign24 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign24.apply(this, arguments);
};
var __spreadArray3 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var sizeMap5 = kendoThemeMaps.sizeMap;
var roundedMap5 = kendoThemeMaps.roundedMap;
var VALIDATION_MESSAGE4 = "Please enter a valid value!";
var preventDefault3 = function(event) {
  return event.preventDefault();
};
var isCustom = function(type) {
  return type === FocusedItemType.CustomItem;
};
var FocusedItemType;
(function(FocusedItemType2) {
  FocusedItemType2[FocusedItemType2["None"] = 0] = "None";
  FocusedItemType2[FocusedItemType2["ListItem"] = 1] = "ListItem";
  FocusedItemType2[FocusedItemType2["CustomItem"] = 2] = "CustomItem";
})(FocusedItemType || (FocusedItemType = {}));
var MultiSelectWithoutContext = function(_super) {
  __extends25(MultiSelectWithoutContext2, _super);
  function MultiSelectWithoutContext2(props) {
    var _this = _super.call(this, props) || this;
    _this.state = {
      activedescendant: ActiveDescendant.PopupList
    };
    _this._element = null;
    _this._valueItemsDuringOnChange = null;
    _this._inputId = guid();
    _this.base = new DropDownBase_default(_this);
    _this._tags = [];
    _this._input = null;
    _this._skipFocusEvent = false;
    _this.scrollToFocused = false;
    _this.focus = function() {
      if (_this._input) {
        _this._input.focus();
      }
    };
    _this.handleItemSelect = function(index, state) {
      var _a3 = _this.props, _b = _a3.data, data = _b === void 0 ? [] : _b, dataItemKey = _a3.dataItemKey, virtual = _a3.virtual;
      var skip = virtual ? virtual.skip : 0;
      var dataItem = data[index - skip];
      var indexInValue = _this.value.findIndex(function(i) {
        return areSame(i, dataItem, dataItemKey);
      });
      var newItems = [];
      if (indexInValue !== -1) {
        newItems = _this.value;
        newItems.splice(indexInValue, 1);
      } else {
        newItems = __spreadArray3(__spreadArray3([], _this.value, true), [dataItem], false);
      }
      var text = _this.props.filter !== void 0 ? _this.props.filter : _this.state.text;
      if (text) {
        if (_this.state.text) {
          state.data.text = "";
        }
        _this.base.filterChanged("", state);
      }
      if (_this.state.focusedIndex !== void 0) {
        state.data.focusedIndex = void 0;
      }
      _this.triggerOnChange(newItems, state);
      _this.base.triggerPageChangeCornerItems(dataItem, state);
    };
    _this.onTagDelete = function(itemsToRemove, event) {
      var opened = _this.props.opened !== void 0 ? _this.props.opened : _this.state.opened;
      var state = _this.base.initState();
      state.syntheticEvent = event;
      if (opened) {
        _this.base.togglePopup(state);
      }
      if (!_this.state.focused) {
        state.data.focused = true;
        _this.focus();
      }
      var selected = _this.value;
      removeDataItems(selected, itemsToRemove, _this.props.dataItemKey);
      _this.triggerOnChange(selected, state);
      _this.applyState(state);
    };
    _this.itemFocus = function(index, state) {
      var _a3 = _this.props, _b = _a3.data, data = _b === void 0 ? [] : _b, allowCustom = _a3.allowCustom, virtual = _a3.virtual;
      var skip = virtual ? virtual.skip : 0;
      var text = _this.props.filter !== void 0 ? _this.props.filter : _this.state.text;
      var focusedIndex = _this.getFocusedState().focusedIndex;
      var customItem = allowCustom && text;
      var nextFocusedItem = data[index - skip];
      if (nextFocusedItem && focusedIndex !== index) {
        if (_this.state.focusedIndex !== index) {
          state.data.focusedIndex = index;
          state.data.activedescendant = ActiveDescendant.PopupList;
        }
      } else if (customItem && index === -1) {
        if (_this.state.focusedIndex !== void 0) {
          state.data.focusedIndex = void 0;
        }
      }
      _this.base.triggerPageChangeCornerItems(nextFocusedItem, state);
    };
    _this.componentRef = function(element5) {
      _this._element = element5;
      _this.base.wrapper = element5;
    };
    _this.searchbarRef = function(searchbar) {
      var input = _this._input = searchbar && searchbar.input;
      if (input && _this.state.focused) {
        window.setTimeout(function() {
          return input.focus();
        }, 0);
      }
    };
    _this.onChangeHandler = function(event) {
      var state = _this.base.initState();
      var value = event.currentTarget.value;
      var opened = _this.props.opened !== void 0 ? _this.props.opened : _this.state.opened;
      state.syntheticEvent = event;
      if (_this.props.filter === void 0) {
        state.data.text = value;
      }
      state.data.focusedIndex = void 0;
      if (!opened) {
        _this.base.togglePopup(state);
      }
      _this.base.filterChanged(value, state);
      _this.applyState(state);
    };
    _this.clearButtonClick = function(event) {
      var opened = _this.props.opened !== void 0 ? _this.props.opened : _this.state.opened;
      var state = _this.base.initState();
      state.syntheticEvent = event;
      event.stopPropagation();
      if (_this.value.length > 0) {
        _this.triggerOnChange([], state);
      }
      if (_this.state.focusedIndex !== void 0) {
        state.data.focusedIndex = void 0;
      }
      if (opened) {
        _this.base.togglePopup(state);
      }
      var text = _this.props.filter !== void 0 ? _this.props.filter : _this.state.text;
      if (isPresent(text) && text !== "") {
        _this.base.filterChanged("", state);
      }
      if (_this.state.text) {
        state.data.text = "";
      }
      _this.applyState(state);
    };
    _this.onInputKeyDown = function(event) {
      var keyCode = event.keyCode;
      var text = _this.props.filter !== void 0 ? _this.props.filter : _this.state.text;
      var opened = _this.props.opened !== void 0 ? _this.props.opened : _this.state.opened;
      var focusedItem = _this.getFocusedState().focusedItem;
      var state = _this.base.initState();
      state.syntheticEvent = event;
      if (!text && _this.value.length > 0 && (keyCode === Keys.left || keyCode === Keys.right || keyCode === Keys.home || keyCode === Keys.end || keyCode === Keys.delete || keyCode === Keys.backspace)) {
        return _this.onTagsNavigate(event, state);
      }
      var togglePopup = function() {
        event.preventDefault();
        _this.base.togglePopup(state);
        _this.applyState(state);
      };
      if (opened) {
        if (event.altKey && keyCode === Keys.up) {
          togglePopup();
        } else if (keyCode === Keys.up || keyCode === Keys.down) {
          event.preventDefault();
          _this.onNavigate(state, keyCode);
        } else if (keyCode === Keys.enter) {
          event.preventDefault();
          if (_this.props.allowCustom && text && focusedItem === null) {
            _this.customItemSelect(event);
          } else {
            _this.selectFocusedItem(event);
          }
        } else if (keyCode === Keys.esc) {
          togglePopup();
        }
      } else if (event.altKey && keyCode === Keys.down) {
        togglePopup();
      }
    };
    _this.renderListContainer = function() {
      var _a3, _b;
      var base = _this.base;
      var _c = _this.props, header = _c.header, footer = _c.footer, allowCustom = _c.allowCustom, dir = _c.dir, _d = _c.data, data = _d === void 0 ? [] : _d, size = _c.size;
      var popupSettings = _this.base.getPopupSettings();
      var opened = _this.props.opened !== void 0 ? _this.props.opened : _this.state.opened;
      var text = _this.props.filter !== void 0 ? _this.props.filter : _this.state.text;
      var popupWidth = popupSettings.width !== void 0 ? popupSettings.width : base.popupWidth;
      var listContainerProps = {
        dir: dir !== void 0 ? dir : base.dirCalculated,
        width: popupWidth,
        popupSettings: {
          popupClass: classNames(popupSettings.popupClass, "k-list-container"),
          className: popupSettings.className,
          animate: popupSettings.animate,
          anchor: _this.element,
          show: opened,
          onOpen: _this.onPopupOpened,
          onClose: _this.onPopupClosed,
          appendTo: popupSettings.appendTo
        },
        itemsCount: [data.length, _this.value.length]
      };
      var focusedType = _this.getFocusedState().focusedType;
      var customItem = allowCustom && text && React62.createElement(
        "div",
        { className: classNames("k-list", (_a3 = {}, _a3["k-list-".concat(sizeMap5[size] || size)] = size, _a3)), key: "customitem", onClick: _this.customItemSelect, onMouseDown: preventDefault3 },
        React62.createElement(
          "div",
          { className: classNames("k-list-item k-custom-item", { "k-focus": isCustom(focusedType) }), style: { fontStyle: "italic" } },
          text,
          React62.createElement("span", { className: "k-icon k-i-plus", style: { position: "absolute", right: "0.5em" } })
        )
      );
      return React62.createElement(
        ListContainer_default,
        __assign24({}, listContainerProps),
        header && React62.createElement("div", { className: "k-list-header" }, header),
        customItem,
        React62.createElement("div", { className: classNames("k-list", (_b = {}, _b["k-list-".concat(sizeMap5[size] || size)] = size, _b["k-virtual-list"] = _this.base.vs.enabled, _b)) }, _this.renderList()),
        footer && React62.createElement("div", { className: "k-list-footer" }, footer)
      );
    };
    _this.renderList = function() {
      var _a3 = _this.props, _b = _a3.data, data = _b === void 0 ? [] : _b, textField = _a3.textField, listNoDataRender = _a3.listNoDataRender, itemRender = _a3.itemRender, dataItemKey = _a3.dataItemKey, virtual = _a3.virtual;
      var vs = _this.base.vs;
      var skip = virtual ? virtual.skip : 0;
      var opened = _this.props.opened !== void 0 ? _this.props.opened : _this.state.opened;
      var focusedIndex = _this.getFocusedState().focusedIndex;
      var popupSettings = _this.base.getPopupSettings();
      var translate = "translateY(".concat(vs.translate, "px)");
      return React62.createElement(List_default, { id: _this.base.listBoxId, show: opened, data: data.slice(), focusedIndex: focusedIndex - skip, value: _this.value, textField, valueField: dataItemKey, optionsGuid: _this.base.guid, listRef: function(list) {
        vs.list = _this.base.list = list;
      }, wrapperStyle: { maxHeight: popupSettings.height }, wrapperCssClass: "k-list-content", listStyle: vs.enabled ? { transform: translate } : void 0, key: "listKey", skip, onClick: _this.handleItemClick, itemRender, noDataRender: listNoDataRender, onMouseDown: preventDefault3, onBlur: _this.handleBlur, onScroll: function(e) {
        vs.scrollHandler(e);
      }, wrapperRef: vs.scrollerRef, scroller: _this.base.renderScrollElement() });
    };
    _this.customItemSelect = function(event) {
      var _a3;
      var itemText = _this.props.filter !== void 0 ? _this.props.filter : _this.state.text;
      var textField = _this.props.textField;
      if (!itemText) {
        return;
      }
      var state = _this.base.initState();
      state.syntheticEvent = event;
      var item = textField ? (_a3 = {}, _a3[textField] = itemText, _a3) : itemText;
      if (_this.state.text !== void 0) {
        state.data.text = "";
      }
      state.data.focusedIndex = void 0;
      _this.base.filterChanged("", state);
      var newItems = __spreadArray3(__spreadArray3([], _this.value, true), [item], false);
      _this.triggerOnChange(newItems, state);
      _this.base.togglePopup(state);
      _this.applyState(state);
    };
    _this.handleWrapperClick = function(event) {
      var opened = _this.props.opened !== void 0 ? _this.props.opened : _this.state.opened;
      var input = _this._input;
      if (!opened && input) {
        _this.focusElement(input);
      }
      var state = _this.base.initState();
      state.syntheticEvent = event;
      if (!_this.state.focused) {
        state.events.push({ type: "onFocus" });
        state.data.focused = true;
      }
      _this.base.togglePopup(state);
      _this.applyState(state);
    };
    _this.handleItemClick = function(index, event) {
      var state = _this.base.initState();
      state.syntheticEvent = event;
      _this.handleItemSelect(index, state);
      if (_this.props.autoClose) {
        _this.base.togglePopup(state);
      }
      event.stopPropagation();
      _this.applyState(state);
    };
    _this.handleBlur = function(event) {
      if (!_this.state.focused || _this._skipFocusEvent) {
        return;
      }
      var opened = _this.props.opened !== void 0 ? _this.props.opened : _this.state.opened;
      var state = _this.base.initState();
      var _a3 = _this.props, allowCustom = _a3.allowCustom, filterable = _a3.filterable;
      state.syntheticEvent = event;
      state.data.focused = false;
      state.events.push({ type: "onBlur" });
      if (opened) {
        if (_this.state.opened) {
          state.data.opened = false;
        }
        state.events.push({ type: "onClose" });
      }
      if (!allowCustom && !filterable && _this.state.text) {
        state.data.text = "";
      }
      _this.applyState(state);
    };
    _this.handleFocus = function(event) {
      if (_this._skipFocusEvent) {
        return;
      }
      _this.base.handleFocus(event);
    };
    _this.onPopupOpened = function() {
      if (_this._input && _this.state.focused) {
        _this.focusElement(_this._input);
      }
    };
    _this.onPopupClosed = function() {
      if (_this.state.focused) {
        window.setTimeout(function() {
          if (_this.state.focused) {
            _this.focusElement(_this._input);
          }
        }, 0);
      }
    };
    _this.setValidity = function() {
      if (_this._input && _this._input.setCustomValidity) {
        _this._input.setCustomValidity(_this.validity.valid ? "" : _this.props.validationMessage || VALIDATION_MESSAGE4);
      }
    };
    validatePackage2(packageMetadata4);
    return _this;
  }
  Object.defineProperty(MultiSelectWithoutContext2.prototype, "element", {
    get: function() {
      return this._element;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MultiSelectWithoutContext2.prototype, "value", {
    get: function() {
      var result = [];
      if (this._valueItemsDuringOnChange) {
        result.push.apply(result, this._valueItemsDuringOnChange);
      } else if (this.props.value) {
        result.push.apply(result, this.props.value);
      } else if (this.state.value) {
        result.push.apply(result, this.state.value);
      } else if (this.props.defaultValue) {
        result.push.apply(result, this.props.defaultValue);
      }
      return result;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MultiSelectWithoutContext2.prototype, "name", {
    get: function() {
      return this.props.name;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MultiSelectWithoutContext2.prototype, "validity", {
    get: function() {
      var customError = this.props.validationMessage !== void 0;
      var isValid = !this.required || this.value !== null && this.value.length > 0 && this.value !== void 0;
      var valid = this.props.valid !== void 0 ? this.props.valid : isValid;
      return {
        customError,
        valid,
        valueMissing: this.value === null
      };
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MultiSelectWithoutContext2.prototype, "required", {
    get: function() {
      return this.props.required !== void 0 ? this.props.required : MultiSelectWithoutContext2.defaultProps.required;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(MultiSelectWithoutContext2.prototype, "validityStyles", {
    get: function() {
      return this.props.validityStyles !== void 0 ? this.props.validityStyles : MultiSelectWithoutContext2.defaultProps.validityStyles;
    },
    enumerable: false,
    configurable: true
  });
  MultiSelectWithoutContext2.prototype.componentDidUpdate = function(prevProps, prevState) {
    var virtual = this.props.virtual;
    var skip = virtual ? virtual.skip : 0;
    var prevTotal = prevProps.virtual ? prevProps.virtual.total : 0;
    var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
    var prevOpened = prevProps.opened !== void 0 ? prevProps.opened : prevState.opened;
    var opening = !prevOpened && opened;
    var closing = prevOpened && !opened;
    var popupSettings = this.base.getPopupSettings();
    if (!popupSettings.animate && closing) {
      this.onPopupClosed();
    }
    if (virtual && virtual.total !== prevTotal) {
      this.base.vs.calcScrollElementHeight();
      this.base.vs.reset();
    } else {
      var _a3 = this.getFocusedState(), focusedItem = _a3.focusedItem, focusedIndex = _a3.focusedIndex;
      if (opening && virtual) {
        this.base.scrollToVirtualItem(virtual, focusedIndex - skip);
      } else if (opening && !virtual) {
        this.base.scrollToItem(focusedIndex);
      } else if (opened && prevOpened && focusedItem && this.scrollToFocused) {
        this.base.scrollToItem(focusedIndex - skip);
      }
    }
    this.scrollToFocused = false;
    this.setValidity();
  };
  MultiSelectWithoutContext2.prototype.componentDidMount = function() {
    this.base.didMount();
    this.setValidity();
  };
  MultiSelectWithoutContext2.prototype.onNavigate = function(state, keyCode) {
    var _a3 = this.props, allowCustom = _a3.allowCustom, _b = _a3.data, data = _b === void 0 ? [] : _b;
    var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
    var text = this.props.filter !== void 0 ? this.props.filter : this.state.text;
    var _c = this.getFocusedState(), focusedType = _c.focusedType, focusedIndex = _c.focusedIndex;
    var customItem = allowCustom && text;
    var customItemFocused = isCustom(focusedType);
    var base = this.base;
    var vs = base.vs;
    if (opened && keyCode === Keys.up && customItemFocused) {
      if (this.state.focusedIndex !== void 0) {
        state.data.focusedIndex = void 0;
      }
    } else {
      var newFocused = base.navigation.navigate({
        keyCode,
        current: focusedIndex,
        max: (vs.enabled ? vs.total : data.length) - 1,
        min: customItem ? -1 : 0
      });
      if (newFocused !== void 0) {
        this.itemFocus(newFocused, state);
        this.scrollToFocused = true;
      }
    }
    this.applyState(state);
  };
  MultiSelectWithoutContext2.prototype.render = function() {
    var _a3, _b;
    var _c = this.props, style = _c.style, className = _c.className, label = _c.label, dir = _c.dir, disabled = _c.disabled, tags = _c.tags, textField = _c.textField, dataItemKey = _c.dataItemKey, virtual = _c.virtual, size = _c.size, rounded = _c.rounded, fillMode = _c.fillMode, loading = _c.loading, filter = _c.filter;
    var _d = this.state, text = _d.text, focused = _d.focused, focusedTag = _d.focusedTag;
    var vs = this.base.vs;
    var id = this.props.id || this._inputId;
    vs.enabled = virtual !== void 0;
    if (virtual !== void 0) {
      vs.skip = virtual.skip;
      vs.total = virtual.total;
      vs.pageSize = virtual.pageSize;
    }
    var tagsToRender = [];
    if (tags === void 0) {
      this.value.forEach(function(item) {
        tagsToRender.push({ text: getItemValue(item, textField), data: [item] });
      });
    } else {
      tagsToRender.push.apply(tagsToRender, tags);
    }
    this.setItems(tagsToRender, this._tags);
    var isValid = !this.validityStyles || this.validity.valid;
    var clearButton = Boolean(filter !== void 0 ? filter : text) || this.value.length > 0;
    var component = React62.createElement(
      "div",
      { ref: this.componentRef, className: classNames("k-multiselect k-input", className, (_a3 = {}, _a3["k-input-".concat(sizeMap5[size] || size)] = size, _a3["k-rounded-".concat(roundedMap5[rounded] || rounded)] = rounded, _a3["k-input-".concat(fillMode)] = fillMode, _a3["k-focus"] = focused && !disabled, _a3["k-invalid"] = !isValid, _a3["k-disabled"] = disabled, _a3["k-loading"] = loading, _a3["k-required"] = this.required, _a3)), style: !label ? style : __assign24(__assign24({}, style), { width: void 0 }), dir, onFocus: this.handleFocus, onBlur: this.handleBlur, onClick: this.handleWrapperClick, onMouseDown: preventDefaultNonInputs },
      React62.createElement(
        "div",
        { className: classNames("k-input-values k-chip-list k-selection-multiple", (_b = {}, _b["k-chip-list-".concat(sizeMap5[size] || size)] = size, _b)), role: "listbox", id: "tagslist-" + this.base.guid },
        tagsToRender.length > 0 && React62.createElement(TagList_default, { tagRender: this.props.tagRender, onTagDelete: this.onTagDelete, data: tagsToRender, guid: this.base.guid, focused: focusedTag ? tagsToRender.find(function(t) {
          return matchTags(t, focusedTag, dataItemKey);
        }) : void 0, size }),
        this.renderSearchbar(id)
      ),
      loading && React62.createElement("span", { className: "k-icon k-i-loading k-input-loading-icon" }),
      clearButton && React62.createElement(ClearButton_default, { onClick: this.clearButtonClick }),
      this.renderListContainer()
    );
    return label ? React62.createElement(FloatingLabel, { label, editorId: id, editorValue: text || getItemValue(this.value[0], textField), editorValid: isValid, editorDisabled: disabled, style: { width: style ? style.width : void 0 }, children: component }) : component;
  };
  MultiSelectWithoutContext2.prototype.renderSearchbar = function(id) {
    var _a3 = this.state, activedescendant = _a3.activedescendant, focusedTag = _a3.focusedTag;
    var _b = this.props, disabled = _b.disabled, placeholder = _b.placeholder, ariaDescribedBy = _b.ariaDescribedBy;
    var text = (this.props.filter !== void 0 ? this.props.filter : this.state.text) || "";
    var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
    var focusedIndex = this.getFocusedState().focusedIndex;
    var placeholderToShow = this.value.length === 0 && !text ? placeholder : void 0;
    var ariaActivedescendant = activedescendant === ActiveDescendant.TagsList && focusedTag !== void 0 ? "tag-".concat(this.base.guid, "-").concat(focusedTag.text.replace(/\s+/g, "-")) : "option-".concat(this.base.guid, "-").concat(focusedIndex);
    return React62.createElement(SearchBar_default, { id, size: Math.max((placeholderToShow || "").length, text.length, 1), tabIndex: this.props.tabIndex, accessKey: this.props.accessKey, placeholder: placeholderToShow, value: text, onChange: this.onChangeHandler, onKeyDown: this.onInputKeyDown, ref: this.searchbarRef, disabled, expanded: opened, owns: this.base.listBoxId, role: "combobox", activedescendant: ariaActivedescendant, ariaDescribedBy: "tagslist-".concat(this.base.guid).concat(ariaDescribedBy ? " " + ariaDescribedBy : ""), ariaLabelledBy: this.props.ariaLabelledBy });
  };
  MultiSelectWithoutContext2.prototype.onTagsNavigate = function(event, state) {
    var keyCode = event.keyCode;
    var focusedTag = this.state.focusedTag;
    var tags = this._tags;
    var itemsKey = this.props.dataItemKey;
    var focusedIndex = focusedTag ? tags.findIndex(function(t) {
      return matchTags(t, focusedTag, itemsKey);
    }) : -1;
    var newFocusedTag = void 0;
    var hasFocused = focusedIndex !== -1;
    if (keyCode === Keys.left) {
      if (hasFocused) {
        focusedIndex = Math.max(0, focusedIndex - 1);
      } else {
        focusedIndex = tags.length - 1;
      }
      newFocusedTag = tags[focusedIndex];
    } else if (keyCode === Keys.right) {
      if (focusedIndex === tags.length - 1) {
        newFocusedTag = void 0;
      } else if (hasFocused) {
        focusedIndex = Math.min(tags.length - 1, focusedIndex + 1);
        newFocusedTag = tags[focusedIndex];
      }
    } else if (keyCode === Keys.home) {
      newFocusedTag = tags[0];
    } else if (keyCode === Keys.end) {
      newFocusedTag = tags[tags.length - 1];
    } else if (keyCode === Keys.delete) {
      if (hasFocused) {
        var items = this.value;
        removeDataItems(items, tags[focusedIndex].data, itemsKey);
        this.triggerOnChange(items, state);
      }
    } else if (keyCode === Keys.backspace) {
      var items = this.value;
      if (hasFocused) {
        removeDataItems(items, tags[focusedIndex].data, itemsKey);
        this.triggerOnChange(items, state);
      } else if (!hasFocused && tags.length) {
        var removed = tags.pop();
        removeDataItems(items, removed.data, itemsKey);
        this.triggerOnChange(items, state);
      }
    }
    if (newFocusedTag !== focusedTag) {
      state.data.focusedTag = newFocusedTag;
      state.data.activedescendant = ActiveDescendant.TagsList;
    }
    this.applyState(state);
  };
  MultiSelectWithoutContext2.prototype.triggerOnChange = function(items, state) {
    if (this.props.value === void 0) {
      state.data.value = __spreadArray3([], items, true);
    }
    this._valueItemsDuringOnChange = [];
    this.setItems(items, this._valueItemsDuringOnChange);
    state.events.push({ type: "onChange" });
  };
  MultiSelectWithoutContext2.prototype.selectFocusedItem = function(event) {
    var _a3 = this.props, _b = _a3.data, data = _b === void 0 ? [] : _b, virtual = _a3.virtual;
    var focusedIndex = this.getFocusedState().focusedIndex;
    var skip = virtual ? virtual.skip : 0;
    if (data[focusedIndex - skip] !== void 0) {
      this.handleItemClick(focusedIndex, event);
    }
  };
  MultiSelectWithoutContext2.prototype.setItems = function(srcItems, destItems) {
    destItems.length = 0;
    destItems.push.apply(destItems, srcItems);
  };
  MultiSelectWithoutContext2.prototype.getFocusedState = function() {
    var focusedIndex = this.state.focusedIndex;
    var text = this.props.filter !== void 0 ? this.props.filter : this.state.text;
    var _a3 = this.props, allowCustom = _a3.allowCustom, _b = _a3.data, data = _b === void 0 ? [] : _b, dataItemKey = _a3.dataItemKey, virtual = _a3.virtual, textField = _a3.textField, _c = _a3.focusedItemIndex, focusedItemIndex = _c === void 0 ? itemIndexStartsWith : _c;
    var skip = virtual && virtual.skip || 0;
    var focusedInd;
    if (focusedIndex !== void 0) {
      return {
        focusedIndex,
        focusedItem: data[focusedIndex - skip],
        focusedType: FocusedItemType.ListItem
      };
    }
    var selected = this.value;
    if (allowCustom && text) {
      return { focusedItem: null, focusedIndex: -1, focusedType: FocusedItemType.CustomItem };
    } else if (text) {
      focusedInd = focusedItemIndex(data, text, textField);
      return {
        focusedItem: data[focusedInd],
        focusedIndex: focusedInd + skip,
        focusedType: FocusedItemType.ListItem
      };
    } else if (selected.length) {
      var last_1 = selected[selected.length - 1];
      focusedInd = data.findIndex(function(i) {
        return areSame(i, last_1, dataItemKey);
      });
      if (data[focusedInd] !== void 0) {
        return {
          focusedIndex: focusedInd + skip,
          focusedItem: data[focusedInd],
          focusedType: FocusedItemType.ListItem
        };
      }
      return { focusedType: FocusedItemType.None, focusedIndex: -1 };
    }
    return skip === 0 ? { focusedItem: data[0], focusedIndex: 0, focusedType: FocusedItemType.ListItem } : { focusedType: FocusedItemType.None, focusedIndex: -1 };
  };
  MultiSelectWithoutContext2.prototype.focusElement = function(element5) {
    var _this = this;
    this._skipFocusEvent = true;
    element5.focus();
    window.setTimeout(function() {
      return _this._skipFocusEvent = false;
    }, 0);
  };
  MultiSelectWithoutContext2.prototype.applyState = function(state) {
    this.base.applyState(state);
    this._valueItemsDuringOnChange = null;
  };
  MultiSelectWithoutContext2.displayName = "MultiSelect";
  MultiSelectWithoutContext2.propTypes = __assign24(__assign24({}, DropDownBase_default.propTypes), { autoClose: PropTypes28.bool, value: PropTypes28.arrayOf(PropTypes28.any), defaultValue: PropTypes28.arrayOf(PropTypes28.any), dataItemKey: PropTypes28.string, placeholder: PropTypes28.string, tags: PropTypes28.arrayOf(PropTypes28.shape({
    text: PropTypes28.string,
    data: PropTypes28.arrayOf(PropTypes28.any)
  })), tagRender: PropTypes28.func, id: PropTypes28.string, ariaLabelledBy: PropTypes28.string, ariaDescribedBy: PropTypes28.string });
  MultiSelectWithoutContext2.defaultProps = __assign24(__assign24({}, DropDownBase_default.defaultProps), { autoClose: true, required: false, size: "medium", rounded: "medium", fillMode: "solid" });
  return MultiSelectWithoutContext2;
}(React62.Component);
var MultiSelectPropsContext = createPropsContext();
var MultiSelect = withPropsContext(MultiSelectPropsContext, MultiSelectWithoutContext);
MultiSelect.displayName = "KendoReactMultiSelect";

// node_modules/@progress/kendo-react-dropdowns/dist/es/MultiColumnComboBox/MultiColumnComboBox.js
var React64 = __toESM(require_react());
var PropTypes29 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/MultiColumnList.js
var React63 = __toESM(require_react());
var __assign25 = function() {
  __assign25 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign25.apply(this, arguments);
};
var MultiColumnList = function(props) {
  return React63.createElement(List_default, __assign25({}, props, { wrapperCssClass: "k-table-body k-table-scroller", listClassName: "k-table k-table-list", listStyle: __assign25({}, props.listStyle) }));
};

// node_modules/@progress/kendo-react-dropdowns/dist/es/MultiColumnComboBox/MultiColumnComboBox.js
var __assign26 = function() {
  __assign26 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign26.apply(this, arguments);
};
var __rest7 = function(s, e) {
  var t = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e.indexOf(p2) < 0)
      t[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t[p2[i]] = s[p2[i]];
    }
  return t;
};
var columnWidth = function(width, defaultWidth) {
  if (width) {
    return typeof width === "number" ? width + "px" : width;
  }
  return defaultWidth;
};
var MultiColumnComboBoxPropsContext = createPropsContext();
var MultiColumnComboBox = React64.forwardRef(function(directProps, ref) {
  var props = usePropsContext(MultiColumnComboBoxPropsContext, directProps);
  var target = React64.useRef(null);
  var comboBoxRef = React64.useRef(null);
  var scrollbarWidth2 = getScrollbarWidth();
  var _a3 = props.columns, columns = _a3 === void 0 ? defaultProps6.columns : _a3, _b = props.popupSettings, popupSettings = _b === void 0 ? defaultProps6.popupSettings : _b, className = props.className, size = props.size, onOpen = props.onOpen, onClose = props.onClose, onFocus = props.onFocus, onBlur = props.onBlur, onChange = props.onChange, onFilterChange = props.onFilterChange, onPageChange = props.onPageChange, other = __rest7(props, ["columns", "popupSettings", "className", "size", "onOpen", "onClose", "onFocus", "onBlur", "onChange", "onFilterChange", "onPageChange"]);
  React64.useImperativeHandle(target, function() {
    return {
      element: comboBoxRef.current && comboBoxRef.current.element,
      focus: function() {
        if (comboBoxRef.current) {
          comboBoxRef.current.focus();
        }
      },
      get value() {
        return comboBoxRef.current && comboBoxRef.current.value;
      },
      get name() {
        return comboBoxRef.current && comboBoxRef.current.name;
      },
      props
    };
  });
  React64.useImperativeHandle(ref, function() {
    return target.current;
  });
  var initialGroupHeader = React64.useMemo(function() {
    if (initialGroupHeader === void 0 && props.groupField !== void 0 && props.data) {
      return getItemValue(props.data[0], props.groupField);
    }
  }, [props.data, props.groupField]);
  var _c = React64.useState(initialGroupHeader), groupHeader = _c[0], setGroupHeader = _c[1];
  var header = React64.useMemo(function() {
    return React64.createElement(
      React64.Fragment,
      null,
      props.header,
      React64.createElement(
        "div",
        { className: "k-table-header-wrap" },
        React64.createElement(
          "table",
          { className: "k-table", role: "presentation" },
          React64.createElement("colgroup", null, columns.map(function(column, i) {
            return React64.createElement("col", { key: column.uniqueKey ? column.uniqueKey : i, style: { width: column.width ? column.width : defaultProps6.width } });
          })),
          React64.createElement(
            "thead",
            { className: "k-table-thead" },
            React64.createElement("tr", { className: "k-table-row" }, columns.map(function(column, i) {
              return React64.createElement("th", { className: "k-table-th", key: column.uniqueKey ? column.uniqueKey : i }, column.header || "\xA0");
            })),
            groupHeader && React64.createElement(
              "tr",
              { className: "k-table-group-row" },
              React64.createElement("th", { className: "k-table-th", colSpan: columns.length }, groupHeader)
            )
          )
        )
      )
    );
  }, [props.header, columns, groupHeader]);
  var popupWidth = React64.useMemo(function() {
    return "calc(".concat(columns.map(function(column) {
      return columnWidth(column.width, defaultProps6.width);
    }).filter(Boolean).join(" + "), " + ").concat(scrollbarWidth2, "px + 4px)");
  }, [columns, scrollbarWidth2]);
  var skip = props.virtual ? props.virtual.skip : 0;
  var itemRender = React64.useCallback(function(li, liProps) {
    var children3 = columns.map(function(column, i) {
      return React64.createElement("span", { className: "k-table-td", style: { width: column.width ? column.width : defaultProps6.width }, key: column.uniqueKey ? column.uniqueKey : i }, column.field ? getter(column.field)(liProps.dataItem) : "");
    });
    var group = void 0;
    var curGroup, prevGroup, groupGetter, data = props.data || [];
    var index = liProps.index - skip;
    if (props.groupField !== void 0) {
      groupGetter = getter(props.groupField);
      curGroup = groupGetter(data[index]);
      prevGroup = groupGetter(data[index - 1]);
      if (curGroup && prevGroup && curGroup !== prevGroup) {
        group = curGroup;
      }
    }
    if (group) {
      children3.push(React64.createElement(
        "div",
        { key: "group", className: "k-table-td k-table-group-td" },
        React64.createElement("span", null, group)
      ));
    }
    var rendering = React64.cloneElement(li, __assign26(__assign26({}, li.props), { className: classNames("k-table-row", {
      "k-table-alt-row": liProps.index % 2 !== 0,
      "k-focus": liProps.focused,
      "k-selected": liProps.selected,
      "k-first": Boolean(group)
    }) }), children3);
    return props.itemRender ? props.itemRender.call(void 0, rendering, liProps) : rendering;
  }, [columns, props.groupField, props.itemRender, props.data, skip]);
  var handleEvent = React64.useCallback(function(handler, event) {
    if (handler) {
      handler.call(void 0, __assign26(__assign26({}, event), { target: target.current }));
    }
  }, []);
  var onOpenHandler = React64.useCallback(function(event) {
    return handleEvent(onOpen, event);
  }, [onOpen]);
  var onCloseHandler = React64.useCallback(function(event) {
    return handleEvent(onClose, event);
  }, [onClose]);
  var onFocusHandler = React64.useCallback(function(event) {
    return handleEvent(onFocus, event);
  }, [onFocus]);
  var onBlurHandler = React64.useCallback(function(event) {
    return handleEvent(onBlur, event);
  }, [onBlur]);
  var onChangeHandler = React64.useCallback(function(event) {
    return handleEvent(onChange, event);
  }, [onChange]);
  var onFilterChangeHandler = React64.useCallback(function(event) {
    return handleEvent(onFilterChange, event);
  }, [onFilterChange]);
  var onPageChangeHandler = React64.useCallback(function(event) {
    return handleEvent(onPageChange, event);
  }, [onPageChange]);
  var onGroupScroll = React64.useCallback(function(event) {
    setGroupHeader(event.group);
  }, []);
  React64.useEffect(function() {
    setScrollbarWidth();
  });
  var List2 = React64.useCallback(function(listProps) {
    return React64.createElement(MultiColumnList, __assign26({}, listProps));
  }, []);
  return React64.createElement(ComboBox, __assign26({}, other, { list: List2, popupSettings: __assign26(__assign26({ width: popupWidth }, popupSettings), { popupClass: "k-dropdowngrid-popup k-reset", className: popupSettings.className }), ref: comboBoxRef, header, itemRender, size: props.size, rounded: props.rounded, fillMode: props.fillMode, onOpen: onOpenHandler, onClose: onCloseHandler, onFocus: onFocusHandler, onBlur: onBlurHandler, onChange: onChangeHandler, onFilterChange: onFilterChangeHandler, onPageChange: onPageChangeHandler, onGroupScroll, className: classNames("k-dropdowngrid", className) }));
});
var propTypes3 = __assign26(__assign26({}, ComboBoxWithoutContext.propTypes), { columns: PropTypes29.any.isRequired });
var defaultProps6 = {
  columns: [],
  popupSettings: {},
  width: "200px",
  size: "medium",
  rounded: "medium",
  fillMode: "solid"
};
MultiColumnComboBox.displayName = "KendoMultiColumnComboBox";
MultiColumnComboBox.propTypes = propTypes3;
MultiColumnComboBox.defaultProps = defaultProps6;

// node_modules/@progress/kendo-react-dropdowns/dist/es/DropDownTree/DropDownTree.js
var React85 = __toESM(require_react());
var PropTypes45 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-treeview/dist/es/TreeView.js
var React81 = __toESM(require_react());
var PropTypes44 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-treeview/dist/es/utils/itemIdUtils.js
var EMPTY_ID = "";
var ZERO_LEVEL_ZERO_NODE_ID = "0";
var SEPARATOR = "_";
function getItemById(itemId, items, childrenField) {
  if (isIdZeroLevel(itemId)) {
    return items[Number(itemId)];
  } else {
    var rootParentItem = items[Number(getRootParentId(itemId))];
    var subItems = rootParentItem && rootParentItem[childrenField] || [];
    return subItems.length ? getItemById(getIdWithoutRootParentId(itemId), subItems, childrenField) : void 0;
  }
}
function getRootParentId(itemId) {
  return isIdEmptyOrZeroLevel(itemId) ? itemId : itemId.split(SEPARATOR)[0];
}
function getIdWithoutRootParentId(itemId) {
  if (isIdEmptyOrZeroLevel(itemId)) {
    return itemId;
  } else {
    var firstSeparatorIndex = itemId.indexOf(SEPARATOR);
    return itemId.substring(firstSeparatorIndex + 1);
  }
}
function getFirstChildId(itemId) {
  return createId("0", itemId);
}
function createId(childId, parentId) {
  childId = childId.toString();
  return parentId ? parentId + SEPARATOR + childId : childId;
}
function getDirectParentId(itemId) {
  var lastSeparatorIndex = itemId.lastIndexOf(SEPARATOR);
  return lastSeparatorIndex < 0 ? EMPTY_ID : itemId.substring(0, lastSeparatorIndex);
}
function isIdEmptyOrZeroLevel(itemId) {
  return itemId === EMPTY_ID || itemId.indexOf(SEPARATOR) < 0;
}
function isIdZeroLevel(itemId) {
  return itemId !== EMPTY_ID && itemId.indexOf(SEPARATOR) < 0;
}
function getAllShortIds(itemId) {
  return itemId.split(SEPARATOR);
}
function getShortId(itemId) {
  var lastSeparatorIndex = itemId.lastIndexOf(SEPARATOR);
  return lastSeparatorIndex < 0 ? itemId : itemId.substring(lastSeparatorIndex + 1);
}

// node_modules/@progress/kendo-react-treeview/dist/es/utils/SortedPublicItemIds.js
var PROPS_COUNT_LIMIT = 5e4;
var SortedPublicItemIds = function() {
  function SortedPublicItemIds2() {
    this.objects = [];
  }
  SortedPublicItemIds2.prototype.init = function(publicItemIds) {
    var currentObj;
    for (var i = 0; i < publicItemIds.length; i++) {
      if (i % PROPS_COUNT_LIMIT === 0) {
        currentObj = {};
        this.objects.push(currentObj);
      }
      currentObj[publicItemIds[i]] = true;
    }
  };
  SortedPublicItemIds2.prototype.hasId = function(publicItemId) {
    return this.objects.some(function(obj) {
      return obj[publicItemId];
    });
  };
  return SortedPublicItemIds2;
}();
var SortedPublicItemIds_default = SortedPublicItemIds;

// node_modules/@progress/kendo-react-treeview/dist/es/utils/misc.js
function getNestedValue(fieldName, dataItem) {
  var path = (fieldName || "").split(".");
  var data = dataItem;
  path.forEach(function(p2) {
    data = data ? data[p2] : void 0;
  });
  return data;
}

// node_modules/@progress/kendo-react-treeview/dist/es/utils/itemUtils.js
function hasChildren(item, childrenField) {
  var children3 = getNestedValue(childrenField, item);
  return Boolean(children3 && children3.length);
}
function isItemExpandedAndWithChildren(item, fieldsSvc) {
  return fieldsSvc.expanded(item) && hasChildren(item, fieldsSvc.getChildrenField());
}
function resolveItemId(publicId, idField, items, childrenField) {
  var resolvedIds = resolveItemsIds([publicId], idField, items, childrenField);
  return resolvedIds.length ? resolvedIds[0] : void 0;
}
function resolveItemsIds(publicIds, idField, items, childrenField) {
  var result = [];
  var sortedIds = new SortedPublicItemIds_default();
  sortedIds.init(publicIds);
  resolveItemsIdsHelper(sortedIds, idField, items, EMPTY_ID, result, childrenField);
  return result;
}
function isEnabledAndAllParentsEnabled(itemId, items, fieldsSvc) {
  var ids = getAllShortIds(itemId);
  var currentItems = items;
  for (var i = 0; i < ids.length; i++) {
    var currentItem = currentItems[Number(ids[i])];
    if (fieldsSvc.disabled(currentItem)) {
      return false;
    } else {
      currentItems = currentItem[fieldsSvc.getChildrenField()];
    }
  }
  return true;
}
function resolveItemsIdsHelper(publicItemIds, idField, items, parentItemId, resolvedIds, childrenField) {
  for (var i = 0; i < items.length; i++) {
    var item = items[i];
    var id = createId(i, parentItemId);
    if (publicItemIds.hasId(getNestedValue(idField, item))) {
      resolvedIds.push(id);
    }
    if (hasChildren(item, childrenField)) {
      resolveItemsIdsHelper(publicItemIds, idField, getNestedValue(childrenField, item), id, resolvedIds, childrenField);
    }
  }
}

// node_modules/@progress/kendo-react-treeview/dist/es/utils/getItemIdUponKeyboardNavigation.js
function getItemIdUponKeyboardNavigation(item, itemId, items, keyCode, fieldsSvc) {
  switch (keyCode) {
    case Keys.left:
      return getIdUponLeftKey();
    case Keys.right:
      return getIdUponRightKey();
    case Keys.up:
      return getIdUponUpKey();
    case Keys.down:
      return getIdUponDownKey();
    case Keys.home:
      return ZERO_LEVEL_ZERO_NODE_ID;
    case Keys.end:
      return getIdUponEndKey();
    default:
      return itemId;
  }
  function getIdUponLeftKey() {
    return isIdZeroLevel(itemId) || fieldsSvc.expanded(item) && isEnabledAndAllParentsEnabled(itemId, items, fieldsSvc) ? itemId : getDirectParentId(itemId);
  }
  function getIdUponRightKey() {
    return isItemExpandedAndWithChildren(item, fieldsSvc) ? getFirstChildId(itemId) : itemId;
  }
  function getIdUponUpKey() {
    var index = Number(getShortId(itemId));
    var parentId = getDirectParentId(itemId);
    return index ? getLastNotOpenedChildId(createId(index - 1, parentId), items, fieldsSvc) : isIdZeroLevel(itemId) ? itemId : parentId;
  }
  function getIdUponDownKey() {
    if (isItemExpandedAndWithChildren(item, fieldsSvc)) {
      return getFirstChildId(itemId);
    } else {
      return getNextItemId(itemId, items, fieldsSvc) || itemId;
    }
  }
  function getIdUponEndKey() {
    var result = (items.length - 1).toString();
    var currentItem = items[items.length - 1];
    var children3;
    while (isItemExpandedAndWithChildren(currentItem, fieldsSvc)) {
      children3 = currentItem[fieldsSvc.getChildrenField()];
      result = createId(children3.length - 1, result);
      currentItem = children3[children3.length - 1];
    }
    return result;
  }
}
function getNextItemId(itemId, items, fieldsSvc) {
  var parentId = getDirectParentId(itemId);
  var parent = parentId ? getItemById(parentId, items, fieldsSvc.getChildrenField()) : void 0;
  var siblings = parent ? parent[fieldsSvc.getChildrenField()] : items;
  var index = Number(getShortId(itemId));
  return index < siblings.length - 1 ? createId(index + 1, parentId) : parent ? getNextItemId(parentId, items, fieldsSvc) : void 0;
}
function getLastNotOpenedChildId(itemId, items, fieldsSvc) {
  var item = getItemById(itemId, items, fieldsSvc.getChildrenField());
  if (isItemExpandedAndWithChildren(item, fieldsSvc)) {
    return getLastNotOpenedChildId(createId(item[fieldsSvc.getChildrenField()].length - 1, itemId), items, fieldsSvc);
  } else {
    return itemId;
  }
}

// node_modules/@progress/kendo-react-treeview/dist/es/TreeViewItem.js
var React80 = __toESM(require_react());

// node_modules/@progress/kendo-react-animation/dist/es/Animation.js
var React72 = __toESM(require_react());
var PropTypes37 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-animation/dist/es/AnimationChild.js
var React71 = __toESM(require_react());
var PropTypes36 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-animation/node_modules/react-transition-group/esm/CSSTransition.js
init_extends();
init_objectWithoutPropertiesLoose();
var import_prop_types3 = __toESM(require_prop_types());
var import_react3 = __toESM(require_react());

// node_modules/@progress/kendo-react-animation/node_modules/react-transition-group/esm/Transition.js
init_objectWithoutPropertiesLoose();
var import_prop_types2 = __toESM(require_prop_types());
var import_react2 = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());

// node_modules/@progress/kendo-react-animation/node_modules/react-transition-group/esm/config.js
var config_default = {
  disabled: false
};

// node_modules/@progress/kendo-react-animation/node_modules/react-transition-group/esm/utils/PropTypes.js
var import_prop_types = __toESM(require_prop_types());
var timeoutsShape = true ? import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.shape({
  enter: import_prop_types.default.number,
  exit: import_prop_types.default.number,
  appear: import_prop_types.default.number
}).isRequired]) : null;
var classNamesShape = true ? import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.shape({
  enter: import_prop_types.default.string,
  exit: import_prop_types.default.string,
  active: import_prop_types.default.string
}), import_prop_types.default.shape({
  enter: import_prop_types.default.string,
  enterDone: import_prop_types.default.string,
  enterActive: import_prop_types.default.string,
  exit: import_prop_types.default.string,
  exitDone: import_prop_types.default.string,
  exitActive: import_prop_types.default.string
})]) : null;

// node_modules/@progress/kendo-react-animation/node_modules/react-transition-group/esm/TransitionGroupContext.js
var import_react = __toESM(require_react());
var TransitionGroupContext_default = import_react.default.createContext(null);

// node_modules/@progress/kendo-react-animation/node_modules/react-transition-group/esm/Transition.js
var UNMOUNTED = "unmounted";
var EXITED = "exited";
var ENTERING = "entering";
var ENTERED = "entered";
var EXITING = "exiting";
var Transition = function(_React$Component) {
  _inheritsLoose(Transition2, _React$Component);
  function Transition2(props, context2) {
    var _this;
    _this = _React$Component.call(this, props, context2) || this;
    var parentGroup = context2;
    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;
    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }
    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }
  Transition2.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var nextIn = _ref.in;
    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }
    return null;
  };
  var _proto = Transition2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };
  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;
    if (prevProps !== this.props) {
      var status = this.state.status;
      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }
    this.updateStatus(false, nextStatus);
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };
  _proto.getTimeouts = function getTimeouts() {
    var timeout2 = this.props.timeout;
    var exit, enter, appear;
    exit = enter = appear = timeout2;
    if (timeout2 != null && typeof timeout2 !== "number") {
      exit = timeout2.exit;
      enter = timeout2.enter;
      appear = timeout2.appear !== void 0 ? timeout2.appear : enter;
    }
    return {
      exit,
      enter,
      appear
    };
  };
  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }
    if (nextStatus !== null) {
      this.cancelNextCallback();
      if (nextStatus === ENTERING) {
        this.performEnter(mounting);
      } else {
        this.performExit();
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };
  _proto.performEnter = function performEnter(mounting) {
    var _this2 = this;
    var enter = this.props.enter;
    var appearing = this.context ? this.context.isMounting : mounting;
    var _ref2 = this.props.nodeRef ? [appearing] : [import_react_dom.default.findDOMNode(this), appearing], maybeNode = _ref2[0], maybeAppearing = _ref2[1];
    var timeouts = this.getTimeouts();
    var enterTimeout = appearing ? timeouts.appear : timeouts.enter;
    if (!mounting && !enter || config_default.disabled) {
      this.safeSetState({
        status: ENTERED
      }, function() {
        _this2.props.onEntered(maybeNode);
      });
      return;
    }
    this.props.onEnter(maybeNode, maybeAppearing);
    this.safeSetState({
      status: ENTERING
    }, function() {
      _this2.props.onEntering(maybeNode, maybeAppearing);
      _this2.onTransitionEnd(enterTimeout, function() {
        _this2.safeSetState({
          status: ENTERED
        }, function() {
          _this2.props.onEntered(maybeNode, maybeAppearing);
        });
      });
    });
  };
  _proto.performExit = function performExit() {
    var _this3 = this;
    var exit = this.props.exit;
    var timeouts = this.getTimeouts();
    var maybeNode = this.props.nodeRef ? void 0 : import_react_dom.default.findDOMNode(this);
    if (!exit || config_default.disabled) {
      this.safeSetState({
        status: EXITED
      }, function() {
        _this3.props.onExited(maybeNode);
      });
      return;
    }
    this.props.onExit(maybeNode);
    this.safeSetState({
      status: EXITING
    }, function() {
      _this3.props.onExiting(maybeNode);
      _this3.onTransitionEnd(timeouts.exit, function() {
        _this3.safeSetState({
          status: EXITED
        }, function() {
          _this3.props.onExited(maybeNode);
        });
      });
    });
  };
  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };
  _proto.safeSetState = function safeSetState(nextState, callback) {
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };
  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;
    var active = true;
    this.nextCallback = function(event) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };
    this.nextCallback.cancel = function() {
      active = false;
    };
    return this.nextCallback;
  };
  _proto.onTransitionEnd = function onTransitionEnd(timeout2, handler) {
    this.setNextCallback(handler);
    var node14 = this.props.nodeRef ? this.props.nodeRef.current : import_react_dom.default.findDOMNode(this);
    var doesNotHaveTimeoutOrListener = timeout2 == null && !this.props.addEndListener;
    if (!node14 || doesNotHaveTimeoutOrListener) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node14, this.nextCallback], maybeNode = _ref3[0], maybeNextCallback = _ref3[1];
      this.props.addEndListener(maybeNode, maybeNextCallback);
    }
    if (timeout2 != null) {
      setTimeout(this.nextCallback, timeout2);
    }
  };
  _proto.render = function render() {
    var status = this.state.status;
    if (status === UNMOUNTED) {
      return null;
    }
    var _this$props = this.props, children3 = _this$props.children, _in = _this$props.in, _mountOnEnter = _this$props.mountOnEnter, _unmountOnExit = _this$props.unmountOnExit, _appear = _this$props.appear, _enter = _this$props.enter, _exit = _this$props.exit, _timeout = _this$props.timeout, _addEndListener = _this$props.addEndListener, _onEnter = _this$props.onEnter, _onEntering = _this$props.onEntering, _onEntered = _this$props.onEntered, _onExit = _this$props.onExit, _onExiting = _this$props.onExiting, _onExited = _this$props.onExited, _nodeRef = _this$props.nodeRef, childProps = _objectWithoutPropertiesLoose(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return import_react2.default.createElement(TransitionGroupContext_default.Provider, {
      value: null
    }, typeof children3 === "function" ? children3(status, childProps) : import_react2.default.cloneElement(import_react2.default.Children.only(children3), childProps));
  };
  return Transition2;
}(import_react2.default.Component);
Transition.contextType = TransitionGroupContext_default;
Transition.propTypes = true ? {
  nodeRef: import_prop_types2.default.shape({
    current: typeof Element === "undefined" ? import_prop_types2.default.any : function(propValue, key, componentName, location, propFullName, secret) {
      var value = propValue[key];
      return import_prop_types2.default.instanceOf(value && "ownerDocument" in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);
    }
  }),
  children: import_prop_types2.default.oneOfType([import_prop_types2.default.func.isRequired, import_prop_types2.default.element.isRequired]).isRequired,
  in: import_prop_types2.default.bool,
  mountOnEnter: import_prop_types2.default.bool,
  unmountOnExit: import_prop_types2.default.bool,
  appear: import_prop_types2.default.bool,
  enter: import_prop_types2.default.bool,
  exit: import_prop_types2.default.bool,
  timeout: function timeout(props) {
    var pt = timeoutsShape;
    if (!props.addEndListener)
      pt = pt.isRequired;
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    return pt.apply(void 0, [props].concat(args));
  },
  addEndListener: import_prop_types2.default.func,
  onEnter: import_prop_types2.default.func,
  onEntering: import_prop_types2.default.func,
  onEntered: import_prop_types2.default.func,
  onExit: import_prop_types2.default.func,
  onExiting: import_prop_types2.default.func,
  onExited: import_prop_types2.default.func
} : {};
function noop3() {
}
Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: noop3,
  onEntering: noop3,
  onEntered: noop3,
  onExit: noop3,
  onExiting: noop3,
  onExited: noop3
};
Transition.UNMOUNTED = UNMOUNTED;
Transition.EXITED = EXITED;
Transition.ENTERING = ENTERING;
Transition.ENTERED = ENTERED;
Transition.EXITING = EXITING;
var Transition_default = Transition;

// node_modules/@progress/kendo-react-animation/node_modules/react-transition-group/esm/CSSTransition.js
var _addClass = function addClass2(node14, classes) {
  return node14 && classes && classes.split(" ").forEach(function(c) {
    return addClass(node14, c);
  });
};
var removeClass2 = function removeClass3(node14, classes) {
  return node14 && classes && classes.split(" ").forEach(function(c) {
    return removeClass(node14, c);
  });
};
var CSSTransition = function(_React$Component) {
  _inheritsLoose(CSSTransition2, _React$Component);
  function CSSTransition2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.appliedClasses = {
      appear: {},
      enter: {},
      exit: {}
    };
    _this.onEnter = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing), node14 = _this$resolveArgument[0], appearing = _this$resolveArgument[1];
      _this.removeClasses(node14, "exit");
      _this.addClass(node14, appearing ? "appear" : "enter", "base");
      if (_this.props.onEnter) {
        _this.props.onEnter(maybeNode, maybeAppearing);
      }
    };
    _this.onEntering = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing), node14 = _this$resolveArgument2[0], appearing = _this$resolveArgument2[1];
      var type = appearing ? "appear" : "enter";
      _this.addClass(node14, type, "active");
      if (_this.props.onEntering) {
        _this.props.onEntering(maybeNode, maybeAppearing);
      }
    };
    _this.onEntered = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing), node14 = _this$resolveArgument3[0], appearing = _this$resolveArgument3[1];
      var type = appearing ? "appear" : "enter";
      _this.removeClasses(node14, type);
      _this.addClass(node14, type, "done");
      if (_this.props.onEntered) {
        _this.props.onEntered(maybeNode, maybeAppearing);
      }
    };
    _this.onExit = function(maybeNode) {
      var _this$resolveArgument4 = _this.resolveArguments(maybeNode), node14 = _this$resolveArgument4[0];
      _this.removeClasses(node14, "appear");
      _this.removeClasses(node14, "enter");
      _this.addClass(node14, "exit", "base");
      if (_this.props.onExit) {
        _this.props.onExit(maybeNode);
      }
    };
    _this.onExiting = function(maybeNode) {
      var _this$resolveArgument5 = _this.resolveArguments(maybeNode), node14 = _this$resolveArgument5[0];
      _this.addClass(node14, "exit", "active");
      if (_this.props.onExiting) {
        _this.props.onExiting(maybeNode);
      }
    };
    _this.onExited = function(maybeNode) {
      var _this$resolveArgument6 = _this.resolveArguments(maybeNode), node14 = _this$resolveArgument6[0];
      _this.removeClasses(node14, "exit");
      _this.addClass(node14, "exit", "done");
      if (_this.props.onExited) {
        _this.props.onExited(maybeNode);
      }
    };
    _this.resolveArguments = function(maybeNode, maybeAppearing) {
      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] : [maybeNode, maybeAppearing];
    };
    _this.getClassNames = function(type) {
      var classNames2 = _this.props.classNames;
      var isStringClassNames = typeof classNames2 === "string";
      var prefix = isStringClassNames && classNames2 ? classNames2 + "-" : "";
      var baseClassName = isStringClassNames ? "" + prefix + type : classNames2[type];
      var activeClassName = isStringClassNames ? baseClassName + "-active" : classNames2[type + "Active"];
      var doneClassName = isStringClassNames ? baseClassName + "-done" : classNames2[type + "Done"];
      return {
        baseClassName,
        activeClassName,
        doneClassName
      };
    };
    return _this;
  }
  var _proto = CSSTransition2.prototype;
  _proto.addClass = function addClass3(node14, type, phase) {
    var className = this.getClassNames(type)[phase + "ClassName"];
    var _this$getClassNames = this.getClassNames("enter"), doneClassName = _this$getClassNames.doneClassName;
    if (type === "appear" && phase === "done" && doneClassName) {
      className += " " + doneClassName;
    }
    if (phase === "active") {
      node14 && node14.scrollTop;
    }
    if (className) {
      this.appliedClasses[type][phase] = className;
      _addClass(node14, className);
    }
  };
  _proto.removeClasses = function removeClasses(node14, type) {
    var _this$appliedClasses$ = this.appliedClasses[type], baseClassName = _this$appliedClasses$.base, activeClassName = _this$appliedClasses$.active, doneClassName = _this$appliedClasses$.done;
    this.appliedClasses[type] = {};
    if (baseClassName) {
      removeClass2(node14, baseClassName);
    }
    if (activeClassName) {
      removeClass2(node14, activeClassName);
    }
    if (doneClassName) {
      removeClass2(node14, doneClassName);
    }
  };
  _proto.render = function render() {
    var _this$props = this.props, _ = _this$props.classNames, props = _objectWithoutPropertiesLoose(_this$props, ["classNames"]);
    return import_react3.default.createElement(Transition_default, _extends({}, props, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  };
  return CSSTransition2;
}(import_react3.default.Component);
CSSTransition.defaultProps = {
  classNames: ""
};
CSSTransition.propTypes = true ? _extends({}, Transition_default.propTypes, {
  classNames: classNamesShape,
  onEnter: import_prop_types3.default.func,
  onEntering: import_prop_types3.default.func,
  onEntered: import_prop_types3.default.func,
  onExit: import_prop_types3.default.func,
  onExiting: import_prop_types3.default.func,
  onExited: import_prop_types3.default.func
}) : {};
var CSSTransition_default = CSSTransition;

// node_modules/@progress/kendo-react-animation/node_modules/react-transition-group/esm/ReplaceTransition.js
init_objectWithoutPropertiesLoose();
var import_prop_types5 = __toESM(require_prop_types());
var import_react6 = __toESM(require_react());
var import_react_dom2 = __toESM(require_react_dom());

// node_modules/@progress/kendo-react-animation/node_modules/react-transition-group/esm/TransitionGroup.js
init_objectWithoutPropertiesLoose();
init_extends();
var import_prop_types4 = __toESM(require_prop_types());
var import_react5 = __toESM(require_react());

// node_modules/@progress/kendo-react-animation/node_modules/react-transition-group/esm/utils/ChildMapping.js
var import_react4 = __toESM(require_react());
function getChildMapping(children3, mapFn) {
  var mapper = function mapper2(child) {
    return mapFn && (0, import_react4.isValidElement)(child) ? mapFn(child) : child;
  };
  var result = /* @__PURE__ */ Object.create(null);
  if (children3)
    import_react4.Children.map(children3, function(c) {
      return c;
    }).forEach(function(child) {
      result[child.key] = mapper(child);
    });
  return result;
}
function mergeChildMappings(prev, next) {
  prev = prev || {};
  next = next || {};
  function getValueForKey(key) {
    return key in next ? next[key] : prev[key];
  }
  var nextKeysPending = /* @__PURE__ */ Object.create(null);
  var pendingKeys = [];
  for (var prevKey in prev) {
    if (prevKey in next) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }
  var i;
  var childMapping = {};
  for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }
    childMapping[nextKey] = getValueForKey(nextKey);
  }
  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }
  return childMapping;
}
function getProp(child, prop, props) {
  return props[prop] != null ? props[prop] : child.props[prop];
}
function getInitialChildMapping(props, onExited) {
  return getChildMapping(props.children, function(child) {
    return (0, import_react4.cloneElement)(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp(child, "appear", props),
      enter: getProp(child, "enter", props),
      exit: getProp(child, "exit", props)
    });
  });
}
function getNextChildMapping(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping(nextProps.children);
  var children3 = mergeChildMappings(prevChildMapping, nextChildMapping);
  Object.keys(children3).forEach(function(key) {
    var child = children3[key];
    if (!(0, import_react4.isValidElement)(child))
      return;
    var hasPrev = key in prevChildMapping;
    var hasNext = key in nextChildMapping;
    var prevChild = prevChildMapping[key];
    var isLeaving = (0, import_react4.isValidElement)(prevChild) && !prevChild.props.in;
    if (hasNext && (!hasPrev || isLeaving)) {
      children3[key] = (0, import_react4.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp(child, "exit", nextProps),
        enter: getProp(child, "enter", nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      children3[key] = (0, import_react4.cloneElement)(child, {
        in: false
      });
    } else if (hasNext && hasPrev && (0, import_react4.isValidElement)(prevChild)) {
      children3[key] = (0, import_react4.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp(child, "exit", nextProps),
        enter: getProp(child, "enter", nextProps)
      });
    }
  });
  return children3;
}

// node_modules/@progress/kendo-react-animation/node_modules/react-transition-group/esm/TransitionGroup.js
var values = Object.values || function(obj) {
  return Object.keys(obj).map(function(k) {
    return obj[k];
  });
};
var defaultProps7 = {
  component: "div",
  childFactory: function childFactory(child) {
    return child;
  }
};
var TransitionGroup = function(_React$Component) {
  _inheritsLoose(TransitionGroup2, _React$Component);
  function TransitionGroup2(props, context2) {
    var _this;
    _this = _React$Component.call(this, props, context2) || this;
    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this));
    _this.state = {
      contextValue: {
        isMounting: true
      },
      handleExited,
      firstRender: true
    };
    return _this;
  }
  var _proto = TransitionGroup2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.mounted = true;
    this.setState({
      contextValue: {
        isMounting: false
      }
    });
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.mounted = false;
  };
  TransitionGroup2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
    var prevChildMapping = _ref.children, handleExited = _ref.handleExited, firstRender = _ref.firstRender;
    return {
      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),
      firstRender: false
    };
  };
  _proto.handleExited = function handleExited(child, node14) {
    var currentChildMapping = getChildMapping(this.props.children);
    if (child.key in currentChildMapping)
      return;
    if (child.props.onExited) {
      child.props.onExited(node14);
    }
    if (this.mounted) {
      this.setState(function(state) {
        var children3 = _extends({}, state.children);
        delete children3[child.key];
        return {
          children: children3
        };
      });
    }
  };
  _proto.render = function render() {
    var _this$props = this.props, Component34 = _this$props.component, childFactory2 = _this$props.childFactory, props = _objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);
    var contextValue = this.state.contextValue;
    var children3 = values(this.state.children).map(childFactory2);
    delete props.appear;
    delete props.enter;
    delete props.exit;
    if (Component34 === null) {
      return import_react5.default.createElement(TransitionGroupContext_default.Provider, {
        value: contextValue
      }, children3);
    }
    return import_react5.default.createElement(TransitionGroupContext_default.Provider, {
      value: contextValue
    }, import_react5.default.createElement(Component34, props, children3));
  };
  return TransitionGroup2;
}(import_react5.default.Component);
TransitionGroup.propTypes = true ? {
  component: import_prop_types4.default.any,
  children: import_prop_types4.default.node,
  appear: import_prop_types4.default.bool,
  enter: import_prop_types4.default.bool,
  exit: import_prop_types4.default.bool,
  childFactory: import_prop_types4.default.func
} : {};
TransitionGroup.defaultProps = defaultProps7;
var TransitionGroup_default = TransitionGroup;

// node_modules/@progress/kendo-react-animation/node_modules/react-transition-group/esm/ReplaceTransition.js
var ReplaceTransition = function(_React$Component) {
  _inheritsLoose(ReplaceTransition2, _React$Component);
  function ReplaceTransition2() {
    var _this;
    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;
    _this.handleEnter = function() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      return _this.handleLifecycle("onEnter", 0, args);
    };
    _this.handleEntering = function() {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }
      return _this.handleLifecycle("onEntering", 0, args);
    };
    _this.handleEntered = function() {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }
      return _this.handleLifecycle("onEntered", 0, args);
    };
    _this.handleExit = function() {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }
      return _this.handleLifecycle("onExit", 1, args);
    };
    _this.handleExiting = function() {
      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }
      return _this.handleLifecycle("onExiting", 1, args);
    };
    _this.handleExited = function() {
      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }
      return _this.handleLifecycle("onExited", 1, args);
    };
    return _this;
  }
  var _proto = ReplaceTransition2.prototype;
  _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {
    var _child$props;
    var children3 = this.props.children;
    var child = import_react6.default.Children.toArray(children3)[idx];
    if (child.props[handler])
      (_child$props = child.props)[handler].apply(_child$props, originalArgs);
    if (this.props[handler]) {
      var maybeNode = child.props.nodeRef ? void 0 : import_react_dom2.default.findDOMNode(this);
      this.props[handler](maybeNode);
    }
  };
  _proto.render = function render() {
    var _this$props = this.props, children3 = _this$props.children, inProp = _this$props.in, props = _objectWithoutPropertiesLoose(_this$props, ["children", "in"]);
    var _React$Children$toArr = import_react6.default.Children.toArray(children3), first = _React$Children$toArr[0], second = _React$Children$toArr[1];
    delete props.onEnter;
    delete props.onEntering;
    delete props.onEntered;
    delete props.onExit;
    delete props.onExiting;
    delete props.onExited;
    return import_react6.default.createElement(TransitionGroup_default, props, inProp ? import_react6.default.cloneElement(first, {
      key: "first",
      onEnter: this.handleEnter,
      onEntering: this.handleEntering,
      onEntered: this.handleEntered
    }) : import_react6.default.cloneElement(second, {
      key: "second",
      onEnter: this.handleExit,
      onEntering: this.handleExiting,
      onEntered: this.handleExited
    }));
  };
  return ReplaceTransition2;
}(import_react6.default.Component);
ReplaceTransition.propTypes = true ? {
  in: import_prop_types5.default.bool.isRequired,
  children: function children2(props, propName) {
    if (import_react6.default.Children.count(props[propName]) !== 2)
      return new Error('"' + propName + '" must be exactly two transition components.');
    return null;
  }
} : {};

// node_modules/@progress/kendo-react-animation/node_modules/react-transition-group/esm/SwitchTransition.js
var import_react7 = __toESM(require_react());
var import_prop_types6 = __toESM(require_prop_types());
var _leaveRenders;
var _enterRenders;
function areChildrenDifferent(oldChildren, newChildren) {
  if (oldChildren === newChildren)
    return false;
  if (import_react7.default.isValidElement(oldChildren) && import_react7.default.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {
    return false;
  }
  return true;
}
var modes = {
  out: "out-in",
  in: "in-out"
};
var callHook = function callHook2(element5, name, cb) {
  return function() {
    var _element$props;
    element5.props[name] && (_element$props = element5.props)[name].apply(_element$props, arguments);
    cb();
  };
};
var leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function(_ref) {
  var current = _ref.current, changeState = _ref.changeState;
  return import_react7.default.cloneElement(current, {
    in: false,
    onExited: callHook(current, "onExited", function() {
      changeState(ENTERING, null);
    })
  });
}, _leaveRenders[modes.in] = function(_ref2) {
  var current = _ref2.current, changeState = _ref2.changeState, children3 = _ref2.children;
  return [current, import_react7.default.cloneElement(children3, {
    in: true,
    onEntered: callHook(children3, "onEntered", function() {
      changeState(ENTERING);
    })
  })];
}, _leaveRenders);
var enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function(_ref3) {
  var children3 = _ref3.children, changeState = _ref3.changeState;
  return import_react7.default.cloneElement(children3, {
    in: true,
    onEntered: callHook(children3, "onEntered", function() {
      changeState(ENTERED, import_react7.default.cloneElement(children3, {
        in: true
      }));
    })
  });
}, _enterRenders[modes.in] = function(_ref4) {
  var current = _ref4.current, children3 = _ref4.children, changeState = _ref4.changeState;
  return [import_react7.default.cloneElement(current, {
    in: false,
    onExited: callHook(current, "onExited", function() {
      changeState(ENTERED, import_react7.default.cloneElement(children3, {
        in: true
      }));
    })
  }), import_react7.default.cloneElement(children3, {
    in: true
  })];
}, _enterRenders);
var SwitchTransition = function(_React$Component) {
  _inheritsLoose(SwitchTransition2, _React$Component);
  function SwitchTransition2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.state = {
      status: ENTERED,
      current: null
    };
    _this.appeared = false;
    _this.changeState = function(status, current) {
      if (current === void 0) {
        current = _this.state.current;
      }
      _this.setState({
        status,
        current
      });
    };
    return _this;
  }
  var _proto = SwitchTransition2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.appeared = true;
  };
  SwitchTransition2.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
    if (props.children == null) {
      return {
        current: null
      };
    }
    if (state.status === ENTERING && props.mode === modes.in) {
      return {
        status: ENTERING
      };
    }
    if (state.current && areChildrenDifferent(state.current, props.children)) {
      return {
        status: EXITING
      };
    }
    return {
      current: import_react7.default.cloneElement(props.children, {
        in: true
      })
    };
  };
  _proto.render = function render() {
    var _this$props = this.props, children3 = _this$props.children, mode = _this$props.mode, _this$state = this.state, status = _this$state.status, current = _this$state.current;
    var data = {
      children: children3,
      current,
      changeState: this.changeState,
      status
    };
    var component;
    switch (status) {
      case ENTERING:
        component = enterRenders[mode](data);
        break;
      case EXITING:
        component = leaveRenders[mode](data);
        break;
      case ENTERED:
        component = current;
    }
    return import_react7.default.createElement(TransitionGroupContext_default.Provider, {
      value: {
        isMounting: !this.appeared
      }
    }, component);
  };
  return SwitchTransition2;
}(import_react7.default.Component);
SwitchTransition.propTypes = true ? {
  mode: import_prop_types6.default.oneOf([modes.in, modes.out]),
  children: import_prop_types6.default.oneOfType([import_prop_types6.default.element.isRequired])
} : {};
SwitchTransition.defaultProps = {
  mode: modes.out
};

// node_modules/@progress/kendo-react-animation/dist/es/util.js
var outerHeight = function(element5) {
  if (!element5 || !element5.ownerDocument.defaultView) {
    return 0;
  }
  var wnd = element5.ownerDocument.defaultView;
  var computedStyles = wnd.getComputedStyle(element5);
  var marginTop = parseFloat(computedStyles.marginTop);
  var marginBottom = parseFloat(computedStyles.marginBottom);
  return element5.offsetHeight + marginTop + marginBottom;
};
var outerWidth = function(element5) {
  if (!element5 || !element5.ownerDocument.defaultView) {
    return 0;
  }
  var wnd = element5.ownerDocument.defaultView;
  var computedStyles = wnd.getComputedStyle(element5);
  var marginLeft = parseFloat(computedStyles.marginLeft);
  var marginRight = parseFloat(computedStyles.marginRight);
  return element5.offsetWidth + marginLeft + marginRight;
};
var styles3 = {
  "animation-container": "k-animation-container",
  "animation-container-relative": "k-animation-container-relative",
  "animation-container-fixed": "k-animation-container-fixed",
  "push-right-enter": "k-push-right-enter",
  "push-right-appear": "k-push-right-appear",
  "push-right-enter-active": "k-push-right-enter-active",
  "push-right-appear-active": "k-push-right-appear-active",
  "push-right-exit": "k-push-right-exit",
  "push-right-exit-active": "k-push-right-exit-active",
  "push-left-enter": "k-push-left-enter",
  "push-left-appear": "k-push-left-appear",
  "push-left-enter-active": "k-push-left-enter-active",
  "push-left-appear-active": "k-push-left-appear-active",
  "push-left-exit": "k-push-left-exit",
  "push-left-exit-active": "k-push-left-exit-active",
  "push-down-enter": "k-push-down-enter",
  "push-down-appear": "k-push-down-appear",
  "push-down-enter-active": "k-push-down-enter-active",
  "push-down-appear-active": "k-push-down-appear-active",
  "push-down-exit": "k-push-down-exit",
  "push-down-exit-active": "k-push-down-exit-active",
  "push-up-enter": "k-push-up-enter",
  "push-up-appear": "k-push-up-appear",
  "push-up-enter-active": "k-push-up-enter-active",
  "push-up-appear-active": "k-push-up-appear-active",
  "push-up-exit": "k-push-up-exit",
  "push-up-exit-active": "k-push-up-exit-active",
  "expand": "k-expand",
  "expand-vertical-enter": "k-expand-vertical-enter",
  "expand-vertical-appear": "k-expand-vertical-appear",
  "expand-vertical-enter-active": "k-expand-vertical-enter-active",
  "expand-vertical-appear-active": "k-expand-vertical-appear-active",
  "expand-vertical-exit": "k-expand-vertical-exit",
  "expand-vertical-exit-active": "k-expand-vertical-exit-active",
  "expand-horizontal-enter": "k-expand-horizontal-enter",
  "expand-horizontal-appear": "k-expand-horizontal-appear",
  "expand-horizontal-enter-active": "k-expand-horizontal-enter-active",
  "expand-horizontal-appear-active": "k-expand-horizontal-appear-active",
  "expand-horizontal-exit": "k-expand-horizontal-exit",
  "expand-horizontal-exit-active": "k-expand-horizontal-exit-active",
  "child-animation-container": "k-child-animation-container",
  "fade-enter": "k-fade-enter",
  "fade-appear": "k-fade-appear",
  "fade-enter-active": "k-fade-enter-active",
  "fade-appear-active": "k-fade-appear-active",
  "fade-exit": "k-fade-exit",
  "fade-exit-active": "k-fade-exit-active",
  "zoom-in-enter": "k-zoom-in-enter",
  "zoom-in-appear": "k-zoom-in-appear",
  "zoom-in-enter-active": "k-zoom-in-enter-active",
  "zoom-in-appear-active": "k-zoom-in-appear-active",
  "zoom-in-exit": "k-zoom-in-exit",
  "zoom-in-exit-active": "k-zoom-in-exit-active",
  "zoom-out-enter": "k-zoom-out-enter",
  "zoom-out-appear": "k-zoom-out-appear",
  "zoom-out-enter-active": "k-zoom-out-enter-active",
  "zoom-out-appear-active": "k-zoom-out-appear-active",
  "zoom-out-exit": "k-zoom-out-exit",
  "zoom-out-exit-active": "k-zoom-out-exit-active",
  "slide-in-appear": "k-slide-in-appear",
  "centered": "k-centered",
  "slide-in-appear-active": "k-slide-in-appear-active",
  "slide-down-enter": "k-slide-down-enter",
  "slide-down-appear": "k-slide-down-appear",
  "slide-down-enter-active": "k-slide-down-enter-active",
  "slide-down-appear-active": "k-slide-down-appear-active",
  "slide-down-exit": "k-slide-down-exit",
  "slide-down-exit-active": "k-slide-down-exit-active",
  "slide-up-enter": "k-slide-up-enter",
  "slide-up-appear": "k-slide-up-appear",
  "slide-up-enter-active": "k-slide-up-enter-active",
  "slide-up-appear-active": "k-slide-up-appear-active",
  "slide-up-exit": "k-slide-up-exit",
  "slide-up-exit-active": "k-slide-up-exit-active",
  "slide-right-enter": "k-slide-right-enter",
  "slide-right-appear": "k-slide-right-appear",
  "slide-right-enter-active": "k-slide-right-enter-active",
  "slide-right-appear-active": "k-slide-right-appear-active",
  "slide-right-exit": "k-slide-right-exit",
  "slide-right-exit-active": "k-slide-right-exit-active",
  "slide-left-enter": "k-slide-left-enter",
  "slide-left-appear": "k-slide-left-appear",
  "slide-left-enter-active": "k-slide-left-enter-active",
  "slide-left-appear-active": "k-slide-left-appear-active",
  "slide-left-exit": "k-slide-left-exit",
  "slide-left-exit-active": "k-slide-left-exit-active",
  "reveal-vertical-enter": "k-reveal-vertical-enter",
  "reveal-vertical-appear": "k-reveal-vertical-appear",
  "reveal-vertical-enter-active": "k-reveal-vertical-enter-active",
  "reveal-vertical-appear-active": "k-reveal-vertical-appear-active",
  "reveal-vertical-exit": "k-reveal-vertical-exit",
  "reveal-vertical-exit-active": "k-reveal-vertical-exit-active",
  "reveal-horizontal-enter": "k-reveal-horizontal-enter",
  "reveal-horizontal-appear": "k-reveal-horizontal-appear",
  "reveal-horizontal-enter-active": "k-reveal-horizontal-enter-active",
  "reveal-horizontal-appear-active": "k-reveal-horizontal-appear-active",
  "reveal-horizontal-exit": "k-reveal-horizontal-exit",
  "reveal-horizontal-exit-active": "k-reveal-horizontal-exit-active"
};
var stylesMap = {
  outerHeight,
  outerWidth,
  styles: styles3
};
var util_default2 = stylesMap;

// node_modules/@progress/kendo-react-animation/dist/es/AnimationChild.js
var __extends26 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign27 = function() {
  __assign27 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign27.apply(this, arguments);
};
var __rest8 = function(s, e) {
  var t = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e.indexOf(p2) < 0)
      t[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t[p2[i]] = s[p2[i]];
    }
  return t;
};
var styles4 = util_default2.styles;
var AnimationChild = function(_super) {
  __extends26(AnimationChild2, _super);
  function AnimationChild2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.elementRef = React71.createRef();
    return _this;
  }
  Object.defineProperty(AnimationChild2.prototype, "element", {
    get: function() {
      return this.elementRef.current;
    },
    enumerable: false,
    configurable: true
  });
  AnimationChild2.prototype.render = function() {
    var _this = this;
    var _a3 = this.props, children3 = _a3.children, style = _a3.style, appear = _a3.appear, enter = _a3.enter, exit = _a3.exit, transitionName = _a3.transitionName, transitionEnterDuration = _a3.transitionEnterDuration, transitionExitDuration = _a3.transitionExitDuration, className = _a3.className, onEnter = _a3.onEnter, onEntering = _a3.onEntering, onEntered = _a3.onEntered, onExit = _a3.onExit, onExiting = _a3.onExiting, onExited = _a3.onExited, onAfterExited = _a3.onAfterExited, mountOnEnter = _a3.mountOnEnter, unmountOnExit = _a3.unmountOnExit, animationEnteringStyle = _a3.animationEnteringStyle, animationEnteredStyle = _a3.animationEnteredStyle, animationExitingStyle = _a3.animationExitingStyle, animationExitedStyle = _a3.animationExitedStyle, other = __rest8(_a3, ["children", "style", "appear", "enter", "exit", "transitionName", "transitionEnterDuration", "transitionExitDuration", "className", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "onAfterExited", "mountOnEnter", "unmountOnExit", "animationEnteringStyle", "animationEnteredStyle", "animationExitingStyle", "animationExitedStyle"]);
    var childAnimationContainerClassNames = classNames(className, styles4["child-animation-container"]);
    var defaultStyle = __assign27({ transitionDelay: "0ms" }, style);
    var animationStyle = {
      entering: __assign27({ transitionDuration: "".concat(transitionEnterDuration, "ms") }, animationEnteringStyle),
      entered: __assign27({}, animationEnteredStyle),
      exiting: __assign27({ transitionDuration: "".concat(transitionExitDuration, "ms") }, animationExitingStyle),
      exited: __assign27({}, animationExitedStyle)
    };
    var transitionProps = {
      in: this.props.in,
      appear,
      enter,
      exit,
      mountOnEnter,
      unmountOnExit,
      timeout: {
        enter: transitionEnterDuration,
        exit: transitionExitDuration
      },
      onEnter: function() {
        if (onEnter) {
          onEnter.call(void 0, { animatedElement: _this.element, target: _this });
        }
      },
      onEntering: function() {
        if (onEntering) {
          onEntering.call(void 0, { animatedElement: _this.element, target: _this });
        }
      },
      onEntered: function() {
        if (onEntered) {
          onEntered.call(void 0, { animatedElement: _this.element, target: _this });
        }
      },
      onExit: function() {
        if (onExit) {
          onExit.call(void 0, { animatedElement: _this.element, target: _this });
        }
      },
      onExiting: function() {
        if (onExiting) {
          onExiting.call(void 0, { animatedElement: _this.element, target: _this });
        }
      },
      onExited: function() {
        if (onAfterExited) {
          onAfterExited.call(void 0, { animatedElement: _this.element, target: _this });
        }
        if (onExited) {
          onExited.call(void 0, { animatedElement: _this.element, target: _this });
        }
      },
      classNames: {
        appear: styles4["".concat(transitionName, "-appear")] || "".concat(transitionName, "-appear"),
        appearActive: styles4["".concat(transitionName, "-appear-active")] || "".concat(transitionName, "-appear-active"),
        enter: styles4["".concat(transitionName, "-enter")] || "".concat(transitionName, "-enter"),
        enterActive: styles4["".concat(transitionName, "-enter-active")] || "".concat(transitionName, "-enter-active"),
        exit: styles4["".concat(transitionName, "-exit")] || "".concat(transitionName, "-exit"),
        exitActive: styles4["".concat(transitionName, "-exit-active")] || "".concat(transitionName, "-exit-active")
      }
    };
    return React71.createElement(CSSTransition_default, __assign27({}, transitionProps, other, { nodeRef: this.elementRef }), function(status) {
      return React71.createElement("div", { style: __assign27(__assign27({}, defaultStyle), animationStyle[status]), className: childAnimationContainerClassNames, ref: _this.elementRef }, children3);
    });
  };
  AnimationChild2.propTypes = {
    in: PropTypes36.bool,
    children: PropTypes36.oneOfType([
      PropTypes36.arrayOf(PropTypes36.node),
      PropTypes36.node
    ]),
    transitionName: PropTypes36.string.isRequired,
    className: PropTypes36.string,
    appear: PropTypes36.bool,
    enter: PropTypes36.bool,
    exit: PropTypes36.bool,
    transitionEnterDuration: PropTypes36.number.isRequired,
    transitionExitDuration: PropTypes36.number.isRequired,
    mountOnEnter: PropTypes36.bool,
    unmountOnExit: PropTypes36.bool,
    animationEnteringStyle: PropTypes36.object,
    animationEnteredStyle: PropTypes36.object,
    animationExitingStyle: PropTypes36.object,
    animationExitedStyle: PropTypes36.object
  };
  AnimationChild2.defaultProps = {
    mountOnEnter: true,
    unmountOnExit: false,
    onEnter: noop,
    onEntering: noop,
    onEntered: noop,
    onExit: noop,
    onExiting: noop,
    onExited: noop,
    onAfterExited: noop,
    animationEnteringStyle: {},
    animationEnteredStyle: {},
    animationExitingStyle: {},
    animationExitedStyle: {}
  };
  return AnimationChild2;
}(React71.Component);

// node_modules/@progress/kendo-react-animation/dist/es/package-metadata.js
var packageMetadata6 = {
  name: "@progress/kendo-react-animation",
  productName: "KendoReact",
  productCodes: ["KENDOUIREACT", "KENDOUICOMPLETE"],
  publishDate: 1666770467,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-react-ui/my-license/?utm_medium=product&utm_source=kendoreact&utm_campaign=kendo-ui-react-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-react-animation/dist/es/Animation.js
var __extends27 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign28 = function() {
  __assign28 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign28.apply(this, arguments);
};
var __rest9 = function(s, e) {
  var t = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e.indexOf(p2) < 0)
      t[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t[p2[i]] = s[p2[i]];
    }
  return t;
};
var styles5 = util_default2.styles;
var Animation = function(_super) {
  __extends27(Animation2, _super);
  function Animation2(props) {
    var _this = _super.call(this, props) || this;
    validatePackage2(packageMetadata6);
    return _this;
  }
  Animation2.prototype.render = function() {
    var _a3 = this.props, id = _a3.id, style = _a3.style, children3 = _a3.children, component = _a3.component, className = _a3.className, childFactory2 = _a3.childFactory, stackChildren = _a3.stackChildren, componentChildStyle = _a3.componentChildStyle, componentChildClassName = _a3.componentChildClassName, other = __rest9(_a3, ["id", "style", "children", "component", "className", "childFactory", "stackChildren", "componentChildStyle", "componentChildClassName"]);
    var transitionProps = {
      id,
      style,
      component,
      childFactory: childFactory2,
      className: classNames(styles5["animation-container"], styles5["animation-container-relative"], className)
    };
    var content = React72.Children.map(children3 || null, function(child) {
      return React72.createElement(AnimationChild, __assign28({}, other, { style: componentChildStyle, className: componentChildClassName }), child);
    });
    return React72.createElement(TransitionGroup_default, __assign28({}, transitionProps), content);
  };
  Animation2.propTypes = {
    children: PropTypes37.oneOfType([
      PropTypes37.arrayOf(PropTypes37.node),
      PropTypes37.node
    ]),
    childFactory: PropTypes37.any,
    className: PropTypes37.string,
    component: PropTypes37.string,
    id: PropTypes37.string,
    style: PropTypes37.any,
    transitionName: PropTypes37.string.isRequired,
    appear: PropTypes37.bool.isRequired,
    enter: PropTypes37.bool.isRequired,
    exit: PropTypes37.bool.isRequired,
    transitionEnterDuration: PropTypes37.number.isRequired,
    transitionExitDuration: PropTypes37.number.isRequired
  };
  Animation2.defaultProps = {
    component: "div"
  };
  return Animation2;
}(React72.Component);

// node_modules/@progress/kendo-react-animation/dist/es/Fade.js
var React73 = __toESM(require_react());
var PropTypes38 = __toESM(require_prop_types());
var __extends28 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign29 = function() {
  __assign29 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign29.apply(this, arguments);
};
var __rest10 = function(s, e) {
  var t = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e.indexOf(p2) < 0)
      t[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t[p2[i]] = s[p2[i]];
    }
  return t;
};
var Fade = function(_super) {
  __extends28(Fade2, _super);
  function Fade2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Fade2.prototype.render = function() {
    var _a3 = this.props, children3 = _a3.children, other = __rest10(_a3, ["children"]);
    var animationProps = {
      transitionName: "fade"
    };
    return React73.createElement(Animation, __assign29({}, animationProps, other), children3);
  };
  Fade2.propTypes = {
    children: PropTypes38.oneOfType([
      PropTypes38.arrayOf(PropTypes38.node),
      PropTypes38.node
    ]),
    childFactory: PropTypes38.any,
    className: PropTypes38.string,
    component: PropTypes38.string,
    id: PropTypes38.string,
    style: PropTypes38.any
  };
  Fade2.defaultProps = {
    appear: false,
    enter: true,
    exit: false,
    transitionEnterDuration: 500,
    transitionExitDuration: 500
  };
  return Fade2;
}(React73.Component);

// node_modules/@progress/kendo-react-animation/dist/es/Expand.js
var React74 = __toESM(require_react());
var PropTypes39 = __toESM(require_prop_types());
var __extends29 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign30 = function() {
  __assign30 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign30.apply(this, arguments);
};
var __rest11 = function(s, e) {
  var t = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e.indexOf(p2) < 0)
      t[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t[p2[i]] = s[p2[i]];
    }
  return t;
};
var Expand = function(_super) {
  __extends29(Expand2, _super);
  function Expand2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Expand2.prototype.render = function() {
    var _a3 = this.props, direction = _a3.direction, children3 = _a3.children, other = __rest11(_a3, ["direction", "children"]);
    var animationProps = {
      transitionName: "expand-".concat(direction)
    };
    return React74.createElement(Animation, __assign30({}, animationProps, other), children3);
  };
  Expand2.propTypes = {
    children: PropTypes39.oneOfType([
      PropTypes39.arrayOf(PropTypes39.node),
      PropTypes39.node
    ]),
    childFactory: PropTypes39.any,
    className: PropTypes39.string,
    direction: PropTypes39.oneOf([
      "horizontal",
      "vertical"
    ]),
    component: PropTypes39.string,
    id: PropTypes39.string,
    style: PropTypes39.any
  };
  Expand2.defaultProps = {
    appear: false,
    enter: true,
    exit: true,
    transitionEnterDuration: 300,
    transitionExitDuration: 300,
    direction: "vertical"
  };
  return Expand2;
}(React74.Component);

// node_modules/@progress/kendo-react-animation/dist/es/Push.js
var React75 = __toESM(require_react());
var PropTypes40 = __toESM(require_prop_types());
var __extends30 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign31 = function() {
  __assign31 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign31.apply(this, arguments);
};
var __rest12 = function(s, e) {
  var t = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e.indexOf(p2) < 0)
      t[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t[p2[i]] = s[p2[i]];
    }
  return t;
};
var EXITING_ANIMATION_STYLE = { position: "absolute", top: "0", left: "0" };
var Push = function(_super) {
  __extends30(Push2, _super);
  function Push2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Push2.prototype.render = function() {
    var _a3 = this.props, children3 = _a3.children, direction = _a3.direction, other = __rest12(_a3, ["children", "direction"]);
    return React75.createElement(Animation, __assign31({}, other, { transitionName: "push-".concat(direction), animationExitingStyle: this.props.stackChildren ? EXITING_ANIMATION_STYLE : void 0 }), children3);
  };
  Push2.propTypes = {
    children: PropTypes40.oneOfType([
      PropTypes40.arrayOf(PropTypes40.node),
      PropTypes40.node
    ]),
    childFactory: PropTypes40.any,
    className: PropTypes40.string,
    direction: PropTypes40.oneOf([
      "up",
      "down",
      "left",
      "right"
    ]),
    component: PropTypes40.string,
    id: PropTypes40.string,
    style: PropTypes40.any,
    stackChildren: PropTypes40.bool
  };
  Push2.defaultProps = {
    appear: false,
    enter: true,
    exit: true,
    transitionEnterDuration: 300,
    transitionExitDuration: 300,
    direction: "right",
    stackChildren: false
  };
  return Push2;
}(React75.Component);

// node_modules/@progress/kendo-react-animation/dist/es/Slide.js
var React76 = __toESM(require_react());
var PropTypes41 = __toESM(require_prop_types());
var __extends31 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign32 = function() {
  __assign32 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign32.apply(this, arguments);
};
var __rest13 = function(s, e) {
  var t = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e.indexOf(p2) < 0)
      t[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t[p2[i]] = s[p2[i]];
    }
  return t;
};
var Slide = function(_super) {
  __extends31(Slide2, _super);
  function Slide2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Slide2.prototype.render = function() {
    var _a3 = this.props, direction = _a3.direction, children3 = _a3.children, other = __rest13(_a3, ["direction", "children"]);
    var animationProps = {
      transitionName: "slide-".concat(direction)
    };
    return React76.createElement(Animation, __assign32({}, animationProps, other), children3);
  };
  Slide2.propTypes = {
    children: PropTypes41.oneOfType([
      PropTypes41.arrayOf(PropTypes41.node),
      PropTypes41.node
    ]),
    childFactory: PropTypes41.any,
    className: PropTypes41.string,
    direction: PropTypes41.oneOf([
      "up",
      "down",
      "left",
      "right"
    ]),
    component: PropTypes41.string,
    id: PropTypes41.string,
    style: PropTypes41.any
  };
  Slide2.defaultProps = {
    appear: false,
    enter: true,
    exit: true,
    transitionEnterDuration: 300,
    transitionExitDuration: 300,
    direction: "down"
  };
  return Slide2;
}(React76.Component);

// node_modules/@progress/kendo-react-animation/dist/es/Zoom.js
var React77 = __toESM(require_react());
var PropTypes42 = __toESM(require_prop_types());
var __extends32 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign33 = function() {
  __assign33 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign33.apply(this, arguments);
};
var __rest14 = function(s, e) {
  var t = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e.indexOf(p2) < 0)
      t[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t[p2[i]] = s[p2[i]];
    }
  return t;
};
var EXITING_ANIMATION_STYLE2 = { position: "absolute", top: "0", left: "0" };
var Zoom = function(_super) {
  __extends32(Zoom2, _super);
  function Zoom2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Zoom2.prototype.render = function() {
    var _a3 = this.props, children3 = _a3.children, direction = _a3.direction, other = __rest14(_a3, ["children", "direction"]);
    return React77.createElement(Animation, __assign33({}, other, { transitionName: "zoom-".concat(direction), animationExitingStyle: this.props.stackChildren ? EXITING_ANIMATION_STYLE2 : void 0 }), children3);
  };
  Zoom2.propTypes = {
    children: PropTypes42.oneOfType([
      PropTypes42.arrayOf(PropTypes42.node),
      PropTypes42.node
    ]),
    childFactory: PropTypes42.any,
    className: PropTypes42.string,
    direction: PropTypes42.oneOf([
      "in",
      "out"
    ]),
    component: PropTypes42.string,
    id: PropTypes42.string,
    style: PropTypes42.any,
    stackChildren: PropTypes42.bool
  };
  Zoom2.defaultProps = {
    appear: false,
    enter: true,
    exit: true,
    transitionEnterDuration: 300,
    transitionExitDuration: 300,
    direction: "out",
    stackChildren: false
  };
  return Zoom2;
}(React77.Component);

// node_modules/@progress/kendo-react-animation/dist/es/Reveal.js
var React78 = __toESM(require_react());
var PropTypes43 = __toESM(require_prop_types());
var __extends33 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign34 = function() {
  __assign34 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign34.apply(this, arguments);
};
var __rest15 = function(s, e) {
  var t = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e.indexOf(p2) < 0)
      t[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t[p2[i]] = s[p2[i]];
    }
  return t;
};
var Reveal = function(_super) {
  __extends33(Reveal2, _super);
  function Reveal2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.state = {
      maxHeight: void 0,
      maxWidth: void 0
    };
    _this.componentWillEnter = function(event) {
      var _a3 = _this.props, onEnter = _a3.onEnter, onBeforeEnter = _a3.onBeforeEnter;
      if (onBeforeEnter) {
        onBeforeEnter.call(void 0, event);
      }
      _this.updateContainerDimensions(event.animatedElement, function() {
        if (onEnter) {
          onEnter.call(void 0, event);
        }
      });
    };
    _this.componentIsEntering = function(event) {
      var onEntering = _this.props.onEntering;
      _this.updateContainerDimensions(event.animatedElement, function() {
        if (onEntering) {
          onEntering.call(void 0, event);
        }
      });
    };
    _this.componentWillExit = function(event) {
      var onExit = _this.props.onExit;
      _this.updateContainerDimensions(event.animatedElement, function() {
        if (onExit) {
          onExit.call(void 0, event);
        }
      });
    };
    _this.updateContainerDimensions = function(node14, done) {
      if (done === void 0) {
        done = noop;
      }
      var content = node14.firstChild;
      if (content) {
        var newHeight = util_default2.outerHeight(content);
        var newWidth = util_default2.outerWidth(content);
        _this.setState({
          maxHeight: newHeight,
          maxWidth: newWidth
        }, done);
      }
    };
    return _this;
  }
  Reveal2.prototype.render = function() {
    var _a3 = this.props, direction = _a3.direction, children3 = _a3.children, childFactory2 = _a3.childFactory, other = __rest15(_a3, ["direction", "children", "childFactory"]);
    var _b = this.state, maxHeight = _b.maxHeight, maxWidth = _b.maxWidth;
    var maxOffset;
    if (direction === "vertical") {
      maxOffset = { maxHeight: maxHeight ? "".concat(maxHeight, "px") : "" };
    } else {
      maxOffset = { maxWidth: maxWidth ? "".concat(maxWidth, "px") : "" };
    }
    var animationEnteringStyle = {
      maxHeight: maxOffset.maxHeight,
      maxWidth: maxOffset.maxWidth
    };
    var factory = function(child) {
      var result = childFactory2 ? childFactory2(child) : child;
      if (!result.props.in) {
        return React78.cloneElement(result, __assign34(__assign34({}, result.props), { style: __assign34(__assign34({}, result.props.style), { maxHeight: maxOffset.maxHeight, maxWidth: maxOffset.maxWidth }) }));
      }
      return result;
    };
    return React78.createElement(Animation, __assign34({}, other, { childFactory: factory, onEnter: this.componentWillEnter, onEntering: this.componentIsEntering, onExit: this.componentWillExit, animationEnteringStyle, transitionName: "reveal-".concat(direction) }), children3);
  };
  Reveal2.propTypes = {
    children: PropTypes43.oneOfType([
      PropTypes43.arrayOf(PropTypes43.node),
      PropTypes43.node
    ]),
    childFactory: PropTypes43.any,
    className: PropTypes43.string,
    direction: PropTypes43.oneOf([
      "horizontal",
      "vertical"
    ]),
    component: PropTypes43.string,
    id: PropTypes43.string,
    style: PropTypes43.any
  };
  Reveal2.defaultProps = {
    appear: false,
    enter: true,
    exit: true,
    transitionEnterDuration: 300,
    transitionExitDuration: 300,
    direction: "vertical"
  };
  return Reveal2;
}(React78.Component);

// node_modules/@progress/kendo-react-animation/dist/es/hooks/useAnimation.js
var React79 = __toESM(require_react());

// node_modules/@progress/kendo-react-treeview/dist/es/utils/consts.js
var EXPAND_FIELD = "expanded";
var TEXT_FIELD = "text";
var DISABLED_FIELD = "disabled";
var CHILDREN_FIELD = "items";
var HAS_CHILDREN_FIELD = "hasChildren";
var SELECT_FIELD = "selected";
var CHECK_FIELD = "checked";
var CHECK_INDETERMINATE_FIELD = "checkIndeterminate";
var DOM_KENDO_ITEM_ID_FIELD = "_kendoItemId";
var DOM_KENDO_TREEVIEW_GUID_FIELD = "_kendoTreeViewGuid";

// node_modules/@progress/kendo-react-treeview/dist/es/TreeViewItem.js
var __extends34 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign35 = function() {
  __assign35 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign35.apply(this, arguments);
};
var sizeMap6 = kendoThemeMaps.sizeMap;
var TreeViewItemPropsContext = React80.createContext(function(props) {
  return props;
});
var TreeViewItemWithoutContext = function(_super) {
  __extends34(TreeViewItemWithoutContext2, _super);
  function TreeViewItemWithoutContext2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.itemGuid = guid();
    _this.onCheckChange = function(e) {
      _this.props.onCheckChange(e, _this.item, _this.itemId);
    };
    _this.onExpandChange = function(e) {
      _this.props.onExpandChange(e, _this.item, _this.itemId);
    };
    _this.onItemClick = function(e) {
      _this.props.onItemClick(e, _this.item, _this.itemId);
    };
    _this.onPress = function(e) {
      _this.props.onPress(e.event, _this.item, _this.itemId);
    };
    _this.onDrag = function(e) {
      _this.props.onDrag(e.event, _this.item, _this.itemId);
    };
    _this.onRelease = function(e) {
      _this.props.onRelease(e.event, _this.item, _this.itemId);
    };
    _this.assignDraggableMeta = function(element5) {
      if (element5) {
        element5[DOM_KENDO_ITEM_ID_FIELD] = _this.props.itemId;
        element5[DOM_KENDO_TREEVIEW_GUID_FIELD] = _this.props.treeGuid;
      }
    };
    return _this;
  }
  TreeViewItemWithoutContext2.prototype.render = function() {
    var _this = this;
    var subitems = this.renderSubitemsIfApplicable();
    var itemInPart = this.renderItemInPart();
    return React80.createElement(
      "li",
      { className: classNames("k-treeview-item"), tabIndex: this.tabIndex, role: "treeitem", "aria-expanded": this.ariaExpanded, "aria-selected": this.ariaSelected, "aria-checked": this.ariaChecked, "aria-disabled": this.disabled ? true : void 0, ref: function(el) {
        return _this.itemElement = el;
      } },
      React80.createElement(
        "div",
        { className: "k-treeview-".concat(this.props.position), ref: this.assignDraggableMeta },
        this.renderExpandIcon(),
        this.renderCheckbox(),
        this.props.draggable ? React80.createElement(Draggable, { onPress: this.onPress, onDrag: this.onDrag, onRelease: this.onRelease }, itemInPart) : itemInPart
      ),
      this.props.animate ? React80.createElement(Reveal, { transitionEnterDuration: 200, transitionExitDuration: 200, style: { display: "block" }, children: subitems }) : subitems
    );
  };
  TreeViewItemWithoutContext2.prototype.componentDidMount = function() {
    var focusedItemId = this.props.focusedItemId;
    var currentItemId = this.itemId;
    if (focusedItemId && focusedItemId === currentItemId) {
      this.props.onFocusDomElNeeded(this.itemElement);
    }
    if (this.checkboxElement) {
      this.checkboxElement.indeterminate = this.fieldsSvc.checkIndeterminate(this.item);
    }
  };
  TreeViewItemWithoutContext2.prototype.componentDidUpdate = function(prevProps) {
    var focusedItemId = this.props.focusedItemId;
    if (focusedItemId && focusedItemId !== prevProps.focusedItemId && focusedItemId === this.itemId) {
      this.props.onFocusDomElNeeded(this.itemElement);
    }
    if (this.checkboxElement) {
      var indeterminate = this.fieldsSvc.checkIndeterminate(this.item);
      if (indeterminate !== prevProps.fieldsService.checkIndeterminate(prevProps.item)) {
        this.checkboxElement.indeterminate = indeterminate;
      }
    }
  };
  TreeViewItemWithoutContext2.prototype.renderCheckbox = function() {
    var _a3;
    var _this = this;
    if (this.props.checkboxes) {
      var size = this.props.size;
      return React80.createElement(
        "div",
        { className: classNames("k-checkbox-wrap") },
        React80.createElement("input", { type: "checkbox", className: classNames("k-checkbox k-rounded-md", (_a3 = {}, _a3["k-checkbox-".concat(sizeMap6[size] || size)] = size, _a3["k-disabled"] = this.disabled, _a3)), "aria-label": this.item.text, checked: Boolean(this.fieldsSvc.checked(this.item)), id: this.itemGuid, tabIndex: -1, onChange: this.onCheckChange, ref: function(el) {
          return _this.checkboxElement = el;
        } }),
        React80.createElement("label", { className: "k-checkbox-label", htmlFor: this.itemGuid })
      );
    } else {
      return void 0;
    }
  };
  TreeViewItemWithoutContext2.prototype.renderExpandIcon = function() {
    var renderExpand = this.props.expandIcons && (this.fieldsSvc.hasChildren(this.item) || hasChildren(this.item, this.fieldsSvc.getChildrenField()));
    return renderExpand && React80.createElement(
      "span",
      { className: classNames("k-treeview-toggle", { "k-disabled": this.disabled }) },
      React80.createElement("span", { className: this.getIconClassName(), onClick: this.onExpandChange })
    );
  };
  TreeViewItemWithoutContext2.prototype.renderSubitemsIfApplicable = function() {
    var _this = this;
    var data = this.fieldsSvc.children(this.item);
    return isItemExpandedAndWithChildren(this.item, this.fieldsSvc) ? React80.createElement("ul", { className: "k-treeview-group", role: "group" }, data.map(function(item, index) {
      return React80.createElement(TreeViewItem, { item, position: index === 0 ? "top" : index === data.length - 1 ? "bot" : "mid", itemId: createId(index, _this.itemId), treeGuid: _this.props.treeGuid, animate: _this.props.animate, focusedItemId: _this.props.focusedItemId, tabbableItemId: _this.props.tabbableItemId, fieldsService: _this.props.fieldsService, itemUI: _this.props.itemUI, checkboxes: _this.props.checkboxes, ariaMultiSelectable: _this.props.ariaMultiSelectable, onItemClick: _this.props.onItemClick, onFocusDomElNeeded: _this.props.onFocusDomElNeeded, draggable: _this.props.draggable, onPress: _this.props.onPress, onDrag: _this.props.onDrag, onRelease: _this.props.onRelease, expandIcons: _this.props.expandIcons, onExpandChange: _this.props.onExpandChange, onCheckChange: _this.props.onCheckChange, key: index, size: _this.props.size, disabled: _this.disabled });
    })) : void 0;
  };
  TreeViewItemWithoutContext2.prototype.renderItemInPart = function() {
    return React80.createElement(
      "span",
      { className: classNames("k-treeview-leaf", {
        "k-focus": this.props.focusedItemId === this.itemId,
        "k-selected": this.fieldsSvc.selected(this.item),
        "k-disabled": this.disabled
      }), style: { touchAction: "none" }, onClick: this.onItemClick },
      React80.createElement("span", { className: "k-treeview-leaf-text" }, this.props.itemUI ? React80.createElement(this.props.itemUI, { item: this.item, itemHierarchicalIndex: this.itemId }) : this.fieldsSvc.text(this.item))
    );
  };
  Object.defineProperty(TreeViewItemWithoutContext2.prototype, "fieldsSvc", {
    get: function() {
      return this.props.fieldsService;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(TreeViewItemWithoutContext2.prototype, "itemId", {
    get: function() {
      return this.props.itemId;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(TreeViewItemWithoutContext2.prototype, "item", {
    get: function() {
      return this.props.item;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(TreeViewItemWithoutContext2.prototype, "tabIndex", {
    get: function() {
      return (this.props.focusedItemId || this.props.tabbableItemId) === this.itemId ? 0 : -1;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(TreeViewItemWithoutContext2.prototype, "ariaExpanded", {
    get: function() {
      return this.fieldsSvc.hasChildren(this.item) || hasChildren(this.item, this.fieldsSvc.getChildrenField()) ? Boolean(this.fieldsSvc.expanded(this.item)) : void 0;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(TreeViewItemWithoutContext2.prototype, "disabled", {
    get: function() {
      return this.props.disabled || this.fieldsSvc.disabled(this.item);
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(TreeViewItemWithoutContext2.prototype, "ariaChecked", {
    get: function() {
      if (this.props.checkboxes) {
        if (this.fieldsSvc.checked(this.item)) {
          return "true";
        } else {
          return this.fieldsSvc.checkIndeterminate(this.item) ? "mixed" : "false";
        }
      } else {
        return void 0;
      }
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(TreeViewItemWithoutContext2.prototype, "ariaSelected", {
    get: function() {
      if (this.fieldsSvc.selected(this.item)) {
        return true;
      } else if (this.props.ariaMultiSelectable) {
        return this.disabled ? void 0 : false;
      } else {
        return void 0;
      }
    },
    enumerable: false,
    configurable: true
  });
  TreeViewItemWithoutContext2.prototype.getIconClassName = function() {
    var expanded = this.fieldsSvc.expanded(this.item);
    return classNames("k-icon", {
      "k-i-caret-alt-right": !expanded,
      "k-i-caret-alt-down": expanded,
      "k-i-loading": expanded && !hasChildren(this.item, this.fieldsSvc.getChildrenField())
    });
  };
  TreeViewItemWithoutContext2.defaultProps = {
    position: "top"
  };
  return TreeViewItemWithoutContext2;
}(React80.Component);
var TreeViewItem = React80.forwardRef(function(props, ref) {
  var contextPropsCallback = React80.useContext(TreeViewItemPropsContext);
  var treeViewItemProps = contextPropsCallback.call(void 0, props);
  return React80.createElement(TreeViewItemWithoutContext, __assign35({ ref }, treeViewItemProps));
});
TreeViewItem.displayName = "TreeViewItem";

// node_modules/@progress/kendo-react-treeview/dist/es/utils/FieldsService.js
var FieldsService = function() {
  function FieldsService2(treeViewProps) {
    this.expandField = treeViewProps.expandField;
    this.selectField = treeViewProps.selectField;
    this.hasChildrenField = treeViewProps.hasChildrenField;
    this.childrenField = treeViewProps.childrenField;
    this.textField = treeViewProps.textField;
    this.disableField = treeViewProps.disableField;
    this.checkField = treeViewProps.checkField;
    this.checkIndeterminateField = treeViewProps.checkIndeterminateField;
    this.focusIdField = treeViewProps.focusIdField;
  }
  FieldsService2.prototype.expanded = function(item) {
    return getNestedValue(this.expandField, item);
  };
  FieldsService2.prototype.selected = function(item) {
    return getNestedValue(this.selectField, item);
  };
  FieldsService2.prototype.text = function(item) {
    return getNestedValue(this.textField, item);
  };
  FieldsService2.prototype.disabled = function(item) {
    return getNestedValue(this.disableField, item);
  };
  FieldsService2.prototype.hasChildren = function(item) {
    return getNestedValue(this.hasChildrenField, item);
  };
  FieldsService2.prototype.children = function(item) {
    var children3 = getNestedValue(this.childrenField, item);
    return children3 ? children3 : [];
  };
  FieldsService2.prototype.checked = function(item) {
    return getNestedValue(this.checkField, item);
  };
  FieldsService2.prototype.checkIndeterminate = function(item) {
    return getNestedValue(this.checkIndeterminateField, item);
  };
  FieldsService2.prototype.focusId = function(item) {
    return this.focusIdField && getNestedValue(this.focusIdField, item);
  };
  FieldsService2.prototype.getChildrenField = function() {
    return this.childrenField;
  };
  return FieldsService2;
}();
var FieldsService_default = FieldsService;

// node_modules/@progress/kendo-react-treeview/dist/es/package-metadata.js
var packageMetadata7 = {
  name: "@progress/kendo-react-treeview",
  productName: "KendoReact",
  productCodes: ["KENDOUIREACT", "KENDOUICOMPLETE"],
  publishDate: 1666770727,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-react-ui/my-license/?utm_medium=product&utm_source=kendoreact&utm_campaign=kendo-ui-react-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-react-treeview/dist/es/TreeView.js
var __extends35 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var sizeMap7 = kendoThemeMaps.sizeMap;
var TreeView = function(_super) {
  __extends35(TreeView2, _super);
  function TreeView2(props) {
    var _this = _super.call(this, props) || this;
    _this.state = { focusedItemId: void 0, focusedItemPublicId: void 0, tabbableItemId: ZERO_LEVEL_ZERO_NODE_ID };
    _this.fieldsSvc = null;
    _this.allowExplicitFocus = false;
    _this.treeGuid = guid();
    _this._element = null;
    _this.onFocusDomElNeeded = function(domItem) {
      if (_this.allowExplicitFocus) {
        _this.focusDomItem(domItem);
      }
    };
    _this.onCheckChange = function(event, item, itemId) {
      _this.setFocus(itemId);
      _this.dispatchCheckChange(event, item, itemId);
    };
    _this.onExpandChange = function(event, item, itemId) {
      _this.setFocus(itemId);
      _this.dispatchExpandChange(event, item, itemId);
    };
    _this.onPress = function(_event, item, itemId) {
      if (_this.props.onItemDragStart) {
        _this.props.onItemDragStart.call(void 0, { target: _this, item, itemHierarchicalIndex: itemId });
      }
    };
    _this.onDrag = function(event, item, itemId) {
      var pageX = event.pageX, pageY = event.pageY, clientX = event.clientX, clientY = event.clientY;
      if (_this.props.onItemDragOver) {
        _this.props.onItemDragOver.call(void 0, {
          target: _this,
          item,
          itemHierarchicalIndex: itemId,
          pageX,
          pageY,
          clientX,
          clientY
        });
      }
    };
    _this.onRelease = function(event, item, itemId) {
      var pageX = event.pageX, pageY = event.pageY, clientX = event.clientX, clientY = event.clientY;
      if (_this.props.onItemDragEnd) {
        _this.props.onItemDragEnd.call(void 0, {
          target: _this,
          item,
          itemHierarchicalIndex: itemId,
          pageX,
          pageY,
          clientX,
          clientY
        });
      }
    };
    _this.onItemClick = function(event, item, itemId) {
      _this.setFocus(itemId);
      _this.dispatchItemClick(event, item, itemId);
    };
    _this.onFocus = function() {
      clearTimeout(_this.blurRequest);
      if (_this.state.focusedItemId === void 0 && _this.data.length) {
        _this.setFocus(_this.state.tabbableItemId);
      }
    };
    _this.onBlur = function() {
      clearTimeout(_this.blurRequest);
      _this.blurRequest = window.setTimeout(function() {
        return _this.setFocus(void 0);
      }, 0);
    };
    _this.onKeyDown = function(event) {
      var focusedItem = _this.getFocusedItem();
      if (focusedItem && _this.fieldsSvc) {
        var newItemId = getItemIdUponKeyboardNavigation(focusedItem, _this.state.focusedItemId, _this.data, event.keyCode, _this.fieldsSvc);
        if (newItemId !== _this.state.focusedItemId) {
          event.preventDefault();
          _this.allowExplicitFocus = true;
          _this.setFocus(newItemId);
        }
        _this.dispatchEventsOnKeyDown(event, focusedItem);
      }
    };
    validatePackage2(packageMetadata7);
    return _this;
  }
  Object.defineProperty(TreeView2.prototype, "element", {
    get: function() {
      return this._element;
    },
    enumerable: false,
    configurable: true
  });
  TreeView2.prototype.render = function() {
    var _a3;
    var _this = this;
    this.fieldsSvc = new FieldsService_default(this.props);
    var _b = this.props, size = _b.size, className = _b.className;
    return React81.createElement(
      "div",
      { className: classNames("k-treeview", (_a3 = {}, _a3["k-treeview-".concat(sizeMap7[size] || size)] = size, _a3), className), onKeyDown: this.onKeyDown, onFocus: this.onFocus, onBlur: this.onBlur, role: "tree", "aria-multiselectable": this.ariaMultiSelectable ? true : void 0, "aria-label": this.props["aria-label"], "aria-labelledby": this.props["aria-labelledby"], ref: function(element5) {
        return _this._element = element5;
      }, tabIndex: this.props.tabIndex },
      React81.createElement("ul", { className: "k-treeview-lines k-treeview-group", role: "group" }, this.data.map(function(item, index) {
        return React81.createElement(TreeViewItem, { item, position: index === 0 ? "top" : index === _this.data.length - 1 ? "bot" : "mid", itemId: index.toString(), treeGuid: _this.treeGuid, animate: _this.props.animate, focusedItemId: _this.state.focusedItemId, tabbableItemId: _this.state.tabbableItemId, fieldsService: _this.fieldsSvc, itemUI: _this.props.item, checkboxes: _this.props.checkboxes, ariaMultiSelectable: _this.ariaMultiSelectable, onItemClick: _this.onItemClick, onFocusDomElNeeded: _this.onFocusDomElNeeded, draggable: _this.props.draggable, onPress: _this.onPress, onDrag: _this.onDrag, onRelease: _this.onRelease, expandIcons: _this.props.expandIcons, onExpandChange: _this.onExpandChange, onCheckChange: _this.onCheckChange, key: index, size });
      }))
    );
  };
  TreeView2.prototype.componentDidUpdate = function() {
    this.allowExplicitFocus = false;
    this.refocusDueToFocusIdField();
  };
  TreeView2.prototype.dispatchEventsOnKeyDown = function(event, focusedItem) {
    var _this = this;
    if (this.fieldsSvc === null) {
      return;
    }
    var isEnabled = function() {
      return _this.fieldsSvc && isEnabledAndAllParentsEnabled(_this.state.focusedItemId, _this.data, _this.fieldsSvc);
    };
    if (event.keyCode === Keys.left && this.fieldsSvc.expanded(focusedItem) && isEnabled()) {
      this.dispatchExpandChange(event, focusedItem, this.state.focusedItemId);
    } else if (event.keyCode === Keys.right && !this.fieldsSvc.expanded(focusedItem) && (this.fieldsSvc.hasChildren(focusedItem) || hasChildren(focusedItem, this.props.childrenField)) && isEnabled()) {
      this.dispatchExpandChange(event, focusedItem, this.state.focusedItemId);
    } else if (event.keyCode === Keys.enter && isEnabled()) {
      this.dispatchItemClick(event, focusedItem, this.state.focusedItemId);
    } else if (event.keyCode === Keys.space && isEnabled()) {
      event.preventDefault();
      this.dispatchCheckChange(event, focusedItem, this.state.focusedItemId);
    }
  };
  TreeView2.prototype.setFocus = function(focusedItemId) {
    if (focusedItemId && this.fieldsSvc) {
      if (this.fieldsSvc.focusIdField) {
        var item = this.getItemById(focusedItemId);
        this.setState({ focusedItemId, focusedItemPublicId: this.fieldsSvc.focusId(item) });
      } else {
        this.setState({ focusedItemId });
      }
    } else {
      this.setState(function(state) {
        return {
          focusedItemId: void 0,
          focusedItemPublicId: void 0,
          tabbableItemId: state.focusedItemId
        };
      });
    }
  };
  TreeView2.prototype.getFocusedItem = function() {
    return this.state.focusedItemId ? this.getItemById(this.state.focusedItemId) : void 0;
  };
  TreeView2.prototype.getItemById = function(itemId) {
    return getItemById(itemId, this.data, this.props.childrenField || CHILDREN_FIELD);
  };
  TreeView2.prototype.dispatchCheckChange = function(dispatchedEvent, item, itemId) {
    dispatchEvent(this.props.onCheckChange, dispatchedEvent, this, { item, itemHierarchicalIndex: itemId });
  };
  TreeView2.prototype.dispatchExpandChange = function(dispatchedEvent, item, itemId) {
    dispatchEvent(this.props.onExpandChange, dispatchedEvent, this, { item, itemHierarchicalIndex: itemId });
  };
  TreeView2.prototype.dispatchItemClick = function(dispatchedEvent, item, itemId) {
    dispatchEvent(this.props.onItemClick, dispatchedEvent, this, { item, itemHierarchicalIndex: itemId });
  };
  TreeView2.prototype.refocusDueToFocusIdField = function() {
    if (this.fieldsSvc && this.fieldsSvc.focusIdField) {
      var focusedItemPublicId = this.state.focusedItemPublicId;
      if (focusedItemPublicId) {
        var focusedItemId = this.props.getFocusHierarchicalIndex ? this.props.getFocusHierarchicalIndex(focusedItemPublicId) : resolveItemId(focusedItemPublicId, this.fieldsSvc.focusIdField, this.data, this.props.childrenField);
        if (focusedItemId !== this.state.focusedItemId) {
          this.allowExplicitFocus = true;
          this.setState({ focusedItemId });
        }
      }
    }
  };
  Object.defineProperty(TreeView2.prototype, "ariaMultiSelectable", {
    get: function() {
      return this.props["aria-multiselectable"] === true || this.props["aria-multiselectable"] === "true";
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(TreeView2.prototype, "data", {
    get: function() {
      return this.props.data || [];
    },
    enumerable: false,
    configurable: true
  });
  TreeView2.prototype.focusDomItem = function(domItem) {
    domItem.focus();
  };
  Object.defineProperty(TreeView2.prototype, "guid", {
    get: function() {
      return this.treeGuid;
    },
    enumerable: false,
    configurable: true
  });
  TreeView2.propTypes = {
    data: PropTypes44.arrayOf(PropTypes44.any),
    animate: PropTypes44.bool,
    tabIndex: PropTypes44.number,
    focusIdField: PropTypes44.string,
    getHierarchicalIndexById: PropTypes44.func,
    onExpandChange: PropTypes44.func,
    onItemClick: PropTypes44.func,
    expandField: PropTypes44.string,
    selectField: PropTypes44.string,
    childrenField: PropTypes44.string,
    hasChildrenField: PropTypes44.string,
    textField: PropTypes44.string,
    disableField: PropTypes44.string,
    item: PropTypes44.any,
    "aria-multiselectable": function(props, propName, componentName) {
      if (props[propName] !== void 0 && props[propName] !== true && props[propName] !== false && props[propName] !== "true" && props[propName] !== "false") {
        return new Error("Invalid prop `" + propName + "` supplied to `" + componentName + "`. Validation failed.");
      }
      return null;
    },
    "aria-label": PropTypes44.string,
    "aria-labelledby": PropTypes44.string,
    size: PropTypes44.oneOf([null, "small", "medium", "large"])
  };
  TreeView2.defaultProps = {
    animate: true,
    expandField: EXPAND_FIELD,
    selectField: SELECT_FIELD,
    hasChildrenField: HAS_CHILDREN_FIELD,
    childrenField: CHILDREN_FIELD,
    textField: TEXT_FIELD,
    disableField: DISABLED_FIELD,
    checkField: CHECK_FIELD,
    checkIndeterminateField: CHECK_INDETERMINATE_FIELD,
    size: "medium"
  };
  return TreeView2;
}(React81.Component);

// node_modules/@progress/kendo-react-treeview/dist/es/TreeViewDragClue.js
var React82 = __toESM(require_react());
var __extends36 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p2 in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p2))
          d2[p2] = b2[p2];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign36 = function() {
  __assign36 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign36.apply(this, arguments);
};
var TreeViewDragClue = function(_super) {
  __extends36(TreeViewDragClue2, _super);
  function TreeViewDragClue2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.state = {
      visible: false,
      top: 0,
      left: 0,
      text: "",
      operationClassName: "k-i-cancel"
    };
    return _this;
  }
  TreeViewDragClue2.prototype.render = function() {
    var dynamicStyle = { top: this.state.top + "px", left: this.state.left + "px" };
    return this.state.visible && React82.createElement(
      "div",
      { className: "k-header k-drag-clue", style: __assign36(__assign36({}, this.props.style), dynamicStyle) },
      React82.createElement(
        "span",
        { className: classNames("k-icon k-drag-status k-icon-with-modifier", this.state.operationClassName) },
        React82.createElement("span", { className: "k-icon k-icon-modifier" })
      ),
      this.state.text
    );
  };
  TreeViewDragClue2.prototype.show = function(top, left, text, operationClassName) {
    this.setState({ visible: true, top, left, text, operationClassName });
  };
  TreeViewDragClue2.prototype.hide = function() {
    this.setState({ visible: false });
  };
  TreeViewDragClue2.defaultProps = { style: { display: "block", position: "absolute", zIndex: 2e4, padding: "4px 6px" } };
  return TreeViewDragClue2;
}(React82.PureComponent);

// node_modules/@progress/kendo-react-treeview/dist/es/TreeViewDragAnalyzer.js
var DROPZONE_BOUNDARY_DELTA = 6;
var TreeViewDragAnalyzer = function() {
  function TreeViewDragAnalyzer2(event) {
    this.event = event;
    this.initialized = false;
    this.destItemId = "";
    this.destTreeViewGuid = "";
    this.itemId = event.itemHierarchicalIndex;
    this.treeViewGuid = event.target.guid;
  }
  TreeViewDragAnalyzer2.prototype.init = function() {
    if (!this.initialized) {
      this.setDestimationMeta(document.elementFromPoint(this.event.clientX, this.event.clientY));
      this.initialized = true;
    }
    return this;
  };
  Object.defineProperty(TreeViewDragAnalyzer2.prototype, "isDropAllowed", {
    get: function() {
      if (this.initialized && this.destItemId && this.destTreeViewGuid) {
        return !"".concat(this.destTreeViewGuid, "_").concat(this.destItemId, "_").startsWith("".concat(this.treeViewGuid, "_").concat(this.itemId, "_"));
      } else {
        return false;
      }
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(TreeViewDragAnalyzer2.prototype, "destinationMeta", {
    get: function() {
      return { itemHierarchicalIndex: this.destItemId, treeViewGuid: this.destTreeViewGuid };
    },
    enumerable: false,
    configurable: true
  });
  TreeViewDragAnalyzer2.prototype.getDropOperation = function() {
    if (this.initialized && this.isDropAllowed) {
      var _a3 = this.destDomNodeWithMeta.getBoundingClientRect(), top_1 = _a3.top, height = _a3.height;
      if (top_1 + height - this.event.clientY < DROPZONE_BOUNDARY_DELTA) {
        return "after";
      } else if (this.event.clientY - top_1 < DROPZONE_BOUNDARY_DELTA) {
        return "before";
      } else {
        return "child";
      }
    } else {
      return void 0;
    }
  };
  TreeViewDragAnalyzer2.prototype.setDestimationMeta = function(element5) {
    var node14 = element5;
    while (node14 && !node14[DOM_KENDO_ITEM_ID_FIELD]) {
      node14 = node14.parentNode;
    }
    if (node14 && node14[DOM_KENDO_ITEM_ID_FIELD]) {
      this.destDomNodeWithMeta = node14;
      this.destItemId = node14[DOM_KENDO_ITEM_ID_FIELD];
      this.destTreeViewGuid = node14[DOM_KENDO_TREEVIEW_GUID_FIELD];
    }
  };
  return TreeViewDragAnalyzer2;
}();

// node_modules/@progress/kendo-react-dropdowns/dist/es/DropDownTree/useDropdownWidth.js
var React83 = __toESM(require_react());
function useDropdownWidth(elementRef, initialStyleWidth, args) {
  var _a3 = React83.useState(initialStyleWidth), width = _a3[0], setWidth = _a3[1];
  React83.useEffect(function() {
    if (width !== void 0 && elementRef.current) {
      setWidth(elementRef.current.offsetWidth);
    }
  }, args);
  return width;
}

// node_modules/@progress/kendo-react-dropdowns/dist/es/DropDownTree/ListNoData.js
var React84 = __toESM(require_react());
var ListNoData = function(props) {
  return React84.createElement(
    "div",
    { className: "k-nodata" },
    React84.createElement("div", null, props.children)
  );
};

// node_modules/@progress/kendo-react-dropdowns/dist/es/DropDownTree/DropDownTree.js
var __assign37 = function() {
  __assign37 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign37.apply(this, arguments);
};
var __spreadArray4 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var sizeMap8 = kendoThemeMaps.sizeMap;
var roundedMap6 = kendoThemeMaps.roundedMap;
var VALIDATION_MESSAGE5 = "Please select a value from the list!";
var ValueHolder = function(props) {
  return React85.createElement("span", { className: "k-input-value-text" }, props.children);
};
var toLevel = function(hierarchicalIndex) {
  return hierarchicalIndex.split("_").map(function(i) {
    return parseInt(i, 10);
  });
};
var getValidity = function(parameters, hasValue) {
  var validationMessage = parameters.validationMessage, valid = parameters.valid, required = parameters.required;
  return {
    customError: validationMessage !== void 0,
    valid: Boolean(valid !== void 0 ? valid : !required || hasValue),
    valueMissing: !hasValue
  };
};
var defaultProps8 = {
  selectField: "selected",
  subItemsField: "items",
  popupSettings: {
    animate: true,
    width: "200px",
    height: "200px"
  },
  required: false,
  validityStyles: true,
  size: "medium",
  rounded: "medium",
  fillMode: "solid"
};
var DropDownTreePropsContext = createPropsContext();
var DropDownTree = React85.forwardRef(function(directProps, ref) {
  var _a3;
  validatePackage2(packageMetadata4);
  var props = usePropsContext(DropDownTreePropsContext, directProps);
  var calculatedId = React85.useMemo(function() {
    return guid();
  }, []);
  var id = props.id || calculatedId;
  var _b = props.data, data = _b === void 0 ? [] : _b, dataItemKey = props.dataItemKey, _c = props.popupSettings, popupSettings = _c === void 0 ? {} : _c, _d = props.style, style = _d === void 0 ? {} : _d, opened = props.opened, disabled = props.disabled, _e = props.onOpen, onOpen = _e === void 0 ? noop : _e, _f = props.onClose, onClose = _f === void 0 ? noop : _f, placeholder = props.placeholder, label = props.label, name = props.name, _g = props.selectField, selectField = _g === void 0 ? defaultProps8.selectField : _g, _h = props.subItemsField, subItemsField = _h === void 0 ? defaultProps8.subItemsField : _h, validationMessage = props.validationMessage, valid = props.valid, required = props.required, validityStyles = props.validityStyles;
  var tabIndex = getTabIndex(props.tabIndex, disabled);
  var target = React85.useRef(null);
  var elementRef = React85.useRef(null);
  var inputRef = React85.useRef(null);
  var selectRef = React85.useRef(null);
  var treeViewRef = React85.useRef(null);
  var skipFocusRef = React85.useRef(false);
  var _j = React85.useState(void 0), stateValue = _j[0], setStateValue = _j[1];
  var controlled = props.value !== void 0;
  var value = controlled ? props.value : stateValue !== void 0 ? stateValue : props.defaultValue;
  var hasValue = isPresent(value);
  var currentValueText = hasValue ? getItemValue(value, props.textField) : "";
  var validity = getValidity({ validationMessage, valid, required }, hasValue);
  var focus = React85.useCallback(function() {
    return elementRef.current && elementRef.current.focus();
  }, []);
  React85.useImperativeHandle(target, function() {
    return {
      props,
      element: elementRef.current,
      focus
    };
  });
  React85.useImperativeHandle(ref, function() {
    return target.current;
  });
  var dir = useRtl(elementRef, props.dir);
  var initialStyleWidth = popupSettings.width !== void 0 ? popupSettings.width : style.width !== void 0 ? style.width : defaultProps8.popupSettings.width;
  var popupWidth = useDropdownWidth(elementRef, initialStyleWidth);
  var popupStyles = __assign37({ width: popupWidth }, dir !== void 0 ? { direction: dir } : {});
  var _k = React85.useState(false), open = _k[0], setOpen = _k[1];
  var isOpen = opened !== void 0 ? opened : open;
  var _l = React85.useState(false), focused = _l[0], setFocused = _l[1];
  var _m = React85.useState(""), filter = _m[0], setFilter = _m[1];
  var setValidity = React85.useCallback(function() {
    if (selectRef.current && selectRef.current.setCustomValidity) {
      selectRef.current.setCustomValidity(validity.valid ? "" : validationMessage === void 0 ? VALIDATION_MESSAGE5 : validationMessage);
    }
  }, [validationMessage, validity]);
  React85.useEffect(setValidity);
  var openPopup = React85.useCallback(function(event) {
    if (!isOpen) {
      if (onOpen) {
        var openEvent = __assign37({}, event);
        onOpen.call(void 0, openEvent);
      }
      if (opened === void 0) {
        setOpen(true);
      }
    }
  }, [isOpen, opened, onOpen]);
  var closePopup = React85.useCallback(function(event) {
    if (isOpen) {
      if (onClose) {
        var closeEvent = __assign37({}, event);
        onClose.call(void 0, closeEvent);
      }
      if (opened === void 0) {
        setOpen(false);
      }
    }
  }, [isOpen, opened, onClose]);
  var onWrapperClick = React85.useCallback(function(event) {
    if (!event.isDefaultPrevented() && target.current) {
      setFocused(true);
      var ev = {
        syntheticEvent: event,
        nativeEvent: event.nativeEvent,
        target: target.current
      };
      (isOpen ? closePopup : openPopup)(ev);
    }
  }, [isOpen, opened, onOpen, onClose]);
  var switchFocus = React85.useCallback(function(focusFn) {
    skipFocusRef.current = true;
    focusFn();
    window.setTimeout(function() {
      return skipFocusRef.current = false;
    }, 0);
  }, []);
  var onWrapperKeyDown = React85.useCallback(function(event) {
    var keyCode = event.keyCode, altKey = event.altKey;
    var treeview = treeViewRef.current && treeViewRef.current.element;
    if (!target.current || event.isDefaultPrevented() && inputRef.current === event.target) {
      return;
    }
    var ev = {
      syntheticEvent: event,
      nativeEvent: event.nativeEvent,
      target: target.current
    };
    if (isOpen) {
      if (keyCode === Keys.esc || altKey && keyCode === Keys.up) {
        event.preventDefault();
        closePopup(ev);
      } else if (treeview && treeview.querySelector(".k-focus") && (keyCode === Keys.up || keyCode === Keys.down || keyCode === Keys.left || keyCode === Keys.right || keyCode === Keys.home || keyCode === Keys.end)) {
        if (keyCode === Keys.up && inputRef.current) {
          var items = Array.from(treeview.querySelectorAll(".k-treeview-item"));
          var focusedItem = __spreadArray4([], items, true).reverse().find(function(i) {
            return Boolean(i && i.querySelector(".k-focus"));
          });
          if (focusedItem && items.indexOf(focusedItem) === 0) {
            return switchFocus(function() {
              focusElement(inputRef.current);
            });
          }
        }
        switchFocus(noop);
      } else if (keyCode === Keys.down) {
        switchFocus(function() {
          focusElement(inputRef.current || treeview);
        });
      }
    } else {
      if (altKey && keyCode === Keys.down) {
        event.preventDefault();
        openPopup(ev);
      }
    }
  }, [isOpen, opened, onOpen, onClose]);
  var onInputKeyDown = React85.useCallback(function(event) {
    var keyCode = event.keyCode, altKey = event.altKey;
    if (altKey || keyCode !== Keys.up && keyCode !== Keys.down) {
      return;
    }
    event.preventDefault();
    switchFocus(keyCode === Keys.up ? function() {
      focusElement(elementRef.current);
    } : function() {
      focusElement(treeViewRef.current && treeViewRef.current.element);
    });
  }, []);
  var focusElement = React85.useCallback(function(element5) {
    if (element5) {
      switchFocus(function() {
        return element5.focus();
      });
    }
  }, []);
  var onPopupOpened = React85.useCallback(function() {
    if (!focused && isOpen && !opened) {
      closePopup({ target: target.current });
    } else {
      if (props.filterable) {
        focusElement(inputRef.current);
      } else {
        focusElement(treeViewRef.current && treeViewRef.current.element);
      }
    }
  }, [onClose, props.filterable, focused, opened, isOpen]);
  var onPopupClosed = React85.useCallback(function() {
    if (focused) {
      focusElement(elementRef.current);
    }
  }, [focused]);
  var onFocus = React85.useCallback(function(event) {
    if (!focused && !skipFocusRef.current) {
      setFocused(true);
      if (props.onFocus && target.current) {
        var focusEvent = {
          syntheticEvent: event,
          nativeEvent: event.nativeEvent,
          target: target.current
        };
        props.onFocus.call(void 0, focusEvent);
      }
    }
  }, [focused, props.onFocus]);
  var onBlur = React85.useCallback(function(event) {
    if (focused && !skipFocusRef.current && target.current) {
      setFocused(false);
      var ev = {
        syntheticEvent: event,
        nativeEvent: event.nativeEvent,
        target: target.current
      };
      if (props.onBlur) {
        var focusEvent = __assign37({}, ev);
        props.onBlur.call(void 0, focusEvent);
      }
      closePopup(ev);
    }
  }, [focused, props.onBlur, isOpen, opened, onClose]);
  var onWrapperMouseDown = React85.useCallback(function() {
    if (focused) {
      switchFocus(noop);
    }
  }, [focused]);
  var changeValue = React85.useCallback(function(event, newValue, hierarchicalIndex) {
    if (props.onChange) {
      var changeEvent = __assign37({ value: newValue, level: hierarchicalIndex ? toLevel(hierarchicalIndex) : [] }, event);
      props.onChange.call(void 0, changeEvent);
    }
    if (!controlled) {
      setStateValue(newValue);
    }
  }, [props.onChange, controlled]);
  var onChange = React85.useCallback(function(event) {
    if (areSame(event.item, value, dataItemKey) || !target.current) {
      return;
    }
    var item = event.item, itemHierarchicalIndex = event.itemHierarchicalIndex, nativeEvent = event.nativeEvent, syntheticEvent = event.syntheticEvent;
    var ev = {
      syntheticEvent,
      nativeEvent,
      target: target.current
    };
    changeValue(ev, item, itemHierarchicalIndex);
    closePopup(ev);
  }, [controlled, value, props.onChange, dataItemKey, isOpen, opened, onClose]);
  var onClear = React85.useCallback(function(event) {
    if (!target.current) {
      return;
    }
    var ev = {
      syntheticEvent: event,
      nativeEvent: event.nativeEvent,
      target: target.current
    };
    changeValue(ev, null);
    closePopup(ev);
    event.preventDefault();
  }, [controlled, props.onChange, isOpen, opened, onClose]);
  var onExpand = React85.useCallback(function(event) {
    event.syntheticEvent.stopPropagation();
    if (props.onExpandChange && target.current) {
      var item = event.item, itemHierarchicalIndex = event.itemHierarchicalIndex, nativeEvent = event.nativeEvent, syntheticEvent = event.syntheticEvent;
      var expandEvent = {
        level: toLevel(itemHierarchicalIndex),
        item,
        nativeEvent,
        syntheticEvent,
        target: target.current
      };
      props.onExpandChange.call(void 0, expandEvent);
    }
  }, [props.onExpandChange]);
  var onFilterChange = React85.useCallback(function(event) {
    if (props.onFilterChange && target.current) {
      var filterDesc = { field: props.textField, operator: "contains", value: event.target.value };
      var ev = {
        filter: filterDesc,
        syntheticEvent: event,
        nativeEvent: event.nativeEvent,
        target: target.current
      };
      props.onFilterChange.call(void 0, ev);
      if (props.filter === void 0) {
        setFilter(event.target.value);
      }
    }
  }, [props.onFilterChange, props.filter, props.textField]);
  var treeViewData = React85.useMemo(function() {
    return controlled || !hasValue ? data : mapTree(data, subItemsField, function(item) {
      var _a4;
      return extendDataItem(item, subItemsField, (_a4 = {}, _a4[selectField] = areSame(item, value, dataItemKey), _a4));
    });
  }, [data, value, controlled, hasValue, selectField, subItemsField]);
  var NoData = props.listNoData || ListNoData;
  var ValueComponent = props.valueHolder || ValueHolder;
  var localization = useLocalization();
  var isValid = !validityStyles || validity.valid;
  var size = props.size, rounded = props.rounded, fillMode = props.fillMode;
  var dropdowntree = React85.createElement(
    "span",
    { className: classNames("k-dropdowntree k-picker", props.className, (_a3 = {}, _a3["k-picker-".concat(sizeMap8[size] || size)] = size, _a3["k-rounded-".concat(roundedMap6[rounded] || rounded)] = rounded, _a3["k-picker-".concat(fillMode)] = fillMode, _a3["k-focus"] = focused, _a3["k-invalid"] = !isValid, _a3["k-loading"] = props.loading, _a3["k-required"] = required, _a3["k-disabled"] = props.disabled, _a3)), tabIndex, accessKey: props.accessKey, id, style: label ? __assign37(__assign37({}, style), { width: void 0 }) : style, dir, ref: elementRef, onKeyDown: disabled ? void 0 : onWrapperKeyDown, onMouseDown: onWrapperMouseDown, onClick: disabled ? void 0 : onWrapperClick, onFocus, onBlur, role: "combobox", "aria-haspopup": "true", "aria-expanded": isOpen, "aria-disabled": disabled, "aria-label": label, "aria-labelledby": props.ariaLabelledBy, "aria-describedby": props.ariaDescribedBy },
    React85.createElement(
      "span",
      { className: "k-input-inner" },
      React85.createElement(ValueComponent, { item: value }, currentValueText || placeholder)
    ),
    props.loading && React85.createElement("span", { className: "k-icon k-i-loading k-input-loading-icon" }),
    hasValue && !disabled && React85.createElement(
      "span",
      { onClick: onClear, className: "k-clear-value", title: localization.toLanguageString(clear, messages3[clear]), role: "button", tabIndex: -1, onMouseDown: function(e) {
        return e.preventDefault();
      } },
      React85.createElement("span", { className: "k-icon k-i-x" })
    ),
    React85.createElement(Button, { tabIndex: -1, type: "button", "aria-label": "select", className: "k-input-button", size, fillMode, themeColor: "base", rounded: null, icon: "caret-alt-down" }),
    React85.createElement(
      "select",
      { name, ref: selectRef, tabIndex: -1, "aria-hidden": true, title: label, style: { opacity: 0, width: 1, border: 0, zIndex: -1, position: "absolute", left: "50%" } },
      React85.createElement("option", { value: props.valueMap ? props.valueMap.call(void 0, value) : value })
    ),
    React85.createElement(
      Popup,
      { className: classNames(popupSettings.className, { "k-rtl": dir === "rtl" }), popupClass: classNames(popupSettings.popupClass, "k-list-container"), style: popupStyles, animate: popupSettings.animate, anchor: elementRef.current, show: isOpen, onOpen: onPopupOpened, onClose: onPopupClosed, appendTo: popupSettings.appendTo },
      props.filterable && React85.createElement(ListFilter_default, { value: props.filter === void 0 ? filter : props.filter, inputRef, onChange: onFilterChange, onKeyDown: onInputKeyDown, size, rounded, fillMode }),
      data.length > 0 ? React85.createElement(TreeView, { ref: treeViewRef, tabIndex, data: treeViewData, focusIdField: dataItemKey, textField: props.textField, selectField, expandField: props.expandField, childrenField: subItemsField, expandIcons: true, onItemClick: onChange, onExpandChange: onExpand, size, item: props.item }) : React85.createElement(NoData, null, localization.toLanguageString(nodata, messages3[nodata]))
    )
  );
  return label ? React85.createElement(FloatingLabel, { label, editorValue: currentValueText, editorPlaceholder: placeholder, editorValid: isValid, editorDisabled: disabled, editorId: id, style: { width: style ? style.width : void 0 }, children: dropdowntree, dir }) : dropdowntree;
});
var propTypes4 = {
  opened: PropTypes45.bool,
  disabled: PropTypes45.bool,
  dir: PropTypes45.string,
  tabIndex: PropTypes45.number,
  accessKey: PropTypes45.string,
  data: PropTypes45.array,
  value: PropTypes45.any,
  valueMap: PropTypes45.func,
  placeholder: PropTypes45.string,
  dataItemKey: PropTypes45.string.isRequired,
  textField: PropTypes45.string.isRequired,
  selectField: PropTypes45.string,
  expandField: PropTypes45.string,
  subItemsField: PropTypes45.string,
  className: PropTypes45.string,
  style: PropTypes45.object,
  label: PropTypes45.string,
  validationMessage: PropTypes45.string,
  validityStyles: PropTypes45.bool,
  valid: PropTypes45.bool,
  required: PropTypes45.bool,
  name: PropTypes45.string,
  id: PropTypes45.string,
  ariaLabelledBy: PropTypes45.string,
  ariaDescribedBy: PropTypes45.string,
  filterable: PropTypes45.bool,
  filter: PropTypes45.string,
  loading: PropTypes45.bool,
  popupSettings: PropTypes45.shape({
    animate: PropTypes45.oneOfType([PropTypes45.bool, PropTypes45.shape({
      openDuration: PropTypes45.number,
      closeDuration: PropTypes45.number
    })]),
    popupClass: PropTypes45.string,
    className: PropTypes45.string,
    appendTo: PropTypes45.any,
    width: PropTypes45.oneOfType([PropTypes45.string, PropTypes45.number]),
    height: PropTypes45.oneOfType([PropTypes45.string, PropTypes45.number])
  }),
  onOpen: PropTypes45.func,
  onClose: PropTypes45.func,
  onFocus: PropTypes45.func,
  onBlur: PropTypes45.func,
  onChange: PropTypes45.func,
  onFilterChange: PropTypes45.func,
  onExpandChange: PropTypes45.func,
  item: PropTypes45.func,
  valueHolder: PropTypes45.func,
  listNoData: PropTypes45.func
};
DropDownTree.displayName = "KendoReactDropDownTree";
DropDownTree.defaultProps = defaultProps8;
DropDownTree.propTypes = propTypes4;

// node_modules/@progress/kendo-react-dropdowns/dist/es/MultiSelectTree/MultiSelectTree.js
var React86 = __toESM(require_react());
var PropTypes46 = __toESM(require_prop_types());
var __assign38 = function() {
  __assign38 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t[p2] = s[p2];
    }
    return t;
  };
  return __assign38.apply(this, arguments);
};
var __spreadArray5 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var VALIDATION_MESSAGE6 = "Please select a value from the list!";
var sizeMap9 = kendoThemeMaps.sizeMap;
var roundedMap7 = kendoThemeMaps.roundedMap;
var toLevel2 = function(hierarchicalIndex) {
  return hierarchicalIndex.split("_").map(function(i) {
    return parseInt(i, 10);
  });
};
var getValidity2 = function(parameters, hasValue) {
  var validationMessage = parameters.validationMessage, valid = parameters.valid, required = parameters.required;
  return {
    customError: validationMessage !== void 0,
    valid: Boolean(valid !== void 0 ? valid : !required || hasValue),
    valueMissing: !hasValue
  };
};
var defaultProps9 = {
  checkField: "checkField",
  checkIndeterminateField: "checkIndeterminateField",
  subItemsField: "items",
  popupSettings: {
    animate: true,
    width: "200px",
    height: "200px"
  },
  size: "medium",
  rounded: "medium",
  fillMode: "solid",
  required: false,
  validityStyles: true
};
var MultiSelectTreePropsContext = createPropsContext();
var MultiSelectTree = React86.forwardRef(function(directProps, ref) {
  var _a3, _b;
  var props = usePropsContext(MultiSelectTreePropsContext, directProps);
  validatePackage2(packageMetadata4);
  var componentGuid = React86.useMemo(function() {
    return guid();
  }, []);
  var id = props.id || componentGuid;
  var _c = props.data, data = _c === void 0 ? [] : _c, dataItemKey = props.dataItemKey, _d = props.popupSettings, popupSettings = _d === void 0 ? {} : _d, _e = props.style, style = _e === void 0 ? {} : _e, opened = props.opened, disabled = props.disabled, _f = props.onOpen, onOpen = _f === void 0 ? noop : _f, _g = props.onClose, onClose = _g === void 0 ? noop : _g, placeholder = props.placeholder, label = props.label, name = props.name, _h = props.checkField, checkField = _h === void 0 ? defaultProps9.checkField : _h, _j = props.checkIndeterminateField, checkIndeterminateField = _j === void 0 ? defaultProps9.checkIndeterminateField : _j, _k = props.subItemsField, subItemsField = _k === void 0 ? defaultProps9.subItemsField : _k, validationMessage = props.validationMessage, valid = props.valid, tags = props.tags, value = props.value, _l = props.required, required = _l === void 0 ? defaultProps9.required : _l, _m = props.validityStyles, validityStyles = _m === void 0 ? defaultProps9.validityStyles : _m;
  var tabIndex = getTabIndex(props.tabIndex, disabled);
  var targetRef = React86.useRef(null);
  var elementRef = React86.useRef(null);
  var inputRef = React86.useRef(null);
  var selectRef = React86.useRef(null);
  var treeViewRef = React86.useRef(null);
  var skipFocusRef = React86.useRef(false);
  var tagsToRenderRef = React86.useRef([]);
  var popupRef = React86.useRef(null);
  var _o = React86.useState(), focusedTagState = _o[0], setFocusedTagState = _o[1];
  var _p = React86.useState(false), openState = _p[0], setOpenState = _p[1];
  var _q = React86.useState(false), focusedState = _q[0], setFocusedState = _q[1];
  var _r = React86.useState(""), filterState = _r[0], setFilterState = _r[1];
  var isOpen = opened !== void 0 ? opened : openState;
  var hasValue = Boolean(Array.isArray(value) && value.length);
  var validity = getValidity2({ validationMessage, valid, required }, hasValue);
  var dir = useRtl(elementRef, props.dir);
  var initialStyleWidth = popupSettings.width !== void 0 ? popupSettings.width : style.width !== void 0 ? style.width : defaultProps9.popupSettings.width;
  var popupWidth = useDropdownWidth(elementRef, initialStyleWidth);
  var popupStyles = __assign38({ width: popupWidth }, dir !== void 0 ? { direction: dir } : {});
  var focus = React86.useCallback(function() {
    return elementRef.current && elementRef.current.focus();
  }, []);
  tagsToRenderRef.current = tags === void 0 ? (value || []).map(function(item) {
    return { text: getItemValue(item, props.textField), data: [item] };
  }) : __spreadArray5([], tags, true);
  React86.useImperativeHandle(targetRef, function() {
    return {
      props,
      element: elementRef.current,
      focus
    };
  });
  React86.useImperativeHandle(ref, function() {
    return targetRef.current;
  });
  var setValidity = React86.useCallback(function() {
    if (selectRef.current && selectRef.current.setCustomValidity) {
      selectRef.current.setCustomValidity(validity.valid ? "" : validationMessage === void 0 ? VALIDATION_MESSAGE6 : validationMessage);
    }
  }, [validationMessage, validity]);
  React86.useEffect(setValidity);
  React86.useEffect(function() {
    if (popupRef.current && isOpen) {
      popupRef.current.setPosition(popupRef.current._popup);
    }
  }, [value, isOpen]);
  var changeValue = React86.useCallback(function(event, relatedItems, operation) {
    if (props.onChange) {
      var changeEvent = __assign38({ items: relatedItems, operation }, event);
      props.onChange.call(void 0, changeEvent);
    }
  }, [props.onChange]);
  var onChange = React86.useCallback(function(event) {
    if (areSame(event.item, value, dataItemKey) || !targetRef.current) {
      return;
    }
    var item = event.item, nativeEvent = event.nativeEvent, syntheticEvent = event.syntheticEvent;
    var ev = {
      syntheticEvent,
      nativeEvent,
      target: targetRef.current
    };
    changeValue(ev, [item], "toggle");
  }, [value, dataItemKey, changeValue]);
  var openPopup = React86.useCallback(function(event) {
    if (!isOpen) {
      if (onOpen) {
        var openEvent = __assign38({}, event);
        onOpen.call(void 0, openEvent);
      }
      if (opened === void 0) {
        setOpenState(true);
      }
    }
  }, [isOpen, opened, onOpen]);
  var closePopup = React86.useCallback(function(event) {
    if (isOpen) {
      if (onClose) {
        var closeEvent = __assign38({}, event);
        onClose.call(void 0, closeEvent);
      }
      if (opened === void 0) {
        setOpenState(false);
      }
    }
  }, [isOpen, opened, onClose]);
  var switchFocus = React86.useCallback(function(focusFn) {
    skipFocusRef.current = true;
    focusFn();
    window.setTimeout(function() {
      return skipFocusRef.current = false;
    }, 0);
  }, []);
  var focusElement = React86.useCallback(function(element5) {
    if (element5) {
      switchFocus(function() {
        return element5.focus();
      });
    }
  }, [switchFocus]);
  var onPopupOpened = React86.useCallback(function() {
    if (!focusedState && isOpen) {
      closePopup({ target: targetRef.current });
    } else {
      if (props.filterable) {
        focusElement(inputRef.current);
      } else {
        focusElement(treeViewRef.current && treeViewRef.current.element);
      }
    }
  }, [focusedState, isOpen, focusElement, closePopup, props.filterable]);
  var onPopupClosed = React86.useCallback(function() {
    if (focusedState) {
      focusElement(elementRef.current);
    }
  }, [focusedState, focusElement]);
  var onFocus = React86.useCallback(function(event) {
    if (!focusedState && !skipFocusRef.current) {
      setFocusedState(true);
      if (props.onFocus && targetRef.current) {
        var focusEvent = {
          syntheticEvent: event,
          nativeEvent: event.nativeEvent,
          target: targetRef.current
        };
        props.onFocus.call(void 0, focusEvent);
      }
    }
  }, [focusedState, props.onFocus]);
  var onBlur = React86.useCallback(function(event) {
    if (focusedState && !skipFocusRef.current && targetRef.current) {
      setFocusedState(false);
      var ev = {
        syntheticEvent: event,
        nativeEvent: event.nativeEvent,
        target: targetRef.current
      };
      if (props.onBlur) {
        var focusEvent = __assign38({}, ev);
        props.onBlur.call(void 0, focusEvent);
      }
      closePopup(ev);
    }
  }, [focusedState, props.onBlur, isOpen, opened, onClose]);
  var onWrapperMouseDown = React86.useCallback(function() {
    if (focusedState) {
      switchFocus(noop);
    }
  }, [focusedState, switchFocus]);
  var onWrapperClick = React86.useCallback(function(event) {
    if (!event.isDefaultPrevented() && targetRef.current) {
      setFocusedState(true);
      var ev = {
        syntheticEvent: event,
        nativeEvent: event.nativeEvent,
        target: targetRef.current
      };
      if (!isOpen) {
        openPopup(ev);
      }
    }
  }, [isOpen, openPopup]);
  var onWrapperKeyDown = React86.useCallback(function(event) {
    var keyCode = event.keyCode, altKey = event.altKey;
    var treeviewElement = treeViewRef.current && treeViewRef.current.element;
    if (!targetRef.current || event.isDefaultPrevented() && inputRef.current === event.target) {
      return;
    }
    var ev = {
      syntheticEvent: event,
      nativeEvent: event.nativeEvent,
      target: targetRef.current
    };
    if (value && value.length > 0 && (keyCode === Keys.left || keyCode === Keys.right || keyCode === Keys.home || keyCode === Keys.end || keyCode === Keys.delete)) {
      var tagsToRender = tagsToRenderRef.current;
      var focusedIndex = focusedTagState ? tagsToRender.findIndex(function(t) {
        return matchTags(t, focusedTagState, dataItemKey);
      }) : -1;
      var newFocusedTag = void 0;
      var hasFocused = focusedIndex !== -1;
      if (keyCode === Keys.left) {
        if (hasFocused) {
          focusedIndex = Math.max(0, focusedIndex - 1);
        } else {
          focusedIndex = tagsToRender.length - 1;
        }
        newFocusedTag = tagsToRender[focusedIndex];
      } else if (keyCode === Keys.right) {
        if (focusedIndex === tagsToRender.length - 1) {
          newFocusedTag = void 0;
        } else if (hasFocused) {
          focusedIndex = Math.min(tagsToRender.length - 1, focusedIndex + 1);
          newFocusedTag = tagsToRender[focusedIndex];
        }
      } else if (keyCode === Keys.home) {
        newFocusedTag = tagsToRender[0];
      } else if (keyCode === Keys.end) {
        newFocusedTag = tagsToRender[tagsToRender.length - 1];
      } else if (keyCode === Keys.delete) {
        if (hasFocused) {
          changeValue(ev, tagsToRender[focusedIndex].data, "delete");
        }
      }
      if (newFocusedTag !== focusedTagState) {
        setFocusedTagState(newFocusedTag);
      }
    }
    if (isOpen) {
      if (keyCode === Keys.esc || altKey && keyCode === Keys.up) {
        event.preventDefault();
        closePopup(ev);
      } else if (treeviewElement && treeviewElement.querySelector(".k-focus") && (keyCode === Keys.up || keyCode === Keys.down || keyCode === Keys.left || keyCode === Keys.right || keyCode === Keys.home || keyCode === Keys.end)) {
        if (keyCode === Keys.up && inputRef.current) {
          var items = Array.from(treeviewElement.querySelectorAll(".k-treeview-item"));
          var focusedItem = __spreadArray5([], items, true).reverse().find(function(i) {
            return Boolean(i && i.querySelector(".k-focus"));
          });
          if (focusedItem && items.indexOf(focusedItem) === 0) {
            return switchFocus(function() {
              focusElement(inputRef.current);
            });
          }
        }
        switchFocus(noop);
      } else if (keyCode === Keys.down) {
        switchFocus(function() {
          focusElement(inputRef.current || treeviewElement);
        });
      }
    } else {
      if (altKey && keyCode === Keys.down) {
        event.preventDefault();
        openPopup(ev);
      }
    }
  }, [isOpen, closePopup, focusElement, switchFocus, openPopup, focusedTagState, dataItemKey, value, changeValue]);
  var onInputKeyDown = React86.useCallback(function(event) {
    var keyCode = event.keyCode, altKey = event.altKey;
    if (altKey || keyCode !== Keys.up && keyCode !== Keys.down) {
      return;
    }
    event.preventDefault();
    switchFocus(keyCode === Keys.up ? function() {
      focusElement(elementRef.current);
    } : function() {
      focusElement(treeViewRef.current && treeViewRef.current.element);
    });
  }, [focusElement, switchFocus]);
  var onClear = React86.useCallback(function(event) {
    if (!targetRef.current) {
      return;
    }
    var ev = {
      syntheticEvent: event,
      nativeEvent: event.nativeEvent,
      target: targetRef.current
    };
    changeValue(ev, [], "clear");
    closePopup(ev);
    event.preventDefault();
  }, [changeValue, closePopup]);
  var onTagDelete = React86.useCallback(function(itemsToRemove, event) {
    closePopup({ target: targetRef.current });
    if (!focusedState) {
      focusElement(inputRef.current);
    }
    changeValue({
      syntheticEvent: event,
      nativeEvent: event.nativeEvent,
      target: targetRef.current
    }, itemsToRemove, "delete");
  }, [changeValue, closePopup, focusElement, focusedState]);
  var onExpand = React86.useCallback(function(event) {
    if (props.onExpandChange && targetRef.current) {
      var item = event.item, itemHierarchicalIndex = event.itemHierarchicalIndex, nativeEvent = event.nativeEvent, syntheticEvent = event.syntheticEvent;
      var expandEvent = {
        level: toLevel2(itemHierarchicalIndex),
        item,
        nativeEvent,
        syntheticEvent,
        target: targetRef.current
      };
      props.onExpandChange.call(void 0, expandEvent);
    }
  }, [props.onExpandChange]);
  var onFilterChange = React86.useCallback(function(event) {
    if (props.onFilterChange && targetRef.current) {
      var filterDesc = { field: props.textField, operator: "contains", value: event.target.value };
      var ev = {
        filter: filterDesc,
        syntheticEvent: event,
        nativeEvent: event.nativeEvent,
        target: targetRef.current
      };
      props.onFilterChange.call(void 0, ev);
      if (props.filter === void 0) {
        setFilterState(event.target.value);
      }
    }
  }, [props.onFilterChange, props.filter, props.textField]);
  var NoData = props.listNoData || ListNoData;
  var localization = useLocalization();
  var isValid = !validityStyles || validity.valid;
  var size = props.size, rounded = props.rounded, fillMode = props.fillMode;
  var multiselecttree = React86.createElement(
    "span",
    { className: classNames("k-multiselect k-input", props.className, (_a3 = {}, _a3["k-input-".concat(sizeMap9[size] || size)] = size, _a3["k-rounded-".concat(roundedMap7[rounded] || rounded)] = rounded, _a3["k-input-".concat(fillMode)] = fillMode, _a3["k-focus"] = focusedState && !disabled, _a3["k-invalid"] = !isValid, _a3["k-disabled"] = disabled, _a3["k-loading"] = props.loading, _a3["k-required"] = required, _a3)), tabIndex, accessKey: props.accessKey, id, style: label ? __assign38(__assign38({}, style), { width: void 0 }) : style, dir, ref: elementRef, onKeyDown: disabled ? void 0 : onWrapperKeyDown, onMouseDown: onWrapperMouseDown, onFocus, onBlur, role: "combobox", "aria-haspopup": "true", "aria-expanded": isOpen, "aria-disabled": disabled, "aria-label": label, "aria-labelledby": props.ariaLabelledBy, "aria-describedby": props.ariaDescribedBy, onClick: disabled ? void 0 : onWrapperClick },
    tagsToRenderRef.current.length > 0 && React86.createElement(
      "div",
      { className: classNames("k-input-values k-chip-list k-selection-multiple", (_b = {}, _b["k-chip-list-".concat(sizeMap9[size] || size)] = size, _b)), role: "listbox", id: "tagslist-" + id },
      React86.createElement(TagList_default, { tag: props.tag, onTagDelete, data: tagsToRenderRef.current, guid: id, focused: focusedTagState ? tagsToRenderRef.current.find(function(t) {
        return matchTags(t, focusedTagState, dataItemKey);
      }) : void 0, size })
    ),
    !hasValue && React86.createElement(
      "span",
      { className: "k-input-inner" },
      React86.createElement("span", { className: "k-input-value-text" }, "\xA0")
    ),
    props.loading && React86.createElement("span", { className: "k-icon k-i-loading k-input-loading-icon" }),
    hasValue && !disabled && React86.createElement(ClearButton_default, { onClick: onClear }),
    React86.createElement(
      "select",
      { name, ref: selectRef, tabIndex: -1, "aria-hidden": true, title: label, style: { opacity: 0, width: 1, border: 0, zIndex: -1, position: "absolute", left: "50%" } },
      React86.createElement("option", { value: props.valueMap ? props.valueMap.call(void 0, value) : value })
    ),
    React86.createElement(
      Popup,
      { popupClass: classNames(popupSettings.popupClass, "k-list-container"), className: classNames(popupSettings.className, { "k-rtl": dir === "rtl" }), style: popupStyles, animate: popupSettings.animate, anchor: elementRef.current, show: isOpen, onOpen: onPopupOpened, onClose: onPopupClosed, appendTo: popupSettings.appendTo, ref: popupRef },
      props.filterable && React86.createElement(ListFilter_default, { value: props.filter === void 0 ? filterState : props.filter, inputRef, onChange: onFilterChange, onKeyDown: onInputKeyDown, tabIndex, size, rounded, fillMode }),
      data.length > 0 ? React86.createElement(TreeView, { ref: treeViewRef, tabIndex, data, focusIdField: dataItemKey, textField: props.textField, checkField, checkIndeterminateField, expandField: props.expandField, childrenField: subItemsField, expandIcons: true, onItemClick: onChange, onCheckChange: onChange, onExpandChange: onExpand, checkboxes: true, size, item: props.item }) : React86.createElement(NoData, null, localization.toLanguageString(nodata, messages3[nodata]))
    )
  );
  return label ? React86.createElement(FloatingLabel, { label, editorValue: hasValue, editorPlaceholder: placeholder, editorValid: isValid, editorDisabled: disabled, editorId: id, style: { width: style ? style.width : void 0 }, children: multiselecttree, dir }) : multiselecttree;
});
var propTypes5 = {
  opened: PropTypes46.bool,
  disabled: PropTypes46.bool,
  dir: PropTypes46.string,
  tabIndex: PropTypes46.number,
  accessKey: PropTypes46.string,
  data: PropTypes46.array,
  value: PropTypes46.any,
  valueMap: PropTypes46.func,
  placeholder: PropTypes46.string,
  dataItemKey: PropTypes46.string.isRequired,
  textField: PropTypes46.string.isRequired,
  checkField: PropTypes46.string,
  checkIndeterminateField: PropTypes46.string,
  expandField: PropTypes46.string,
  subItemsField: PropTypes46.string,
  className: PropTypes46.string,
  style: PropTypes46.object,
  label: PropTypes46.string,
  validationMessage: PropTypes46.string,
  validityStyles: PropTypes46.bool,
  valid: PropTypes46.bool,
  required: PropTypes46.bool,
  name: PropTypes46.string,
  id: PropTypes46.string,
  ariaLabelledBy: PropTypes46.string,
  ariaDescribedBy: PropTypes46.string,
  filterable: PropTypes46.bool,
  filter: PropTypes46.string,
  loading: PropTypes46.bool,
  tags: PropTypes46.arrayOf(PropTypes46.shape({
    text: PropTypes46.string,
    data: PropTypes46.arrayOf(PropTypes46.any)
  })),
  popupSettings: PropTypes46.shape({
    animate: PropTypes46.oneOfType([PropTypes46.bool, PropTypes46.shape({
      openDuration: PropTypes46.number,
      closeDuration: PropTypes46.number
    })]),
    popupClass: PropTypes46.string,
    className: PropTypes46.string,
    appendTo: PropTypes46.any,
    width: PropTypes46.oneOfType([PropTypes46.string, PropTypes46.number]),
    height: PropTypes46.oneOfType([PropTypes46.string, PropTypes46.number])
  }),
  onOpen: PropTypes46.func,
  onClose: PropTypes46.func,
  onFocus: PropTypes46.func,
  onBlur: PropTypes46.func,
  onChange: PropTypes46.func,
  onFilterChange: PropTypes46.func,
  onExpandChange: PropTypes46.func,
  item: PropTypes46.func,
  listNoData: PropTypes46.func
};
MultiSelectTree.displayName = "KendoReactMultiSelectTree";
MultiSelectTree.defaultProps = defaultProps9;
MultiSelectTree.propTypes = propTypes5;

// node_modules/@progress/kendo-react-dropdowns/dist/es/MultiSelectTree/utils.js
var __spreadArray6 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var getValueMap = function(value, idGetter) {
  var map = {};
  if (value && value.length) {
    value.forEach(function(item) {
      map[idGetter(item)] = true;
    });
  }
  return map;
};
var getMultiSelectTreeValue = function(data, options) {
  var items = options.items, dataItemKey = options.dataItemKey, value = options.value, _a3 = options.subItemsField, subItemsField = _a3 === void 0 ? "items" : _a3, operation = options.operation;
  var idGetter = getter(dataItemKey);
  var valueMap = getValueMap(value, idGetter);
  if (operation === "clear") {
    return [];
  } else if (operation === "delete") {
    var deletedItemsMap_1 = getValueMap(items, idGetter);
    return value.filter(function(item) {
      return !deletedItemsMap_1[idGetter(item)];
    });
  }
  var selectedItem = items[0];
  var selectedId = idGetter(selectedItem);
  var subItemGetter = getter(subItemsField);
  var stack = __spreadArray6([], data, true);
  var context2 = [];
  var parents = [];
  var foundItem;
  while (stack.length) {
    var currentItem = stack.pop();
    if (selectedId === idGetter(currentItem)) {
      parents = context2.map(function(contextItem) {
        return contextItem.item;
      });
      foundItem = currentItem;
      break;
    } else {
      if (context2 && context2.length && context2[context2.length - 1].parentPosition === stack.length) {
        context2.pop();
      }
      var subItems = subItemGetter(currentItem);
      if (subItems && subItems.length) {
        context2.push({ item: currentItem, parentPosition: stack.length });
        stack.push.apply(stack, subItems);
      }
    }
  }
  var childrenStack = __spreadArray6([], subItemGetter(foundItem) || [], true);
  var children3 = [];
  while (childrenStack.length) {
    var currentItem = childrenStack.pop();
    children3.push(currentItem);
    var subItems = subItemGetter(currentItem);
    if (subItems && subItems.length) {
      childrenStack.push.apply(childrenStack, subItems);
    }
  }
  var isChecked = !valueMap[selectedId];
  var newValue = [];
  if (isChecked) {
    newValue.push.apply(newValue, value);
    newValue.push(foundItem);
    newValue.push.apply(newValue, children3.filter(function(item) {
      return !valueMap[idGetter(item)];
    }));
    var parentCandidates = parents.filter(function(item) {
      return !valueMap[idGetter(item)];
    });
    var newValueMap_1 = getValueMap(newValue, idGetter);
    for (var i = parentCandidates.length - 1; i > -1; i--) {
      var candidate = parentCandidates[i];
      var subItems = subItemGetter(candidate);
      var checkedChildrenLength = subItems.filter(function(item) {
        return newValueMap_1[idGetter(item)];
      }).length;
      if (checkedChildrenLength < subItems.length) {
        break;
      } else {
        newValue.push(candidate);
        newValueMap_1[idGetter(candidate)] = true;
      }
    }
  } else {
    var foundId_1 = idGetter(foundItem);
    var childrenMap_1 = getValueMap(children3, idGetter);
    var parentsMap_1 = getValueMap(parents, idGetter);
    newValue.push.apply(newValue, value.filter(function(item) {
      var itemId = idGetter(item);
      return !childrenMap_1[itemId] && foundId_1 !== itemId && !parentsMap_1[itemId];
    }));
  }
  return newValue;
};
export {
  AutoComplete,
  AutoCompletePropsContext,
  ComboBox,
  ComboBoxPropsContext,
  DropDownList,
  DropDownListPropsContext,
  DropDownTree,
  DropDownTreePropsContext,
  MultiColumnComboBox,
  MultiColumnComboBoxPropsContext,
  MultiSelect,
  MultiSelectPropsContext,
  MultiSelectTree,
  MultiSelectTreePropsContext,
  getMultiSelectTreeValue,
  getValueMap
};
//# sourceMappingURL=@progress_kendo-react-dropdowns.js.map
